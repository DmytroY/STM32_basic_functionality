
Serial_via_UART.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000a054  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000005fc  0800a118  0800a118  0000b118  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800a714  0800a714  0000c1d8  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  0800a714  0800a714  0000c1d8  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  0800a714  0800a714  0000c1d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800a714  0800a714  0000b714  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800a718  0800a718  0000b718  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001d8  20000000  0800a71c  0000c000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000224  200001d8  0800a8f4  0000c1d8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200003fc  0800a8f4  0000c3fc  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0000c1d8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00006712  00000000  00000000  0000c200  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001773  00000000  00000000  00012912  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000006e8  00000000  00000000  00014088  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000051c  00000000  00000000  00014770  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000cfca  00000000  00000000  00014c8c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000081e7  00000000  00000000  00021c56  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00046713  00000000  00000000  00029e3d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00070550  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002fb4  00000000  00000000  00070594  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000062  00000000  00000000  00073548  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001d8 	.word	0x200001d8
 80000e0:	00000000 	.word	0x00000000
 80000e4:	0800a0fc 	.word	0x0800a0fc

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001dc 	.word	0x200001dc
 8000104:	0800a0fc 	.word	0x0800a0fc

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			@ (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	@ 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			@ (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	@ 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	@ 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			@ (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			@ (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f001 f833 	bl	80014a8 <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f000 ff77 	bl	8001340 <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f001 f825 	bl	80014a8 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			@ (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f001 f81b 	bl	80014a8 <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			@ (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f000 ffa1 	bl	80013c8 <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			@ (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f000 ff97 	bl	80013c8 <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			@ (mov r8, r8)

080004a8 <__aeabi_d2uiz>:
 80004a8:	b570      	push	{r4, r5, r6, lr}
 80004aa:	2200      	movs	r2, #0
 80004ac:	4b0c      	ldr	r3, [pc, #48]	@ (80004e0 <__aeabi_d2uiz+0x38>)
 80004ae:	0004      	movs	r4, r0
 80004b0:	000d      	movs	r5, r1
 80004b2:	f7ff ffef 	bl	8000494 <__aeabi_dcmpge>
 80004b6:	2800      	cmp	r0, #0
 80004b8:	d104      	bne.n	80004c4 <__aeabi_d2uiz+0x1c>
 80004ba:	0020      	movs	r0, r4
 80004bc:	0029      	movs	r1, r5
 80004be:	f001 ff73 	bl	80023a8 <__aeabi_d2iz>
 80004c2:	bd70      	pop	{r4, r5, r6, pc}
 80004c4:	4b06      	ldr	r3, [pc, #24]	@ (80004e0 <__aeabi_d2uiz+0x38>)
 80004c6:	2200      	movs	r2, #0
 80004c8:	0020      	movs	r0, r4
 80004ca:	0029      	movs	r1, r5
 80004cc:	f001 fb40 	bl	8001b50 <__aeabi_dsub>
 80004d0:	f001 ff6a 	bl	80023a8 <__aeabi_d2iz>
 80004d4:	2380      	movs	r3, #128	@ 0x80
 80004d6:	061b      	lsls	r3, r3, #24
 80004d8:	469c      	mov	ip, r3
 80004da:	4460      	add	r0, ip
 80004dc:	e7f1      	b.n	80004c2 <__aeabi_d2uiz+0x1a>
 80004de:	46c0      	nop			@ (mov r8, r8)
 80004e0:	41e00000 	.word	0x41e00000

080004e4 <__aeabi_d2lz>:
 80004e4:	b570      	push	{r4, r5, r6, lr}
 80004e6:	2200      	movs	r2, #0
 80004e8:	2300      	movs	r3, #0
 80004ea:	0004      	movs	r4, r0
 80004ec:	000d      	movs	r5, r1
 80004ee:	f7ff ffb3 	bl	8000458 <__aeabi_dcmplt>
 80004f2:	2800      	cmp	r0, #0
 80004f4:	d108      	bne.n	8000508 <__aeabi_d2lz+0x24>
 80004f6:	0020      	movs	r0, r4
 80004f8:	0029      	movs	r1, r5
 80004fa:	f000 f80f 	bl	800051c <__aeabi_d2ulz>
 80004fe:	0002      	movs	r2, r0
 8000500:	000b      	movs	r3, r1
 8000502:	0010      	movs	r0, r2
 8000504:	0019      	movs	r1, r3
 8000506:	bd70      	pop	{r4, r5, r6, pc}
 8000508:	2380      	movs	r3, #128	@ 0x80
 800050a:	061b      	lsls	r3, r3, #24
 800050c:	18e9      	adds	r1, r5, r3
 800050e:	0020      	movs	r0, r4
 8000510:	f000 f804 	bl	800051c <__aeabi_d2ulz>
 8000514:	2300      	movs	r3, #0
 8000516:	4242      	negs	r2, r0
 8000518:	418b      	sbcs	r3, r1
 800051a:	e7f2      	b.n	8000502 <__aeabi_d2lz+0x1e>

0800051c <__aeabi_d2ulz>:
 800051c:	b570      	push	{r4, r5, r6, lr}
 800051e:	2200      	movs	r2, #0
 8000520:	4b0b      	ldr	r3, [pc, #44]	@ (8000550 <__aeabi_d2ulz+0x34>)
 8000522:	000d      	movs	r5, r1
 8000524:	0004      	movs	r4, r0
 8000526:	f001 f82d 	bl	8001584 <__aeabi_dmul>
 800052a:	f7ff ffbd 	bl	80004a8 <__aeabi_d2uiz>
 800052e:	0006      	movs	r6, r0
 8000530:	f001 ffa4 	bl	800247c <__aeabi_ui2d>
 8000534:	2200      	movs	r2, #0
 8000536:	4b07      	ldr	r3, [pc, #28]	@ (8000554 <__aeabi_d2ulz+0x38>)
 8000538:	f001 f824 	bl	8001584 <__aeabi_dmul>
 800053c:	0002      	movs	r2, r0
 800053e:	000b      	movs	r3, r1
 8000540:	0020      	movs	r0, r4
 8000542:	0029      	movs	r1, r5
 8000544:	f001 fb04 	bl	8001b50 <__aeabi_dsub>
 8000548:	f7ff ffae 	bl	80004a8 <__aeabi_d2uiz>
 800054c:	0031      	movs	r1, r6
 800054e:	bd70      	pop	{r4, r5, r6, pc}
 8000550:	3df00000 	.word	0x3df00000
 8000554:	41f00000 	.word	0x41f00000

08000558 <__aeabi_l2d>:
 8000558:	b570      	push	{r4, r5, r6, lr}
 800055a:	0006      	movs	r6, r0
 800055c:	0008      	movs	r0, r1
 800055e:	f001 ff5f 	bl	8002420 <__aeabi_i2d>
 8000562:	2200      	movs	r2, #0
 8000564:	4b06      	ldr	r3, [pc, #24]	@ (8000580 <__aeabi_l2d+0x28>)
 8000566:	f001 f80d 	bl	8001584 <__aeabi_dmul>
 800056a:	000d      	movs	r5, r1
 800056c:	0004      	movs	r4, r0
 800056e:	0030      	movs	r0, r6
 8000570:	f001 ff84 	bl	800247c <__aeabi_ui2d>
 8000574:	002b      	movs	r3, r5
 8000576:	0022      	movs	r2, r4
 8000578:	f000 f804 	bl	8000584 <__aeabi_dadd>
 800057c:	bd70      	pop	{r4, r5, r6, pc}
 800057e:	46c0      	nop			@ (mov r8, r8)
 8000580:	41f00000 	.word	0x41f00000

08000584 <__aeabi_dadd>:
 8000584:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000586:	464f      	mov	r7, r9
 8000588:	4646      	mov	r6, r8
 800058a:	46d6      	mov	lr, sl
 800058c:	b5c0      	push	{r6, r7, lr}
 800058e:	b082      	sub	sp, #8
 8000590:	9000      	str	r0, [sp, #0]
 8000592:	9101      	str	r1, [sp, #4]
 8000594:	030e      	lsls	r6, r1, #12
 8000596:	004c      	lsls	r4, r1, #1
 8000598:	0fcd      	lsrs	r5, r1, #31
 800059a:	0a71      	lsrs	r1, r6, #9
 800059c:	9e00      	ldr	r6, [sp, #0]
 800059e:	005f      	lsls	r7, r3, #1
 80005a0:	0f76      	lsrs	r6, r6, #29
 80005a2:	430e      	orrs	r6, r1
 80005a4:	9900      	ldr	r1, [sp, #0]
 80005a6:	9200      	str	r2, [sp, #0]
 80005a8:	9301      	str	r3, [sp, #4]
 80005aa:	00c9      	lsls	r1, r1, #3
 80005ac:	4689      	mov	r9, r1
 80005ae:	0319      	lsls	r1, r3, #12
 80005b0:	0d7b      	lsrs	r3, r7, #21
 80005b2:	4698      	mov	r8, r3
 80005b4:	9b01      	ldr	r3, [sp, #4]
 80005b6:	0a49      	lsrs	r1, r1, #9
 80005b8:	0fdb      	lsrs	r3, r3, #31
 80005ba:	469c      	mov	ip, r3
 80005bc:	9b00      	ldr	r3, [sp, #0]
 80005be:	9a00      	ldr	r2, [sp, #0]
 80005c0:	0f5b      	lsrs	r3, r3, #29
 80005c2:	430b      	orrs	r3, r1
 80005c4:	4641      	mov	r1, r8
 80005c6:	0d64      	lsrs	r4, r4, #21
 80005c8:	00d2      	lsls	r2, r2, #3
 80005ca:	1a61      	subs	r1, r4, r1
 80005cc:	4565      	cmp	r5, ip
 80005ce:	d100      	bne.n	80005d2 <__aeabi_dadd+0x4e>
 80005d0:	e0a6      	b.n	8000720 <__aeabi_dadd+0x19c>
 80005d2:	2900      	cmp	r1, #0
 80005d4:	dd72      	ble.n	80006bc <__aeabi_dadd+0x138>
 80005d6:	4647      	mov	r7, r8
 80005d8:	2f00      	cmp	r7, #0
 80005da:	d100      	bne.n	80005de <__aeabi_dadd+0x5a>
 80005dc:	e0dd      	b.n	800079a <__aeabi_dadd+0x216>
 80005de:	4fcc      	ldr	r7, [pc, #816]	@ (8000910 <__aeabi_dadd+0x38c>)
 80005e0:	42bc      	cmp	r4, r7
 80005e2:	d100      	bne.n	80005e6 <__aeabi_dadd+0x62>
 80005e4:	e19a      	b.n	800091c <__aeabi_dadd+0x398>
 80005e6:	2701      	movs	r7, #1
 80005e8:	2938      	cmp	r1, #56	@ 0x38
 80005ea:	dc17      	bgt.n	800061c <__aeabi_dadd+0x98>
 80005ec:	2780      	movs	r7, #128	@ 0x80
 80005ee:	043f      	lsls	r7, r7, #16
 80005f0:	433b      	orrs	r3, r7
 80005f2:	291f      	cmp	r1, #31
 80005f4:	dd00      	ble.n	80005f8 <__aeabi_dadd+0x74>
 80005f6:	e1dd      	b.n	80009b4 <__aeabi_dadd+0x430>
 80005f8:	2720      	movs	r7, #32
 80005fa:	1a78      	subs	r0, r7, r1
 80005fc:	001f      	movs	r7, r3
 80005fe:	4087      	lsls	r7, r0
 8000600:	46ba      	mov	sl, r7
 8000602:	0017      	movs	r7, r2
 8000604:	40cf      	lsrs	r7, r1
 8000606:	4684      	mov	ip, r0
 8000608:	0038      	movs	r0, r7
 800060a:	4657      	mov	r7, sl
 800060c:	4307      	orrs	r7, r0
 800060e:	4660      	mov	r0, ip
 8000610:	4082      	lsls	r2, r0
 8000612:	40cb      	lsrs	r3, r1
 8000614:	1e50      	subs	r0, r2, #1
 8000616:	4182      	sbcs	r2, r0
 8000618:	1af6      	subs	r6, r6, r3
 800061a:	4317      	orrs	r7, r2
 800061c:	464b      	mov	r3, r9
 800061e:	1bdf      	subs	r7, r3, r7
 8000620:	45b9      	cmp	r9, r7
 8000622:	4180      	sbcs	r0, r0
 8000624:	4240      	negs	r0, r0
 8000626:	1a36      	subs	r6, r6, r0
 8000628:	0233      	lsls	r3, r6, #8
 800062a:	d400      	bmi.n	800062e <__aeabi_dadd+0xaa>
 800062c:	e0ff      	b.n	800082e <__aeabi_dadd+0x2aa>
 800062e:	0276      	lsls	r6, r6, #9
 8000630:	0a76      	lsrs	r6, r6, #9
 8000632:	2e00      	cmp	r6, #0
 8000634:	d100      	bne.n	8000638 <__aeabi_dadd+0xb4>
 8000636:	e13c      	b.n	80008b2 <__aeabi_dadd+0x32e>
 8000638:	0030      	movs	r0, r6
 800063a:	f002 f80d 	bl	8002658 <__clzsi2>
 800063e:	0003      	movs	r3, r0
 8000640:	3b08      	subs	r3, #8
 8000642:	2120      	movs	r1, #32
 8000644:	0038      	movs	r0, r7
 8000646:	1aca      	subs	r2, r1, r3
 8000648:	40d0      	lsrs	r0, r2
 800064a:	409e      	lsls	r6, r3
 800064c:	0002      	movs	r2, r0
 800064e:	409f      	lsls	r7, r3
 8000650:	4332      	orrs	r2, r6
 8000652:	429c      	cmp	r4, r3
 8000654:	dd00      	ble.n	8000658 <__aeabi_dadd+0xd4>
 8000656:	e1a6      	b.n	80009a6 <__aeabi_dadd+0x422>
 8000658:	1b18      	subs	r0, r3, r4
 800065a:	3001      	adds	r0, #1
 800065c:	1a09      	subs	r1, r1, r0
 800065e:	003e      	movs	r6, r7
 8000660:	408f      	lsls	r7, r1
 8000662:	40c6      	lsrs	r6, r0
 8000664:	1e7b      	subs	r3, r7, #1
 8000666:	419f      	sbcs	r7, r3
 8000668:	0013      	movs	r3, r2
 800066a:	408b      	lsls	r3, r1
 800066c:	4337      	orrs	r7, r6
 800066e:	431f      	orrs	r7, r3
 8000670:	40c2      	lsrs	r2, r0
 8000672:	003b      	movs	r3, r7
 8000674:	0016      	movs	r6, r2
 8000676:	2400      	movs	r4, #0
 8000678:	4313      	orrs	r3, r2
 800067a:	d100      	bne.n	800067e <__aeabi_dadd+0xfa>
 800067c:	e1df      	b.n	8000a3e <__aeabi_dadd+0x4ba>
 800067e:	077b      	lsls	r3, r7, #29
 8000680:	d100      	bne.n	8000684 <__aeabi_dadd+0x100>
 8000682:	e332      	b.n	8000cea <__aeabi_dadd+0x766>
 8000684:	230f      	movs	r3, #15
 8000686:	003a      	movs	r2, r7
 8000688:	403b      	ands	r3, r7
 800068a:	2b04      	cmp	r3, #4
 800068c:	d004      	beq.n	8000698 <__aeabi_dadd+0x114>
 800068e:	1d3a      	adds	r2, r7, #4
 8000690:	42ba      	cmp	r2, r7
 8000692:	41bf      	sbcs	r7, r7
 8000694:	427f      	negs	r7, r7
 8000696:	19f6      	adds	r6, r6, r7
 8000698:	0233      	lsls	r3, r6, #8
 800069a:	d400      	bmi.n	800069e <__aeabi_dadd+0x11a>
 800069c:	e323      	b.n	8000ce6 <__aeabi_dadd+0x762>
 800069e:	4b9c      	ldr	r3, [pc, #624]	@ (8000910 <__aeabi_dadd+0x38c>)
 80006a0:	3401      	adds	r4, #1
 80006a2:	429c      	cmp	r4, r3
 80006a4:	d100      	bne.n	80006a8 <__aeabi_dadd+0x124>
 80006a6:	e0b4      	b.n	8000812 <__aeabi_dadd+0x28e>
 80006a8:	4b9a      	ldr	r3, [pc, #616]	@ (8000914 <__aeabi_dadd+0x390>)
 80006aa:	0564      	lsls	r4, r4, #21
 80006ac:	401e      	ands	r6, r3
 80006ae:	0d64      	lsrs	r4, r4, #21
 80006b0:	0777      	lsls	r7, r6, #29
 80006b2:	08d2      	lsrs	r2, r2, #3
 80006b4:	0276      	lsls	r6, r6, #9
 80006b6:	4317      	orrs	r7, r2
 80006b8:	0b36      	lsrs	r6, r6, #12
 80006ba:	e0ac      	b.n	8000816 <__aeabi_dadd+0x292>
 80006bc:	2900      	cmp	r1, #0
 80006be:	d100      	bne.n	80006c2 <__aeabi_dadd+0x13e>
 80006c0:	e07e      	b.n	80007c0 <__aeabi_dadd+0x23c>
 80006c2:	4641      	mov	r1, r8
 80006c4:	1b09      	subs	r1, r1, r4
 80006c6:	2c00      	cmp	r4, #0
 80006c8:	d000      	beq.n	80006cc <__aeabi_dadd+0x148>
 80006ca:	e160      	b.n	800098e <__aeabi_dadd+0x40a>
 80006cc:	0034      	movs	r4, r6
 80006ce:	4648      	mov	r0, r9
 80006d0:	4304      	orrs	r4, r0
 80006d2:	d100      	bne.n	80006d6 <__aeabi_dadd+0x152>
 80006d4:	e1c9      	b.n	8000a6a <__aeabi_dadd+0x4e6>
 80006d6:	1e4c      	subs	r4, r1, #1
 80006d8:	2901      	cmp	r1, #1
 80006da:	d100      	bne.n	80006de <__aeabi_dadd+0x15a>
 80006dc:	e22e      	b.n	8000b3c <__aeabi_dadd+0x5b8>
 80006de:	4d8c      	ldr	r5, [pc, #560]	@ (8000910 <__aeabi_dadd+0x38c>)
 80006e0:	42a9      	cmp	r1, r5
 80006e2:	d100      	bne.n	80006e6 <__aeabi_dadd+0x162>
 80006e4:	e224      	b.n	8000b30 <__aeabi_dadd+0x5ac>
 80006e6:	2701      	movs	r7, #1
 80006e8:	2c38      	cmp	r4, #56	@ 0x38
 80006ea:	dc11      	bgt.n	8000710 <__aeabi_dadd+0x18c>
 80006ec:	0021      	movs	r1, r4
 80006ee:	291f      	cmp	r1, #31
 80006f0:	dd00      	ble.n	80006f4 <__aeabi_dadd+0x170>
 80006f2:	e20b      	b.n	8000b0c <__aeabi_dadd+0x588>
 80006f4:	2420      	movs	r4, #32
 80006f6:	0037      	movs	r7, r6
 80006f8:	4648      	mov	r0, r9
 80006fa:	1a64      	subs	r4, r4, r1
 80006fc:	40a7      	lsls	r7, r4
 80006fe:	40c8      	lsrs	r0, r1
 8000700:	4307      	orrs	r7, r0
 8000702:	4648      	mov	r0, r9
 8000704:	40a0      	lsls	r0, r4
 8000706:	40ce      	lsrs	r6, r1
 8000708:	1e44      	subs	r4, r0, #1
 800070a:	41a0      	sbcs	r0, r4
 800070c:	1b9b      	subs	r3, r3, r6
 800070e:	4307      	orrs	r7, r0
 8000710:	1bd7      	subs	r7, r2, r7
 8000712:	42ba      	cmp	r2, r7
 8000714:	4192      	sbcs	r2, r2
 8000716:	4252      	negs	r2, r2
 8000718:	4665      	mov	r5, ip
 800071a:	4644      	mov	r4, r8
 800071c:	1a9e      	subs	r6, r3, r2
 800071e:	e783      	b.n	8000628 <__aeabi_dadd+0xa4>
 8000720:	2900      	cmp	r1, #0
 8000722:	dc00      	bgt.n	8000726 <__aeabi_dadd+0x1a2>
 8000724:	e09c      	b.n	8000860 <__aeabi_dadd+0x2dc>
 8000726:	4647      	mov	r7, r8
 8000728:	2f00      	cmp	r7, #0
 800072a:	d167      	bne.n	80007fc <__aeabi_dadd+0x278>
 800072c:	001f      	movs	r7, r3
 800072e:	4317      	orrs	r7, r2
 8000730:	d100      	bne.n	8000734 <__aeabi_dadd+0x1b0>
 8000732:	e0e4      	b.n	80008fe <__aeabi_dadd+0x37a>
 8000734:	1e48      	subs	r0, r1, #1
 8000736:	2901      	cmp	r1, #1
 8000738:	d100      	bne.n	800073c <__aeabi_dadd+0x1b8>
 800073a:	e19b      	b.n	8000a74 <__aeabi_dadd+0x4f0>
 800073c:	4f74      	ldr	r7, [pc, #464]	@ (8000910 <__aeabi_dadd+0x38c>)
 800073e:	42b9      	cmp	r1, r7
 8000740:	d100      	bne.n	8000744 <__aeabi_dadd+0x1c0>
 8000742:	e0eb      	b.n	800091c <__aeabi_dadd+0x398>
 8000744:	2701      	movs	r7, #1
 8000746:	0001      	movs	r1, r0
 8000748:	2838      	cmp	r0, #56	@ 0x38
 800074a:	dc11      	bgt.n	8000770 <__aeabi_dadd+0x1ec>
 800074c:	291f      	cmp	r1, #31
 800074e:	dd00      	ble.n	8000752 <__aeabi_dadd+0x1ce>
 8000750:	e1c7      	b.n	8000ae2 <__aeabi_dadd+0x55e>
 8000752:	2720      	movs	r7, #32
 8000754:	1a78      	subs	r0, r7, r1
 8000756:	001f      	movs	r7, r3
 8000758:	4684      	mov	ip, r0
 800075a:	4087      	lsls	r7, r0
 800075c:	0010      	movs	r0, r2
 800075e:	40c8      	lsrs	r0, r1
 8000760:	4307      	orrs	r7, r0
 8000762:	4660      	mov	r0, ip
 8000764:	4082      	lsls	r2, r0
 8000766:	40cb      	lsrs	r3, r1
 8000768:	1e50      	subs	r0, r2, #1
 800076a:	4182      	sbcs	r2, r0
 800076c:	18f6      	adds	r6, r6, r3
 800076e:	4317      	orrs	r7, r2
 8000770:	444f      	add	r7, r9
 8000772:	454f      	cmp	r7, r9
 8000774:	4180      	sbcs	r0, r0
 8000776:	4240      	negs	r0, r0
 8000778:	1836      	adds	r6, r6, r0
 800077a:	0233      	lsls	r3, r6, #8
 800077c:	d557      	bpl.n	800082e <__aeabi_dadd+0x2aa>
 800077e:	4b64      	ldr	r3, [pc, #400]	@ (8000910 <__aeabi_dadd+0x38c>)
 8000780:	3401      	adds	r4, #1
 8000782:	429c      	cmp	r4, r3
 8000784:	d045      	beq.n	8000812 <__aeabi_dadd+0x28e>
 8000786:	2101      	movs	r1, #1
 8000788:	4b62      	ldr	r3, [pc, #392]	@ (8000914 <__aeabi_dadd+0x390>)
 800078a:	087a      	lsrs	r2, r7, #1
 800078c:	401e      	ands	r6, r3
 800078e:	4039      	ands	r1, r7
 8000790:	430a      	orrs	r2, r1
 8000792:	07f7      	lsls	r7, r6, #31
 8000794:	4317      	orrs	r7, r2
 8000796:	0876      	lsrs	r6, r6, #1
 8000798:	e771      	b.n	800067e <__aeabi_dadd+0xfa>
 800079a:	001f      	movs	r7, r3
 800079c:	4317      	orrs	r7, r2
 800079e:	d100      	bne.n	80007a2 <__aeabi_dadd+0x21e>
 80007a0:	e0ad      	b.n	80008fe <__aeabi_dadd+0x37a>
 80007a2:	1e4f      	subs	r7, r1, #1
 80007a4:	46bc      	mov	ip, r7
 80007a6:	2901      	cmp	r1, #1
 80007a8:	d100      	bne.n	80007ac <__aeabi_dadd+0x228>
 80007aa:	e182      	b.n	8000ab2 <__aeabi_dadd+0x52e>
 80007ac:	4f58      	ldr	r7, [pc, #352]	@ (8000910 <__aeabi_dadd+0x38c>)
 80007ae:	42b9      	cmp	r1, r7
 80007b0:	d100      	bne.n	80007b4 <__aeabi_dadd+0x230>
 80007b2:	e190      	b.n	8000ad6 <__aeabi_dadd+0x552>
 80007b4:	4661      	mov	r1, ip
 80007b6:	2701      	movs	r7, #1
 80007b8:	2938      	cmp	r1, #56	@ 0x38
 80007ba:	dd00      	ble.n	80007be <__aeabi_dadd+0x23a>
 80007bc:	e72e      	b.n	800061c <__aeabi_dadd+0x98>
 80007be:	e718      	b.n	80005f2 <__aeabi_dadd+0x6e>
 80007c0:	4f55      	ldr	r7, [pc, #340]	@ (8000918 <__aeabi_dadd+0x394>)
 80007c2:	1c61      	adds	r1, r4, #1
 80007c4:	4239      	tst	r1, r7
 80007c6:	d000      	beq.n	80007ca <__aeabi_dadd+0x246>
 80007c8:	e0d0      	b.n	800096c <__aeabi_dadd+0x3e8>
 80007ca:	0031      	movs	r1, r6
 80007cc:	4648      	mov	r0, r9
 80007ce:	001f      	movs	r7, r3
 80007d0:	4301      	orrs	r1, r0
 80007d2:	4317      	orrs	r7, r2
 80007d4:	2c00      	cmp	r4, #0
 80007d6:	d000      	beq.n	80007da <__aeabi_dadd+0x256>
 80007d8:	e13d      	b.n	8000a56 <__aeabi_dadd+0x4d2>
 80007da:	2900      	cmp	r1, #0
 80007dc:	d100      	bne.n	80007e0 <__aeabi_dadd+0x25c>
 80007de:	e1bc      	b.n	8000b5a <__aeabi_dadd+0x5d6>
 80007e0:	2f00      	cmp	r7, #0
 80007e2:	d000      	beq.n	80007e6 <__aeabi_dadd+0x262>
 80007e4:	e1bf      	b.n	8000b66 <__aeabi_dadd+0x5e2>
 80007e6:	464b      	mov	r3, r9
 80007e8:	2100      	movs	r1, #0
 80007ea:	08d8      	lsrs	r0, r3, #3
 80007ec:	0777      	lsls	r7, r6, #29
 80007ee:	4307      	orrs	r7, r0
 80007f0:	08f0      	lsrs	r0, r6, #3
 80007f2:	0306      	lsls	r6, r0, #12
 80007f4:	054c      	lsls	r4, r1, #21
 80007f6:	0b36      	lsrs	r6, r6, #12
 80007f8:	0d64      	lsrs	r4, r4, #21
 80007fa:	e00c      	b.n	8000816 <__aeabi_dadd+0x292>
 80007fc:	4f44      	ldr	r7, [pc, #272]	@ (8000910 <__aeabi_dadd+0x38c>)
 80007fe:	42bc      	cmp	r4, r7
 8000800:	d100      	bne.n	8000804 <__aeabi_dadd+0x280>
 8000802:	e08b      	b.n	800091c <__aeabi_dadd+0x398>
 8000804:	2701      	movs	r7, #1
 8000806:	2938      	cmp	r1, #56	@ 0x38
 8000808:	dcb2      	bgt.n	8000770 <__aeabi_dadd+0x1ec>
 800080a:	2780      	movs	r7, #128	@ 0x80
 800080c:	043f      	lsls	r7, r7, #16
 800080e:	433b      	orrs	r3, r7
 8000810:	e79c      	b.n	800074c <__aeabi_dadd+0x1c8>
 8000812:	2600      	movs	r6, #0
 8000814:	2700      	movs	r7, #0
 8000816:	0524      	lsls	r4, r4, #20
 8000818:	4334      	orrs	r4, r6
 800081a:	07ed      	lsls	r5, r5, #31
 800081c:	432c      	orrs	r4, r5
 800081e:	0038      	movs	r0, r7
 8000820:	0021      	movs	r1, r4
 8000822:	b002      	add	sp, #8
 8000824:	bce0      	pop	{r5, r6, r7}
 8000826:	46ba      	mov	sl, r7
 8000828:	46b1      	mov	r9, r6
 800082a:	46a8      	mov	r8, r5
 800082c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800082e:	077b      	lsls	r3, r7, #29
 8000830:	d004      	beq.n	800083c <__aeabi_dadd+0x2b8>
 8000832:	230f      	movs	r3, #15
 8000834:	403b      	ands	r3, r7
 8000836:	2b04      	cmp	r3, #4
 8000838:	d000      	beq.n	800083c <__aeabi_dadd+0x2b8>
 800083a:	e728      	b.n	800068e <__aeabi_dadd+0x10a>
 800083c:	08f8      	lsrs	r0, r7, #3
 800083e:	4b34      	ldr	r3, [pc, #208]	@ (8000910 <__aeabi_dadd+0x38c>)
 8000840:	0777      	lsls	r7, r6, #29
 8000842:	4307      	orrs	r7, r0
 8000844:	08f0      	lsrs	r0, r6, #3
 8000846:	429c      	cmp	r4, r3
 8000848:	d000      	beq.n	800084c <__aeabi_dadd+0x2c8>
 800084a:	e24a      	b.n	8000ce2 <__aeabi_dadd+0x75e>
 800084c:	003b      	movs	r3, r7
 800084e:	4303      	orrs	r3, r0
 8000850:	d059      	beq.n	8000906 <__aeabi_dadd+0x382>
 8000852:	2680      	movs	r6, #128	@ 0x80
 8000854:	0336      	lsls	r6, r6, #12
 8000856:	4306      	orrs	r6, r0
 8000858:	0336      	lsls	r6, r6, #12
 800085a:	4c2d      	ldr	r4, [pc, #180]	@ (8000910 <__aeabi_dadd+0x38c>)
 800085c:	0b36      	lsrs	r6, r6, #12
 800085e:	e7da      	b.n	8000816 <__aeabi_dadd+0x292>
 8000860:	2900      	cmp	r1, #0
 8000862:	d061      	beq.n	8000928 <__aeabi_dadd+0x3a4>
 8000864:	4641      	mov	r1, r8
 8000866:	1b09      	subs	r1, r1, r4
 8000868:	2c00      	cmp	r4, #0
 800086a:	d100      	bne.n	800086e <__aeabi_dadd+0x2ea>
 800086c:	e0b9      	b.n	80009e2 <__aeabi_dadd+0x45e>
 800086e:	4c28      	ldr	r4, [pc, #160]	@ (8000910 <__aeabi_dadd+0x38c>)
 8000870:	45a0      	cmp	r8, r4
 8000872:	d100      	bne.n	8000876 <__aeabi_dadd+0x2f2>
 8000874:	e1a5      	b.n	8000bc2 <__aeabi_dadd+0x63e>
 8000876:	2701      	movs	r7, #1
 8000878:	2938      	cmp	r1, #56	@ 0x38
 800087a:	dc13      	bgt.n	80008a4 <__aeabi_dadd+0x320>
 800087c:	2480      	movs	r4, #128	@ 0x80
 800087e:	0424      	lsls	r4, r4, #16
 8000880:	4326      	orrs	r6, r4
 8000882:	291f      	cmp	r1, #31
 8000884:	dd00      	ble.n	8000888 <__aeabi_dadd+0x304>
 8000886:	e1c8      	b.n	8000c1a <__aeabi_dadd+0x696>
 8000888:	2420      	movs	r4, #32
 800088a:	0037      	movs	r7, r6
 800088c:	4648      	mov	r0, r9
 800088e:	1a64      	subs	r4, r4, r1
 8000890:	40a7      	lsls	r7, r4
 8000892:	40c8      	lsrs	r0, r1
 8000894:	4307      	orrs	r7, r0
 8000896:	4648      	mov	r0, r9
 8000898:	40a0      	lsls	r0, r4
 800089a:	40ce      	lsrs	r6, r1
 800089c:	1e44      	subs	r4, r0, #1
 800089e:	41a0      	sbcs	r0, r4
 80008a0:	199b      	adds	r3, r3, r6
 80008a2:	4307      	orrs	r7, r0
 80008a4:	18bf      	adds	r7, r7, r2
 80008a6:	4297      	cmp	r7, r2
 80008a8:	4192      	sbcs	r2, r2
 80008aa:	4252      	negs	r2, r2
 80008ac:	4644      	mov	r4, r8
 80008ae:	18d6      	adds	r6, r2, r3
 80008b0:	e763      	b.n	800077a <__aeabi_dadd+0x1f6>
 80008b2:	0038      	movs	r0, r7
 80008b4:	f001 fed0 	bl	8002658 <__clzsi2>
 80008b8:	0003      	movs	r3, r0
 80008ba:	3318      	adds	r3, #24
 80008bc:	2b1f      	cmp	r3, #31
 80008be:	dc00      	bgt.n	80008c2 <__aeabi_dadd+0x33e>
 80008c0:	e6bf      	b.n	8000642 <__aeabi_dadd+0xbe>
 80008c2:	003a      	movs	r2, r7
 80008c4:	3808      	subs	r0, #8
 80008c6:	4082      	lsls	r2, r0
 80008c8:	429c      	cmp	r4, r3
 80008ca:	dd00      	ble.n	80008ce <__aeabi_dadd+0x34a>
 80008cc:	e083      	b.n	80009d6 <__aeabi_dadd+0x452>
 80008ce:	1b1b      	subs	r3, r3, r4
 80008d0:	1c58      	adds	r0, r3, #1
 80008d2:	281f      	cmp	r0, #31
 80008d4:	dc00      	bgt.n	80008d8 <__aeabi_dadd+0x354>
 80008d6:	e1b4      	b.n	8000c42 <__aeabi_dadd+0x6be>
 80008d8:	0017      	movs	r7, r2
 80008da:	3b1f      	subs	r3, #31
 80008dc:	40df      	lsrs	r7, r3
 80008de:	2820      	cmp	r0, #32
 80008e0:	d005      	beq.n	80008ee <__aeabi_dadd+0x36a>
 80008e2:	2340      	movs	r3, #64	@ 0x40
 80008e4:	1a1b      	subs	r3, r3, r0
 80008e6:	409a      	lsls	r2, r3
 80008e8:	1e53      	subs	r3, r2, #1
 80008ea:	419a      	sbcs	r2, r3
 80008ec:	4317      	orrs	r7, r2
 80008ee:	2400      	movs	r4, #0
 80008f0:	2f00      	cmp	r7, #0
 80008f2:	d00a      	beq.n	800090a <__aeabi_dadd+0x386>
 80008f4:	077b      	lsls	r3, r7, #29
 80008f6:	d000      	beq.n	80008fa <__aeabi_dadd+0x376>
 80008f8:	e6c4      	b.n	8000684 <__aeabi_dadd+0x100>
 80008fa:	0026      	movs	r6, r4
 80008fc:	e79e      	b.n	800083c <__aeabi_dadd+0x2b8>
 80008fe:	464b      	mov	r3, r9
 8000900:	000c      	movs	r4, r1
 8000902:	08d8      	lsrs	r0, r3, #3
 8000904:	e79b      	b.n	800083e <__aeabi_dadd+0x2ba>
 8000906:	2700      	movs	r7, #0
 8000908:	4c01      	ldr	r4, [pc, #4]	@ (8000910 <__aeabi_dadd+0x38c>)
 800090a:	2600      	movs	r6, #0
 800090c:	e783      	b.n	8000816 <__aeabi_dadd+0x292>
 800090e:	46c0      	nop			@ (mov r8, r8)
 8000910:	000007ff 	.word	0x000007ff
 8000914:	ff7fffff 	.word	0xff7fffff
 8000918:	000007fe 	.word	0x000007fe
 800091c:	464b      	mov	r3, r9
 800091e:	0777      	lsls	r7, r6, #29
 8000920:	08d8      	lsrs	r0, r3, #3
 8000922:	4307      	orrs	r7, r0
 8000924:	08f0      	lsrs	r0, r6, #3
 8000926:	e791      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000928:	4fcd      	ldr	r7, [pc, #820]	@ (8000c60 <__aeabi_dadd+0x6dc>)
 800092a:	1c61      	adds	r1, r4, #1
 800092c:	4239      	tst	r1, r7
 800092e:	d16b      	bne.n	8000a08 <__aeabi_dadd+0x484>
 8000930:	0031      	movs	r1, r6
 8000932:	4648      	mov	r0, r9
 8000934:	4301      	orrs	r1, r0
 8000936:	2c00      	cmp	r4, #0
 8000938:	d000      	beq.n	800093c <__aeabi_dadd+0x3b8>
 800093a:	e14b      	b.n	8000bd4 <__aeabi_dadd+0x650>
 800093c:	001f      	movs	r7, r3
 800093e:	4317      	orrs	r7, r2
 8000940:	2900      	cmp	r1, #0
 8000942:	d100      	bne.n	8000946 <__aeabi_dadd+0x3c2>
 8000944:	e181      	b.n	8000c4a <__aeabi_dadd+0x6c6>
 8000946:	2f00      	cmp	r7, #0
 8000948:	d100      	bne.n	800094c <__aeabi_dadd+0x3c8>
 800094a:	e74c      	b.n	80007e6 <__aeabi_dadd+0x262>
 800094c:	444a      	add	r2, r9
 800094e:	454a      	cmp	r2, r9
 8000950:	4180      	sbcs	r0, r0
 8000952:	18f6      	adds	r6, r6, r3
 8000954:	4240      	negs	r0, r0
 8000956:	1836      	adds	r6, r6, r0
 8000958:	0233      	lsls	r3, r6, #8
 800095a:	d500      	bpl.n	800095e <__aeabi_dadd+0x3da>
 800095c:	e1b0      	b.n	8000cc0 <__aeabi_dadd+0x73c>
 800095e:	0017      	movs	r7, r2
 8000960:	4691      	mov	r9, r2
 8000962:	4337      	orrs	r7, r6
 8000964:	d000      	beq.n	8000968 <__aeabi_dadd+0x3e4>
 8000966:	e73e      	b.n	80007e6 <__aeabi_dadd+0x262>
 8000968:	2600      	movs	r6, #0
 800096a:	e754      	b.n	8000816 <__aeabi_dadd+0x292>
 800096c:	4649      	mov	r1, r9
 800096e:	1a89      	subs	r1, r1, r2
 8000970:	4688      	mov	r8, r1
 8000972:	45c1      	cmp	r9, r8
 8000974:	41bf      	sbcs	r7, r7
 8000976:	1af1      	subs	r1, r6, r3
 8000978:	427f      	negs	r7, r7
 800097a:	1bc9      	subs	r1, r1, r7
 800097c:	020f      	lsls	r7, r1, #8
 800097e:	d461      	bmi.n	8000a44 <__aeabi_dadd+0x4c0>
 8000980:	4647      	mov	r7, r8
 8000982:	430f      	orrs	r7, r1
 8000984:	d100      	bne.n	8000988 <__aeabi_dadd+0x404>
 8000986:	e0bd      	b.n	8000b04 <__aeabi_dadd+0x580>
 8000988:	000e      	movs	r6, r1
 800098a:	4647      	mov	r7, r8
 800098c:	e651      	b.n	8000632 <__aeabi_dadd+0xae>
 800098e:	4cb5      	ldr	r4, [pc, #724]	@ (8000c64 <__aeabi_dadd+0x6e0>)
 8000990:	45a0      	cmp	r8, r4
 8000992:	d100      	bne.n	8000996 <__aeabi_dadd+0x412>
 8000994:	e100      	b.n	8000b98 <__aeabi_dadd+0x614>
 8000996:	2701      	movs	r7, #1
 8000998:	2938      	cmp	r1, #56	@ 0x38
 800099a:	dd00      	ble.n	800099e <__aeabi_dadd+0x41a>
 800099c:	e6b8      	b.n	8000710 <__aeabi_dadd+0x18c>
 800099e:	2480      	movs	r4, #128	@ 0x80
 80009a0:	0424      	lsls	r4, r4, #16
 80009a2:	4326      	orrs	r6, r4
 80009a4:	e6a3      	b.n	80006ee <__aeabi_dadd+0x16a>
 80009a6:	4eb0      	ldr	r6, [pc, #704]	@ (8000c68 <__aeabi_dadd+0x6e4>)
 80009a8:	1ae4      	subs	r4, r4, r3
 80009aa:	4016      	ands	r6, r2
 80009ac:	077b      	lsls	r3, r7, #29
 80009ae:	d000      	beq.n	80009b2 <__aeabi_dadd+0x42e>
 80009b0:	e73f      	b.n	8000832 <__aeabi_dadd+0x2ae>
 80009b2:	e743      	b.n	800083c <__aeabi_dadd+0x2b8>
 80009b4:	000f      	movs	r7, r1
 80009b6:	0018      	movs	r0, r3
 80009b8:	3f20      	subs	r7, #32
 80009ba:	40f8      	lsrs	r0, r7
 80009bc:	4684      	mov	ip, r0
 80009be:	2920      	cmp	r1, #32
 80009c0:	d003      	beq.n	80009ca <__aeabi_dadd+0x446>
 80009c2:	2740      	movs	r7, #64	@ 0x40
 80009c4:	1a79      	subs	r1, r7, r1
 80009c6:	408b      	lsls	r3, r1
 80009c8:	431a      	orrs	r2, r3
 80009ca:	1e53      	subs	r3, r2, #1
 80009cc:	419a      	sbcs	r2, r3
 80009ce:	4663      	mov	r3, ip
 80009d0:	0017      	movs	r7, r2
 80009d2:	431f      	orrs	r7, r3
 80009d4:	e622      	b.n	800061c <__aeabi_dadd+0x98>
 80009d6:	48a4      	ldr	r0, [pc, #656]	@ (8000c68 <__aeabi_dadd+0x6e4>)
 80009d8:	1ae1      	subs	r1, r4, r3
 80009da:	4010      	ands	r0, r2
 80009dc:	0747      	lsls	r7, r0, #29
 80009de:	08c0      	lsrs	r0, r0, #3
 80009e0:	e707      	b.n	80007f2 <__aeabi_dadd+0x26e>
 80009e2:	0034      	movs	r4, r6
 80009e4:	4648      	mov	r0, r9
 80009e6:	4304      	orrs	r4, r0
 80009e8:	d100      	bne.n	80009ec <__aeabi_dadd+0x468>
 80009ea:	e0fa      	b.n	8000be2 <__aeabi_dadd+0x65e>
 80009ec:	1e4c      	subs	r4, r1, #1
 80009ee:	2901      	cmp	r1, #1
 80009f0:	d100      	bne.n	80009f4 <__aeabi_dadd+0x470>
 80009f2:	e0d7      	b.n	8000ba4 <__aeabi_dadd+0x620>
 80009f4:	4f9b      	ldr	r7, [pc, #620]	@ (8000c64 <__aeabi_dadd+0x6e0>)
 80009f6:	42b9      	cmp	r1, r7
 80009f8:	d100      	bne.n	80009fc <__aeabi_dadd+0x478>
 80009fa:	e0e2      	b.n	8000bc2 <__aeabi_dadd+0x63e>
 80009fc:	2701      	movs	r7, #1
 80009fe:	2c38      	cmp	r4, #56	@ 0x38
 8000a00:	dd00      	ble.n	8000a04 <__aeabi_dadd+0x480>
 8000a02:	e74f      	b.n	80008a4 <__aeabi_dadd+0x320>
 8000a04:	0021      	movs	r1, r4
 8000a06:	e73c      	b.n	8000882 <__aeabi_dadd+0x2fe>
 8000a08:	4c96      	ldr	r4, [pc, #600]	@ (8000c64 <__aeabi_dadd+0x6e0>)
 8000a0a:	42a1      	cmp	r1, r4
 8000a0c:	d100      	bne.n	8000a10 <__aeabi_dadd+0x48c>
 8000a0e:	e0dd      	b.n	8000bcc <__aeabi_dadd+0x648>
 8000a10:	444a      	add	r2, r9
 8000a12:	454a      	cmp	r2, r9
 8000a14:	4180      	sbcs	r0, r0
 8000a16:	18f3      	adds	r3, r6, r3
 8000a18:	4240      	negs	r0, r0
 8000a1a:	1818      	adds	r0, r3, r0
 8000a1c:	07c7      	lsls	r7, r0, #31
 8000a1e:	0852      	lsrs	r2, r2, #1
 8000a20:	4317      	orrs	r7, r2
 8000a22:	0846      	lsrs	r6, r0, #1
 8000a24:	0752      	lsls	r2, r2, #29
 8000a26:	d005      	beq.n	8000a34 <__aeabi_dadd+0x4b0>
 8000a28:	220f      	movs	r2, #15
 8000a2a:	000c      	movs	r4, r1
 8000a2c:	403a      	ands	r2, r7
 8000a2e:	2a04      	cmp	r2, #4
 8000a30:	d000      	beq.n	8000a34 <__aeabi_dadd+0x4b0>
 8000a32:	e62c      	b.n	800068e <__aeabi_dadd+0x10a>
 8000a34:	0776      	lsls	r6, r6, #29
 8000a36:	08ff      	lsrs	r7, r7, #3
 8000a38:	4337      	orrs	r7, r6
 8000a3a:	0900      	lsrs	r0, r0, #4
 8000a3c:	e6d9      	b.n	80007f2 <__aeabi_dadd+0x26e>
 8000a3e:	2700      	movs	r7, #0
 8000a40:	2600      	movs	r6, #0
 8000a42:	e6e8      	b.n	8000816 <__aeabi_dadd+0x292>
 8000a44:	4649      	mov	r1, r9
 8000a46:	1a57      	subs	r7, r2, r1
 8000a48:	42ba      	cmp	r2, r7
 8000a4a:	4192      	sbcs	r2, r2
 8000a4c:	1b9e      	subs	r6, r3, r6
 8000a4e:	4252      	negs	r2, r2
 8000a50:	4665      	mov	r5, ip
 8000a52:	1ab6      	subs	r6, r6, r2
 8000a54:	e5ed      	b.n	8000632 <__aeabi_dadd+0xae>
 8000a56:	2900      	cmp	r1, #0
 8000a58:	d000      	beq.n	8000a5c <__aeabi_dadd+0x4d8>
 8000a5a:	e0c6      	b.n	8000bea <__aeabi_dadd+0x666>
 8000a5c:	2f00      	cmp	r7, #0
 8000a5e:	d167      	bne.n	8000b30 <__aeabi_dadd+0x5ac>
 8000a60:	2680      	movs	r6, #128	@ 0x80
 8000a62:	2500      	movs	r5, #0
 8000a64:	4c7f      	ldr	r4, [pc, #508]	@ (8000c64 <__aeabi_dadd+0x6e0>)
 8000a66:	0336      	lsls	r6, r6, #12
 8000a68:	e6d5      	b.n	8000816 <__aeabi_dadd+0x292>
 8000a6a:	4665      	mov	r5, ip
 8000a6c:	000c      	movs	r4, r1
 8000a6e:	001e      	movs	r6, r3
 8000a70:	08d0      	lsrs	r0, r2, #3
 8000a72:	e6e4      	b.n	800083e <__aeabi_dadd+0x2ba>
 8000a74:	444a      	add	r2, r9
 8000a76:	454a      	cmp	r2, r9
 8000a78:	4180      	sbcs	r0, r0
 8000a7a:	18f3      	adds	r3, r6, r3
 8000a7c:	4240      	negs	r0, r0
 8000a7e:	1818      	adds	r0, r3, r0
 8000a80:	0011      	movs	r1, r2
 8000a82:	0203      	lsls	r3, r0, #8
 8000a84:	d400      	bmi.n	8000a88 <__aeabi_dadd+0x504>
 8000a86:	e096      	b.n	8000bb6 <__aeabi_dadd+0x632>
 8000a88:	4b77      	ldr	r3, [pc, #476]	@ (8000c68 <__aeabi_dadd+0x6e4>)
 8000a8a:	0849      	lsrs	r1, r1, #1
 8000a8c:	4018      	ands	r0, r3
 8000a8e:	07c3      	lsls	r3, r0, #31
 8000a90:	430b      	orrs	r3, r1
 8000a92:	0844      	lsrs	r4, r0, #1
 8000a94:	0749      	lsls	r1, r1, #29
 8000a96:	d100      	bne.n	8000a9a <__aeabi_dadd+0x516>
 8000a98:	e129      	b.n	8000cee <__aeabi_dadd+0x76a>
 8000a9a:	220f      	movs	r2, #15
 8000a9c:	401a      	ands	r2, r3
 8000a9e:	2a04      	cmp	r2, #4
 8000aa0:	d100      	bne.n	8000aa4 <__aeabi_dadd+0x520>
 8000aa2:	e0ea      	b.n	8000c7a <__aeabi_dadd+0x6f6>
 8000aa4:	1d1f      	adds	r7, r3, #4
 8000aa6:	429f      	cmp	r7, r3
 8000aa8:	41b6      	sbcs	r6, r6
 8000aaa:	4276      	negs	r6, r6
 8000aac:	1936      	adds	r6, r6, r4
 8000aae:	2402      	movs	r4, #2
 8000ab0:	e6c4      	b.n	800083c <__aeabi_dadd+0x2b8>
 8000ab2:	4649      	mov	r1, r9
 8000ab4:	1a8f      	subs	r7, r1, r2
 8000ab6:	45b9      	cmp	r9, r7
 8000ab8:	4180      	sbcs	r0, r0
 8000aba:	1af6      	subs	r6, r6, r3
 8000abc:	4240      	negs	r0, r0
 8000abe:	1a36      	subs	r6, r6, r0
 8000ac0:	0233      	lsls	r3, r6, #8
 8000ac2:	d406      	bmi.n	8000ad2 <__aeabi_dadd+0x54e>
 8000ac4:	0773      	lsls	r3, r6, #29
 8000ac6:	08ff      	lsrs	r7, r7, #3
 8000ac8:	2101      	movs	r1, #1
 8000aca:	431f      	orrs	r7, r3
 8000acc:	08f0      	lsrs	r0, r6, #3
 8000ace:	e690      	b.n	80007f2 <__aeabi_dadd+0x26e>
 8000ad0:	4665      	mov	r5, ip
 8000ad2:	2401      	movs	r4, #1
 8000ad4:	e5ab      	b.n	800062e <__aeabi_dadd+0xaa>
 8000ad6:	464b      	mov	r3, r9
 8000ad8:	0777      	lsls	r7, r6, #29
 8000ada:	08d8      	lsrs	r0, r3, #3
 8000adc:	4307      	orrs	r7, r0
 8000ade:	08f0      	lsrs	r0, r6, #3
 8000ae0:	e6b4      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000ae2:	000f      	movs	r7, r1
 8000ae4:	0018      	movs	r0, r3
 8000ae6:	3f20      	subs	r7, #32
 8000ae8:	40f8      	lsrs	r0, r7
 8000aea:	4684      	mov	ip, r0
 8000aec:	2920      	cmp	r1, #32
 8000aee:	d003      	beq.n	8000af8 <__aeabi_dadd+0x574>
 8000af0:	2740      	movs	r7, #64	@ 0x40
 8000af2:	1a79      	subs	r1, r7, r1
 8000af4:	408b      	lsls	r3, r1
 8000af6:	431a      	orrs	r2, r3
 8000af8:	1e53      	subs	r3, r2, #1
 8000afa:	419a      	sbcs	r2, r3
 8000afc:	4663      	mov	r3, ip
 8000afe:	0017      	movs	r7, r2
 8000b00:	431f      	orrs	r7, r3
 8000b02:	e635      	b.n	8000770 <__aeabi_dadd+0x1ec>
 8000b04:	2500      	movs	r5, #0
 8000b06:	2400      	movs	r4, #0
 8000b08:	2600      	movs	r6, #0
 8000b0a:	e684      	b.n	8000816 <__aeabi_dadd+0x292>
 8000b0c:	000c      	movs	r4, r1
 8000b0e:	0035      	movs	r5, r6
 8000b10:	3c20      	subs	r4, #32
 8000b12:	40e5      	lsrs	r5, r4
 8000b14:	2920      	cmp	r1, #32
 8000b16:	d005      	beq.n	8000b24 <__aeabi_dadd+0x5a0>
 8000b18:	2440      	movs	r4, #64	@ 0x40
 8000b1a:	1a61      	subs	r1, r4, r1
 8000b1c:	408e      	lsls	r6, r1
 8000b1e:	4649      	mov	r1, r9
 8000b20:	4331      	orrs	r1, r6
 8000b22:	4689      	mov	r9, r1
 8000b24:	4648      	mov	r0, r9
 8000b26:	1e41      	subs	r1, r0, #1
 8000b28:	4188      	sbcs	r0, r1
 8000b2a:	0007      	movs	r7, r0
 8000b2c:	432f      	orrs	r7, r5
 8000b2e:	e5ef      	b.n	8000710 <__aeabi_dadd+0x18c>
 8000b30:	08d2      	lsrs	r2, r2, #3
 8000b32:	075f      	lsls	r7, r3, #29
 8000b34:	4665      	mov	r5, ip
 8000b36:	4317      	orrs	r7, r2
 8000b38:	08d8      	lsrs	r0, r3, #3
 8000b3a:	e687      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000b3c:	1a17      	subs	r7, r2, r0
 8000b3e:	42ba      	cmp	r2, r7
 8000b40:	4192      	sbcs	r2, r2
 8000b42:	1b9e      	subs	r6, r3, r6
 8000b44:	4252      	negs	r2, r2
 8000b46:	1ab6      	subs	r6, r6, r2
 8000b48:	0233      	lsls	r3, r6, #8
 8000b4a:	d4c1      	bmi.n	8000ad0 <__aeabi_dadd+0x54c>
 8000b4c:	0773      	lsls	r3, r6, #29
 8000b4e:	08ff      	lsrs	r7, r7, #3
 8000b50:	4665      	mov	r5, ip
 8000b52:	2101      	movs	r1, #1
 8000b54:	431f      	orrs	r7, r3
 8000b56:	08f0      	lsrs	r0, r6, #3
 8000b58:	e64b      	b.n	80007f2 <__aeabi_dadd+0x26e>
 8000b5a:	2f00      	cmp	r7, #0
 8000b5c:	d07b      	beq.n	8000c56 <__aeabi_dadd+0x6d2>
 8000b5e:	4665      	mov	r5, ip
 8000b60:	001e      	movs	r6, r3
 8000b62:	4691      	mov	r9, r2
 8000b64:	e63f      	b.n	80007e6 <__aeabi_dadd+0x262>
 8000b66:	1a81      	subs	r1, r0, r2
 8000b68:	4688      	mov	r8, r1
 8000b6a:	45c1      	cmp	r9, r8
 8000b6c:	41a4      	sbcs	r4, r4
 8000b6e:	1af1      	subs	r1, r6, r3
 8000b70:	4264      	negs	r4, r4
 8000b72:	1b09      	subs	r1, r1, r4
 8000b74:	2480      	movs	r4, #128	@ 0x80
 8000b76:	0424      	lsls	r4, r4, #16
 8000b78:	4221      	tst	r1, r4
 8000b7a:	d077      	beq.n	8000c6c <__aeabi_dadd+0x6e8>
 8000b7c:	1a10      	subs	r0, r2, r0
 8000b7e:	4282      	cmp	r2, r0
 8000b80:	4192      	sbcs	r2, r2
 8000b82:	0007      	movs	r7, r0
 8000b84:	1b9e      	subs	r6, r3, r6
 8000b86:	4252      	negs	r2, r2
 8000b88:	1ab6      	subs	r6, r6, r2
 8000b8a:	4337      	orrs	r7, r6
 8000b8c:	d000      	beq.n	8000b90 <__aeabi_dadd+0x60c>
 8000b8e:	e0a0      	b.n	8000cd2 <__aeabi_dadd+0x74e>
 8000b90:	4665      	mov	r5, ip
 8000b92:	2400      	movs	r4, #0
 8000b94:	2600      	movs	r6, #0
 8000b96:	e63e      	b.n	8000816 <__aeabi_dadd+0x292>
 8000b98:	075f      	lsls	r7, r3, #29
 8000b9a:	08d2      	lsrs	r2, r2, #3
 8000b9c:	4665      	mov	r5, ip
 8000b9e:	4317      	orrs	r7, r2
 8000ba0:	08d8      	lsrs	r0, r3, #3
 8000ba2:	e653      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000ba4:	1881      	adds	r1, r0, r2
 8000ba6:	4291      	cmp	r1, r2
 8000ba8:	4192      	sbcs	r2, r2
 8000baa:	18f0      	adds	r0, r6, r3
 8000bac:	4252      	negs	r2, r2
 8000bae:	1880      	adds	r0, r0, r2
 8000bb0:	0203      	lsls	r3, r0, #8
 8000bb2:	d500      	bpl.n	8000bb6 <__aeabi_dadd+0x632>
 8000bb4:	e768      	b.n	8000a88 <__aeabi_dadd+0x504>
 8000bb6:	0747      	lsls	r7, r0, #29
 8000bb8:	08c9      	lsrs	r1, r1, #3
 8000bba:	430f      	orrs	r7, r1
 8000bbc:	08c0      	lsrs	r0, r0, #3
 8000bbe:	2101      	movs	r1, #1
 8000bc0:	e617      	b.n	80007f2 <__aeabi_dadd+0x26e>
 8000bc2:	08d2      	lsrs	r2, r2, #3
 8000bc4:	075f      	lsls	r7, r3, #29
 8000bc6:	4317      	orrs	r7, r2
 8000bc8:	08d8      	lsrs	r0, r3, #3
 8000bca:	e63f      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000bcc:	000c      	movs	r4, r1
 8000bce:	2600      	movs	r6, #0
 8000bd0:	2700      	movs	r7, #0
 8000bd2:	e620      	b.n	8000816 <__aeabi_dadd+0x292>
 8000bd4:	2900      	cmp	r1, #0
 8000bd6:	d156      	bne.n	8000c86 <__aeabi_dadd+0x702>
 8000bd8:	075f      	lsls	r7, r3, #29
 8000bda:	08d2      	lsrs	r2, r2, #3
 8000bdc:	4317      	orrs	r7, r2
 8000bde:	08d8      	lsrs	r0, r3, #3
 8000be0:	e634      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000be2:	000c      	movs	r4, r1
 8000be4:	001e      	movs	r6, r3
 8000be6:	08d0      	lsrs	r0, r2, #3
 8000be8:	e629      	b.n	800083e <__aeabi_dadd+0x2ba>
 8000bea:	08c1      	lsrs	r1, r0, #3
 8000bec:	0770      	lsls	r0, r6, #29
 8000bee:	4301      	orrs	r1, r0
 8000bf0:	08f0      	lsrs	r0, r6, #3
 8000bf2:	2f00      	cmp	r7, #0
 8000bf4:	d062      	beq.n	8000cbc <__aeabi_dadd+0x738>
 8000bf6:	2480      	movs	r4, #128	@ 0x80
 8000bf8:	0324      	lsls	r4, r4, #12
 8000bfa:	4220      	tst	r0, r4
 8000bfc:	d007      	beq.n	8000c0e <__aeabi_dadd+0x68a>
 8000bfe:	08de      	lsrs	r6, r3, #3
 8000c00:	4226      	tst	r6, r4
 8000c02:	d104      	bne.n	8000c0e <__aeabi_dadd+0x68a>
 8000c04:	4665      	mov	r5, ip
 8000c06:	0030      	movs	r0, r6
 8000c08:	08d1      	lsrs	r1, r2, #3
 8000c0a:	075b      	lsls	r3, r3, #29
 8000c0c:	4319      	orrs	r1, r3
 8000c0e:	0f4f      	lsrs	r7, r1, #29
 8000c10:	00c9      	lsls	r1, r1, #3
 8000c12:	08c9      	lsrs	r1, r1, #3
 8000c14:	077f      	lsls	r7, r7, #29
 8000c16:	430f      	orrs	r7, r1
 8000c18:	e618      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000c1a:	000c      	movs	r4, r1
 8000c1c:	0030      	movs	r0, r6
 8000c1e:	3c20      	subs	r4, #32
 8000c20:	40e0      	lsrs	r0, r4
 8000c22:	4684      	mov	ip, r0
 8000c24:	2920      	cmp	r1, #32
 8000c26:	d005      	beq.n	8000c34 <__aeabi_dadd+0x6b0>
 8000c28:	2440      	movs	r4, #64	@ 0x40
 8000c2a:	1a61      	subs	r1, r4, r1
 8000c2c:	408e      	lsls	r6, r1
 8000c2e:	4649      	mov	r1, r9
 8000c30:	4331      	orrs	r1, r6
 8000c32:	4689      	mov	r9, r1
 8000c34:	4648      	mov	r0, r9
 8000c36:	1e41      	subs	r1, r0, #1
 8000c38:	4188      	sbcs	r0, r1
 8000c3a:	4661      	mov	r1, ip
 8000c3c:	0007      	movs	r7, r0
 8000c3e:	430f      	orrs	r7, r1
 8000c40:	e630      	b.n	80008a4 <__aeabi_dadd+0x320>
 8000c42:	2120      	movs	r1, #32
 8000c44:	2700      	movs	r7, #0
 8000c46:	1a09      	subs	r1, r1, r0
 8000c48:	e50e      	b.n	8000668 <__aeabi_dadd+0xe4>
 8000c4a:	001e      	movs	r6, r3
 8000c4c:	2f00      	cmp	r7, #0
 8000c4e:	d000      	beq.n	8000c52 <__aeabi_dadd+0x6ce>
 8000c50:	e522      	b.n	8000698 <__aeabi_dadd+0x114>
 8000c52:	2400      	movs	r4, #0
 8000c54:	e758      	b.n	8000b08 <__aeabi_dadd+0x584>
 8000c56:	2500      	movs	r5, #0
 8000c58:	2400      	movs	r4, #0
 8000c5a:	2600      	movs	r6, #0
 8000c5c:	e5db      	b.n	8000816 <__aeabi_dadd+0x292>
 8000c5e:	46c0      	nop			@ (mov r8, r8)
 8000c60:	000007fe 	.word	0x000007fe
 8000c64:	000007ff 	.word	0x000007ff
 8000c68:	ff7fffff 	.word	0xff7fffff
 8000c6c:	4647      	mov	r7, r8
 8000c6e:	430f      	orrs	r7, r1
 8000c70:	d100      	bne.n	8000c74 <__aeabi_dadd+0x6f0>
 8000c72:	e747      	b.n	8000b04 <__aeabi_dadd+0x580>
 8000c74:	000e      	movs	r6, r1
 8000c76:	46c1      	mov	r9, r8
 8000c78:	e5b5      	b.n	80007e6 <__aeabi_dadd+0x262>
 8000c7a:	08df      	lsrs	r7, r3, #3
 8000c7c:	0764      	lsls	r4, r4, #29
 8000c7e:	2102      	movs	r1, #2
 8000c80:	4327      	orrs	r7, r4
 8000c82:	0900      	lsrs	r0, r0, #4
 8000c84:	e5b5      	b.n	80007f2 <__aeabi_dadd+0x26e>
 8000c86:	0019      	movs	r1, r3
 8000c88:	08c0      	lsrs	r0, r0, #3
 8000c8a:	0777      	lsls	r7, r6, #29
 8000c8c:	4307      	orrs	r7, r0
 8000c8e:	4311      	orrs	r1, r2
 8000c90:	08f0      	lsrs	r0, r6, #3
 8000c92:	2900      	cmp	r1, #0
 8000c94:	d100      	bne.n	8000c98 <__aeabi_dadd+0x714>
 8000c96:	e5d9      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000c98:	2180      	movs	r1, #128	@ 0x80
 8000c9a:	0309      	lsls	r1, r1, #12
 8000c9c:	4208      	tst	r0, r1
 8000c9e:	d007      	beq.n	8000cb0 <__aeabi_dadd+0x72c>
 8000ca0:	08dc      	lsrs	r4, r3, #3
 8000ca2:	420c      	tst	r4, r1
 8000ca4:	d104      	bne.n	8000cb0 <__aeabi_dadd+0x72c>
 8000ca6:	08d2      	lsrs	r2, r2, #3
 8000ca8:	075b      	lsls	r3, r3, #29
 8000caa:	431a      	orrs	r2, r3
 8000cac:	0017      	movs	r7, r2
 8000cae:	0020      	movs	r0, r4
 8000cb0:	0f7b      	lsrs	r3, r7, #29
 8000cb2:	00ff      	lsls	r7, r7, #3
 8000cb4:	08ff      	lsrs	r7, r7, #3
 8000cb6:	075b      	lsls	r3, r3, #29
 8000cb8:	431f      	orrs	r7, r3
 8000cba:	e5c7      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000cbc:	000f      	movs	r7, r1
 8000cbe:	e5c5      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000cc0:	4b12      	ldr	r3, [pc, #72]	@ (8000d0c <__aeabi_dadd+0x788>)
 8000cc2:	08d2      	lsrs	r2, r2, #3
 8000cc4:	4033      	ands	r3, r6
 8000cc6:	075f      	lsls	r7, r3, #29
 8000cc8:	025b      	lsls	r3, r3, #9
 8000cca:	2401      	movs	r4, #1
 8000ccc:	4317      	orrs	r7, r2
 8000cce:	0b1e      	lsrs	r6, r3, #12
 8000cd0:	e5a1      	b.n	8000816 <__aeabi_dadd+0x292>
 8000cd2:	4226      	tst	r6, r4
 8000cd4:	d012      	beq.n	8000cfc <__aeabi_dadd+0x778>
 8000cd6:	4b0d      	ldr	r3, [pc, #52]	@ (8000d0c <__aeabi_dadd+0x788>)
 8000cd8:	4665      	mov	r5, ip
 8000cda:	0002      	movs	r2, r0
 8000cdc:	2401      	movs	r4, #1
 8000cde:	401e      	ands	r6, r3
 8000ce0:	e4e6      	b.n	80006b0 <__aeabi_dadd+0x12c>
 8000ce2:	0021      	movs	r1, r4
 8000ce4:	e585      	b.n	80007f2 <__aeabi_dadd+0x26e>
 8000ce6:	0017      	movs	r7, r2
 8000ce8:	e5a8      	b.n	800083c <__aeabi_dadd+0x2b8>
 8000cea:	003a      	movs	r2, r7
 8000cec:	e4d4      	b.n	8000698 <__aeabi_dadd+0x114>
 8000cee:	08db      	lsrs	r3, r3, #3
 8000cf0:	0764      	lsls	r4, r4, #29
 8000cf2:	431c      	orrs	r4, r3
 8000cf4:	0027      	movs	r7, r4
 8000cf6:	2102      	movs	r1, #2
 8000cf8:	0900      	lsrs	r0, r0, #4
 8000cfa:	e57a      	b.n	80007f2 <__aeabi_dadd+0x26e>
 8000cfc:	08c0      	lsrs	r0, r0, #3
 8000cfe:	0777      	lsls	r7, r6, #29
 8000d00:	4307      	orrs	r7, r0
 8000d02:	4665      	mov	r5, ip
 8000d04:	2100      	movs	r1, #0
 8000d06:	08f0      	lsrs	r0, r6, #3
 8000d08:	e573      	b.n	80007f2 <__aeabi_dadd+0x26e>
 8000d0a:	46c0      	nop			@ (mov r8, r8)
 8000d0c:	ff7fffff 	.word	0xff7fffff

08000d10 <__aeabi_ddiv>:
 8000d10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000d12:	46de      	mov	lr, fp
 8000d14:	4645      	mov	r5, r8
 8000d16:	4657      	mov	r7, sl
 8000d18:	464e      	mov	r6, r9
 8000d1a:	b5e0      	push	{r5, r6, r7, lr}
 8000d1c:	b087      	sub	sp, #28
 8000d1e:	9200      	str	r2, [sp, #0]
 8000d20:	9301      	str	r3, [sp, #4]
 8000d22:	030b      	lsls	r3, r1, #12
 8000d24:	0b1b      	lsrs	r3, r3, #12
 8000d26:	469b      	mov	fp, r3
 8000d28:	0fca      	lsrs	r2, r1, #31
 8000d2a:	004b      	lsls	r3, r1, #1
 8000d2c:	0004      	movs	r4, r0
 8000d2e:	4680      	mov	r8, r0
 8000d30:	0d5b      	lsrs	r3, r3, #21
 8000d32:	9202      	str	r2, [sp, #8]
 8000d34:	d100      	bne.n	8000d38 <__aeabi_ddiv+0x28>
 8000d36:	e098      	b.n	8000e6a <__aeabi_ddiv+0x15a>
 8000d38:	4a7c      	ldr	r2, [pc, #496]	@ (8000f2c <__aeabi_ddiv+0x21c>)
 8000d3a:	4293      	cmp	r3, r2
 8000d3c:	d037      	beq.n	8000dae <__aeabi_ddiv+0x9e>
 8000d3e:	4659      	mov	r1, fp
 8000d40:	0f42      	lsrs	r2, r0, #29
 8000d42:	00c9      	lsls	r1, r1, #3
 8000d44:	430a      	orrs	r2, r1
 8000d46:	2180      	movs	r1, #128	@ 0x80
 8000d48:	0409      	lsls	r1, r1, #16
 8000d4a:	4311      	orrs	r1, r2
 8000d4c:	00c2      	lsls	r2, r0, #3
 8000d4e:	4690      	mov	r8, r2
 8000d50:	4a77      	ldr	r2, [pc, #476]	@ (8000f30 <__aeabi_ddiv+0x220>)
 8000d52:	4689      	mov	r9, r1
 8000d54:	4692      	mov	sl, r2
 8000d56:	449a      	add	sl, r3
 8000d58:	2300      	movs	r3, #0
 8000d5a:	2400      	movs	r4, #0
 8000d5c:	9303      	str	r3, [sp, #12]
 8000d5e:	9e00      	ldr	r6, [sp, #0]
 8000d60:	9f01      	ldr	r7, [sp, #4]
 8000d62:	033b      	lsls	r3, r7, #12
 8000d64:	0b1b      	lsrs	r3, r3, #12
 8000d66:	469b      	mov	fp, r3
 8000d68:	007b      	lsls	r3, r7, #1
 8000d6a:	0030      	movs	r0, r6
 8000d6c:	0d5b      	lsrs	r3, r3, #21
 8000d6e:	0ffd      	lsrs	r5, r7, #31
 8000d70:	2b00      	cmp	r3, #0
 8000d72:	d059      	beq.n	8000e28 <__aeabi_ddiv+0x118>
 8000d74:	4a6d      	ldr	r2, [pc, #436]	@ (8000f2c <__aeabi_ddiv+0x21c>)
 8000d76:	4293      	cmp	r3, r2
 8000d78:	d048      	beq.n	8000e0c <__aeabi_ddiv+0xfc>
 8000d7a:	4659      	mov	r1, fp
 8000d7c:	0f72      	lsrs	r2, r6, #29
 8000d7e:	00c9      	lsls	r1, r1, #3
 8000d80:	430a      	orrs	r2, r1
 8000d82:	2180      	movs	r1, #128	@ 0x80
 8000d84:	0409      	lsls	r1, r1, #16
 8000d86:	4311      	orrs	r1, r2
 8000d88:	468b      	mov	fp, r1
 8000d8a:	4969      	ldr	r1, [pc, #420]	@ (8000f30 <__aeabi_ddiv+0x220>)
 8000d8c:	00f2      	lsls	r2, r6, #3
 8000d8e:	468c      	mov	ip, r1
 8000d90:	4651      	mov	r1, sl
 8000d92:	4463      	add	r3, ip
 8000d94:	1acb      	subs	r3, r1, r3
 8000d96:	469a      	mov	sl, r3
 8000d98:	2100      	movs	r1, #0
 8000d9a:	9e02      	ldr	r6, [sp, #8]
 8000d9c:	406e      	eors	r6, r5
 8000d9e:	b2f6      	uxtb	r6, r6
 8000da0:	2c0f      	cmp	r4, #15
 8000da2:	d900      	bls.n	8000da6 <__aeabi_ddiv+0x96>
 8000da4:	e0ce      	b.n	8000f44 <__aeabi_ddiv+0x234>
 8000da6:	4b63      	ldr	r3, [pc, #396]	@ (8000f34 <__aeabi_ddiv+0x224>)
 8000da8:	00a4      	lsls	r4, r4, #2
 8000daa:	591b      	ldr	r3, [r3, r4]
 8000dac:	469f      	mov	pc, r3
 8000dae:	465a      	mov	r2, fp
 8000db0:	4302      	orrs	r2, r0
 8000db2:	4691      	mov	r9, r2
 8000db4:	d000      	beq.n	8000db8 <__aeabi_ddiv+0xa8>
 8000db6:	e090      	b.n	8000eda <__aeabi_ddiv+0x1ca>
 8000db8:	469a      	mov	sl, r3
 8000dba:	2302      	movs	r3, #2
 8000dbc:	4690      	mov	r8, r2
 8000dbe:	2408      	movs	r4, #8
 8000dc0:	9303      	str	r3, [sp, #12]
 8000dc2:	e7cc      	b.n	8000d5e <__aeabi_ddiv+0x4e>
 8000dc4:	46cb      	mov	fp, r9
 8000dc6:	4642      	mov	r2, r8
 8000dc8:	9d02      	ldr	r5, [sp, #8]
 8000dca:	9903      	ldr	r1, [sp, #12]
 8000dcc:	2902      	cmp	r1, #2
 8000dce:	d100      	bne.n	8000dd2 <__aeabi_ddiv+0xc2>
 8000dd0:	e1de      	b.n	8001190 <__aeabi_ddiv+0x480>
 8000dd2:	2903      	cmp	r1, #3
 8000dd4:	d100      	bne.n	8000dd8 <__aeabi_ddiv+0xc8>
 8000dd6:	e08d      	b.n	8000ef4 <__aeabi_ddiv+0x1e4>
 8000dd8:	2901      	cmp	r1, #1
 8000dda:	d000      	beq.n	8000dde <__aeabi_ddiv+0xce>
 8000ddc:	e179      	b.n	80010d2 <__aeabi_ddiv+0x3c2>
 8000dde:	002e      	movs	r6, r5
 8000de0:	2200      	movs	r2, #0
 8000de2:	2300      	movs	r3, #0
 8000de4:	2400      	movs	r4, #0
 8000de6:	4690      	mov	r8, r2
 8000de8:	051b      	lsls	r3, r3, #20
 8000dea:	4323      	orrs	r3, r4
 8000dec:	07f6      	lsls	r6, r6, #31
 8000dee:	4333      	orrs	r3, r6
 8000df0:	4640      	mov	r0, r8
 8000df2:	0019      	movs	r1, r3
 8000df4:	b007      	add	sp, #28
 8000df6:	bcf0      	pop	{r4, r5, r6, r7}
 8000df8:	46bb      	mov	fp, r7
 8000dfa:	46b2      	mov	sl, r6
 8000dfc:	46a9      	mov	r9, r5
 8000dfe:	46a0      	mov	r8, r4
 8000e00:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e02:	2200      	movs	r2, #0
 8000e04:	2400      	movs	r4, #0
 8000e06:	4690      	mov	r8, r2
 8000e08:	4b48      	ldr	r3, [pc, #288]	@ (8000f2c <__aeabi_ddiv+0x21c>)
 8000e0a:	e7ed      	b.n	8000de8 <__aeabi_ddiv+0xd8>
 8000e0c:	465a      	mov	r2, fp
 8000e0e:	9b00      	ldr	r3, [sp, #0]
 8000e10:	431a      	orrs	r2, r3
 8000e12:	4b49      	ldr	r3, [pc, #292]	@ (8000f38 <__aeabi_ddiv+0x228>)
 8000e14:	469c      	mov	ip, r3
 8000e16:	44e2      	add	sl, ip
 8000e18:	2a00      	cmp	r2, #0
 8000e1a:	d159      	bne.n	8000ed0 <__aeabi_ddiv+0x1c0>
 8000e1c:	2302      	movs	r3, #2
 8000e1e:	431c      	orrs	r4, r3
 8000e20:	2300      	movs	r3, #0
 8000e22:	2102      	movs	r1, #2
 8000e24:	469b      	mov	fp, r3
 8000e26:	e7b8      	b.n	8000d9a <__aeabi_ddiv+0x8a>
 8000e28:	465a      	mov	r2, fp
 8000e2a:	9b00      	ldr	r3, [sp, #0]
 8000e2c:	431a      	orrs	r2, r3
 8000e2e:	d049      	beq.n	8000ec4 <__aeabi_ddiv+0x1b4>
 8000e30:	465b      	mov	r3, fp
 8000e32:	2b00      	cmp	r3, #0
 8000e34:	d100      	bne.n	8000e38 <__aeabi_ddiv+0x128>
 8000e36:	e19c      	b.n	8001172 <__aeabi_ddiv+0x462>
 8000e38:	4658      	mov	r0, fp
 8000e3a:	f001 fc0d 	bl	8002658 <__clzsi2>
 8000e3e:	0002      	movs	r2, r0
 8000e40:	0003      	movs	r3, r0
 8000e42:	3a0b      	subs	r2, #11
 8000e44:	271d      	movs	r7, #29
 8000e46:	9e00      	ldr	r6, [sp, #0]
 8000e48:	1aba      	subs	r2, r7, r2
 8000e4a:	0019      	movs	r1, r3
 8000e4c:	4658      	mov	r0, fp
 8000e4e:	40d6      	lsrs	r6, r2
 8000e50:	3908      	subs	r1, #8
 8000e52:	4088      	lsls	r0, r1
 8000e54:	0032      	movs	r2, r6
 8000e56:	4302      	orrs	r2, r0
 8000e58:	4693      	mov	fp, r2
 8000e5a:	9a00      	ldr	r2, [sp, #0]
 8000e5c:	408a      	lsls	r2, r1
 8000e5e:	4937      	ldr	r1, [pc, #220]	@ (8000f3c <__aeabi_ddiv+0x22c>)
 8000e60:	4453      	add	r3, sl
 8000e62:	468a      	mov	sl, r1
 8000e64:	2100      	movs	r1, #0
 8000e66:	449a      	add	sl, r3
 8000e68:	e797      	b.n	8000d9a <__aeabi_ddiv+0x8a>
 8000e6a:	465b      	mov	r3, fp
 8000e6c:	4303      	orrs	r3, r0
 8000e6e:	4699      	mov	r9, r3
 8000e70:	d021      	beq.n	8000eb6 <__aeabi_ddiv+0x1a6>
 8000e72:	465b      	mov	r3, fp
 8000e74:	2b00      	cmp	r3, #0
 8000e76:	d100      	bne.n	8000e7a <__aeabi_ddiv+0x16a>
 8000e78:	e169      	b.n	800114e <__aeabi_ddiv+0x43e>
 8000e7a:	4658      	mov	r0, fp
 8000e7c:	f001 fbec 	bl	8002658 <__clzsi2>
 8000e80:	230b      	movs	r3, #11
 8000e82:	425b      	negs	r3, r3
 8000e84:	469c      	mov	ip, r3
 8000e86:	0002      	movs	r2, r0
 8000e88:	4484      	add	ip, r0
 8000e8a:	4666      	mov	r6, ip
 8000e8c:	231d      	movs	r3, #29
 8000e8e:	1b9b      	subs	r3, r3, r6
 8000e90:	0026      	movs	r6, r4
 8000e92:	0011      	movs	r1, r2
 8000e94:	4658      	mov	r0, fp
 8000e96:	40de      	lsrs	r6, r3
 8000e98:	3908      	subs	r1, #8
 8000e9a:	4088      	lsls	r0, r1
 8000e9c:	0033      	movs	r3, r6
 8000e9e:	4303      	orrs	r3, r0
 8000ea0:	4699      	mov	r9, r3
 8000ea2:	0023      	movs	r3, r4
 8000ea4:	408b      	lsls	r3, r1
 8000ea6:	4698      	mov	r8, r3
 8000ea8:	4b25      	ldr	r3, [pc, #148]	@ (8000f40 <__aeabi_ddiv+0x230>)
 8000eaa:	2400      	movs	r4, #0
 8000eac:	1a9b      	subs	r3, r3, r2
 8000eae:	469a      	mov	sl, r3
 8000eb0:	2300      	movs	r3, #0
 8000eb2:	9303      	str	r3, [sp, #12]
 8000eb4:	e753      	b.n	8000d5e <__aeabi_ddiv+0x4e>
 8000eb6:	2300      	movs	r3, #0
 8000eb8:	4698      	mov	r8, r3
 8000eba:	469a      	mov	sl, r3
 8000ebc:	3301      	adds	r3, #1
 8000ebe:	2404      	movs	r4, #4
 8000ec0:	9303      	str	r3, [sp, #12]
 8000ec2:	e74c      	b.n	8000d5e <__aeabi_ddiv+0x4e>
 8000ec4:	2301      	movs	r3, #1
 8000ec6:	431c      	orrs	r4, r3
 8000ec8:	2300      	movs	r3, #0
 8000eca:	2101      	movs	r1, #1
 8000ecc:	469b      	mov	fp, r3
 8000ece:	e764      	b.n	8000d9a <__aeabi_ddiv+0x8a>
 8000ed0:	2303      	movs	r3, #3
 8000ed2:	0032      	movs	r2, r6
 8000ed4:	2103      	movs	r1, #3
 8000ed6:	431c      	orrs	r4, r3
 8000ed8:	e75f      	b.n	8000d9a <__aeabi_ddiv+0x8a>
 8000eda:	469a      	mov	sl, r3
 8000edc:	2303      	movs	r3, #3
 8000ede:	46d9      	mov	r9, fp
 8000ee0:	240c      	movs	r4, #12
 8000ee2:	9303      	str	r3, [sp, #12]
 8000ee4:	e73b      	b.n	8000d5e <__aeabi_ddiv+0x4e>
 8000ee6:	2300      	movs	r3, #0
 8000ee8:	2480      	movs	r4, #128	@ 0x80
 8000eea:	4698      	mov	r8, r3
 8000eec:	2600      	movs	r6, #0
 8000eee:	4b0f      	ldr	r3, [pc, #60]	@ (8000f2c <__aeabi_ddiv+0x21c>)
 8000ef0:	0324      	lsls	r4, r4, #12
 8000ef2:	e779      	b.n	8000de8 <__aeabi_ddiv+0xd8>
 8000ef4:	2480      	movs	r4, #128	@ 0x80
 8000ef6:	465b      	mov	r3, fp
 8000ef8:	0324      	lsls	r4, r4, #12
 8000efa:	431c      	orrs	r4, r3
 8000efc:	0324      	lsls	r4, r4, #12
 8000efe:	002e      	movs	r6, r5
 8000f00:	4690      	mov	r8, r2
 8000f02:	4b0a      	ldr	r3, [pc, #40]	@ (8000f2c <__aeabi_ddiv+0x21c>)
 8000f04:	0b24      	lsrs	r4, r4, #12
 8000f06:	e76f      	b.n	8000de8 <__aeabi_ddiv+0xd8>
 8000f08:	2480      	movs	r4, #128	@ 0x80
 8000f0a:	464b      	mov	r3, r9
 8000f0c:	0324      	lsls	r4, r4, #12
 8000f0e:	4223      	tst	r3, r4
 8000f10:	d002      	beq.n	8000f18 <__aeabi_ddiv+0x208>
 8000f12:	465b      	mov	r3, fp
 8000f14:	4223      	tst	r3, r4
 8000f16:	d0f0      	beq.n	8000efa <__aeabi_ddiv+0x1ea>
 8000f18:	2480      	movs	r4, #128	@ 0x80
 8000f1a:	464b      	mov	r3, r9
 8000f1c:	0324      	lsls	r4, r4, #12
 8000f1e:	431c      	orrs	r4, r3
 8000f20:	0324      	lsls	r4, r4, #12
 8000f22:	9e02      	ldr	r6, [sp, #8]
 8000f24:	4b01      	ldr	r3, [pc, #4]	@ (8000f2c <__aeabi_ddiv+0x21c>)
 8000f26:	0b24      	lsrs	r4, r4, #12
 8000f28:	e75e      	b.n	8000de8 <__aeabi_ddiv+0xd8>
 8000f2a:	46c0      	nop			@ (mov r8, r8)
 8000f2c:	000007ff 	.word	0x000007ff
 8000f30:	fffffc01 	.word	0xfffffc01
 8000f34:	0800a27c 	.word	0x0800a27c
 8000f38:	fffff801 	.word	0xfffff801
 8000f3c:	000003f3 	.word	0x000003f3
 8000f40:	fffffc0d 	.word	0xfffffc0d
 8000f44:	45cb      	cmp	fp, r9
 8000f46:	d200      	bcs.n	8000f4a <__aeabi_ddiv+0x23a>
 8000f48:	e0f8      	b.n	800113c <__aeabi_ddiv+0x42c>
 8000f4a:	d100      	bne.n	8000f4e <__aeabi_ddiv+0x23e>
 8000f4c:	e0f3      	b.n	8001136 <__aeabi_ddiv+0x426>
 8000f4e:	2301      	movs	r3, #1
 8000f50:	425b      	negs	r3, r3
 8000f52:	469c      	mov	ip, r3
 8000f54:	4644      	mov	r4, r8
 8000f56:	4648      	mov	r0, r9
 8000f58:	2500      	movs	r5, #0
 8000f5a:	44e2      	add	sl, ip
 8000f5c:	465b      	mov	r3, fp
 8000f5e:	0e17      	lsrs	r7, r2, #24
 8000f60:	021b      	lsls	r3, r3, #8
 8000f62:	431f      	orrs	r7, r3
 8000f64:	0c19      	lsrs	r1, r3, #16
 8000f66:	043b      	lsls	r3, r7, #16
 8000f68:	0212      	lsls	r2, r2, #8
 8000f6a:	9700      	str	r7, [sp, #0]
 8000f6c:	0c1f      	lsrs	r7, r3, #16
 8000f6e:	4691      	mov	r9, r2
 8000f70:	9102      	str	r1, [sp, #8]
 8000f72:	9703      	str	r7, [sp, #12]
 8000f74:	f7ff f96a 	bl	800024c <__aeabi_uidivmod>
 8000f78:	0002      	movs	r2, r0
 8000f7a:	437a      	muls	r2, r7
 8000f7c:	040b      	lsls	r3, r1, #16
 8000f7e:	0c21      	lsrs	r1, r4, #16
 8000f80:	4680      	mov	r8, r0
 8000f82:	4319      	orrs	r1, r3
 8000f84:	428a      	cmp	r2, r1
 8000f86:	d909      	bls.n	8000f9c <__aeabi_ddiv+0x28c>
 8000f88:	9f00      	ldr	r7, [sp, #0]
 8000f8a:	2301      	movs	r3, #1
 8000f8c:	46bc      	mov	ip, r7
 8000f8e:	425b      	negs	r3, r3
 8000f90:	4461      	add	r1, ip
 8000f92:	469c      	mov	ip, r3
 8000f94:	44e0      	add	r8, ip
 8000f96:	428f      	cmp	r7, r1
 8000f98:	d800      	bhi.n	8000f9c <__aeabi_ddiv+0x28c>
 8000f9a:	e15c      	b.n	8001256 <__aeabi_ddiv+0x546>
 8000f9c:	1a88      	subs	r0, r1, r2
 8000f9e:	9902      	ldr	r1, [sp, #8]
 8000fa0:	f7ff f954 	bl	800024c <__aeabi_uidivmod>
 8000fa4:	9a03      	ldr	r2, [sp, #12]
 8000fa6:	0424      	lsls	r4, r4, #16
 8000fa8:	4342      	muls	r2, r0
 8000faa:	0409      	lsls	r1, r1, #16
 8000fac:	0c24      	lsrs	r4, r4, #16
 8000fae:	0003      	movs	r3, r0
 8000fb0:	430c      	orrs	r4, r1
 8000fb2:	42a2      	cmp	r2, r4
 8000fb4:	d906      	bls.n	8000fc4 <__aeabi_ddiv+0x2b4>
 8000fb6:	9900      	ldr	r1, [sp, #0]
 8000fb8:	3b01      	subs	r3, #1
 8000fba:	468c      	mov	ip, r1
 8000fbc:	4464      	add	r4, ip
 8000fbe:	42a1      	cmp	r1, r4
 8000fc0:	d800      	bhi.n	8000fc4 <__aeabi_ddiv+0x2b4>
 8000fc2:	e142      	b.n	800124a <__aeabi_ddiv+0x53a>
 8000fc4:	1aa0      	subs	r0, r4, r2
 8000fc6:	4642      	mov	r2, r8
 8000fc8:	0412      	lsls	r2, r2, #16
 8000fca:	431a      	orrs	r2, r3
 8000fcc:	4693      	mov	fp, r2
 8000fce:	464b      	mov	r3, r9
 8000fd0:	4659      	mov	r1, fp
 8000fd2:	0c1b      	lsrs	r3, r3, #16
 8000fd4:	001f      	movs	r7, r3
 8000fd6:	9304      	str	r3, [sp, #16]
 8000fd8:	040b      	lsls	r3, r1, #16
 8000fda:	4649      	mov	r1, r9
 8000fdc:	0409      	lsls	r1, r1, #16
 8000fde:	0c09      	lsrs	r1, r1, #16
 8000fe0:	000c      	movs	r4, r1
 8000fe2:	0c1b      	lsrs	r3, r3, #16
 8000fe4:	435c      	muls	r4, r3
 8000fe6:	0c12      	lsrs	r2, r2, #16
 8000fe8:	437b      	muls	r3, r7
 8000fea:	4688      	mov	r8, r1
 8000fec:	4351      	muls	r1, r2
 8000fee:	437a      	muls	r2, r7
 8000ff0:	0c27      	lsrs	r7, r4, #16
 8000ff2:	46bc      	mov	ip, r7
 8000ff4:	185b      	adds	r3, r3, r1
 8000ff6:	4463      	add	r3, ip
 8000ff8:	4299      	cmp	r1, r3
 8000ffa:	d903      	bls.n	8001004 <__aeabi_ddiv+0x2f4>
 8000ffc:	2180      	movs	r1, #128	@ 0x80
 8000ffe:	0249      	lsls	r1, r1, #9
 8001000:	468c      	mov	ip, r1
 8001002:	4462      	add	r2, ip
 8001004:	0c19      	lsrs	r1, r3, #16
 8001006:	0424      	lsls	r4, r4, #16
 8001008:	041b      	lsls	r3, r3, #16
 800100a:	0c24      	lsrs	r4, r4, #16
 800100c:	188a      	adds	r2, r1, r2
 800100e:	191c      	adds	r4, r3, r4
 8001010:	4290      	cmp	r0, r2
 8001012:	d302      	bcc.n	800101a <__aeabi_ddiv+0x30a>
 8001014:	d116      	bne.n	8001044 <__aeabi_ddiv+0x334>
 8001016:	42a5      	cmp	r5, r4
 8001018:	d214      	bcs.n	8001044 <__aeabi_ddiv+0x334>
 800101a:	465b      	mov	r3, fp
 800101c:	9f00      	ldr	r7, [sp, #0]
 800101e:	3b01      	subs	r3, #1
 8001020:	444d      	add	r5, r9
 8001022:	9305      	str	r3, [sp, #20]
 8001024:	454d      	cmp	r5, r9
 8001026:	419b      	sbcs	r3, r3
 8001028:	46bc      	mov	ip, r7
 800102a:	425b      	negs	r3, r3
 800102c:	4463      	add	r3, ip
 800102e:	18c0      	adds	r0, r0, r3
 8001030:	4287      	cmp	r7, r0
 8001032:	d300      	bcc.n	8001036 <__aeabi_ddiv+0x326>
 8001034:	e102      	b.n	800123c <__aeabi_ddiv+0x52c>
 8001036:	4282      	cmp	r2, r0
 8001038:	d900      	bls.n	800103c <__aeabi_ddiv+0x32c>
 800103a:	e129      	b.n	8001290 <__aeabi_ddiv+0x580>
 800103c:	d100      	bne.n	8001040 <__aeabi_ddiv+0x330>
 800103e:	e124      	b.n	800128a <__aeabi_ddiv+0x57a>
 8001040:	9b05      	ldr	r3, [sp, #20]
 8001042:	469b      	mov	fp, r3
 8001044:	1b2c      	subs	r4, r5, r4
 8001046:	42a5      	cmp	r5, r4
 8001048:	41ad      	sbcs	r5, r5
 800104a:	9b00      	ldr	r3, [sp, #0]
 800104c:	1a80      	subs	r0, r0, r2
 800104e:	426d      	negs	r5, r5
 8001050:	1b40      	subs	r0, r0, r5
 8001052:	4283      	cmp	r3, r0
 8001054:	d100      	bne.n	8001058 <__aeabi_ddiv+0x348>
 8001056:	e10f      	b.n	8001278 <__aeabi_ddiv+0x568>
 8001058:	9902      	ldr	r1, [sp, #8]
 800105a:	f7ff f8f7 	bl	800024c <__aeabi_uidivmod>
 800105e:	9a03      	ldr	r2, [sp, #12]
 8001060:	040b      	lsls	r3, r1, #16
 8001062:	4342      	muls	r2, r0
 8001064:	0c21      	lsrs	r1, r4, #16
 8001066:	0005      	movs	r5, r0
 8001068:	4319      	orrs	r1, r3
 800106a:	428a      	cmp	r2, r1
 800106c:	d900      	bls.n	8001070 <__aeabi_ddiv+0x360>
 800106e:	e0cb      	b.n	8001208 <__aeabi_ddiv+0x4f8>
 8001070:	1a88      	subs	r0, r1, r2
 8001072:	9902      	ldr	r1, [sp, #8]
 8001074:	f7ff f8ea 	bl	800024c <__aeabi_uidivmod>
 8001078:	9a03      	ldr	r2, [sp, #12]
 800107a:	0424      	lsls	r4, r4, #16
 800107c:	4342      	muls	r2, r0
 800107e:	0409      	lsls	r1, r1, #16
 8001080:	0c24      	lsrs	r4, r4, #16
 8001082:	0003      	movs	r3, r0
 8001084:	430c      	orrs	r4, r1
 8001086:	42a2      	cmp	r2, r4
 8001088:	d900      	bls.n	800108c <__aeabi_ddiv+0x37c>
 800108a:	e0ca      	b.n	8001222 <__aeabi_ddiv+0x512>
 800108c:	4641      	mov	r1, r8
 800108e:	1aa4      	subs	r4, r4, r2
 8001090:	042a      	lsls	r2, r5, #16
 8001092:	431a      	orrs	r2, r3
 8001094:	9f04      	ldr	r7, [sp, #16]
 8001096:	0413      	lsls	r3, r2, #16
 8001098:	0c1b      	lsrs	r3, r3, #16
 800109a:	4359      	muls	r1, r3
 800109c:	4640      	mov	r0, r8
 800109e:	437b      	muls	r3, r7
 80010a0:	469c      	mov	ip, r3
 80010a2:	0c15      	lsrs	r5, r2, #16
 80010a4:	4368      	muls	r0, r5
 80010a6:	0c0b      	lsrs	r3, r1, #16
 80010a8:	4484      	add	ip, r0
 80010aa:	4463      	add	r3, ip
 80010ac:	437d      	muls	r5, r7
 80010ae:	4298      	cmp	r0, r3
 80010b0:	d903      	bls.n	80010ba <__aeabi_ddiv+0x3aa>
 80010b2:	2080      	movs	r0, #128	@ 0x80
 80010b4:	0240      	lsls	r0, r0, #9
 80010b6:	4684      	mov	ip, r0
 80010b8:	4465      	add	r5, ip
 80010ba:	0c18      	lsrs	r0, r3, #16
 80010bc:	0409      	lsls	r1, r1, #16
 80010be:	041b      	lsls	r3, r3, #16
 80010c0:	0c09      	lsrs	r1, r1, #16
 80010c2:	1940      	adds	r0, r0, r5
 80010c4:	185b      	adds	r3, r3, r1
 80010c6:	4284      	cmp	r4, r0
 80010c8:	d327      	bcc.n	800111a <__aeabi_ddiv+0x40a>
 80010ca:	d023      	beq.n	8001114 <__aeabi_ddiv+0x404>
 80010cc:	2301      	movs	r3, #1
 80010ce:	0035      	movs	r5, r6
 80010d0:	431a      	orrs	r2, r3
 80010d2:	4b94      	ldr	r3, [pc, #592]	@ (8001324 <__aeabi_ddiv+0x614>)
 80010d4:	4453      	add	r3, sl
 80010d6:	2b00      	cmp	r3, #0
 80010d8:	dd60      	ble.n	800119c <__aeabi_ddiv+0x48c>
 80010da:	0751      	lsls	r1, r2, #29
 80010dc:	d000      	beq.n	80010e0 <__aeabi_ddiv+0x3d0>
 80010de:	e086      	b.n	80011ee <__aeabi_ddiv+0x4de>
 80010e0:	002e      	movs	r6, r5
 80010e2:	08d1      	lsrs	r1, r2, #3
 80010e4:	465a      	mov	r2, fp
 80010e6:	01d2      	lsls	r2, r2, #7
 80010e8:	d506      	bpl.n	80010f8 <__aeabi_ddiv+0x3e8>
 80010ea:	465a      	mov	r2, fp
 80010ec:	4b8e      	ldr	r3, [pc, #568]	@ (8001328 <__aeabi_ddiv+0x618>)
 80010ee:	401a      	ands	r2, r3
 80010f0:	2380      	movs	r3, #128	@ 0x80
 80010f2:	4693      	mov	fp, r2
 80010f4:	00db      	lsls	r3, r3, #3
 80010f6:	4453      	add	r3, sl
 80010f8:	4a8c      	ldr	r2, [pc, #560]	@ (800132c <__aeabi_ddiv+0x61c>)
 80010fa:	4293      	cmp	r3, r2
 80010fc:	dd00      	ble.n	8001100 <__aeabi_ddiv+0x3f0>
 80010fe:	e680      	b.n	8000e02 <__aeabi_ddiv+0xf2>
 8001100:	465a      	mov	r2, fp
 8001102:	0752      	lsls	r2, r2, #29
 8001104:	430a      	orrs	r2, r1
 8001106:	4690      	mov	r8, r2
 8001108:	465a      	mov	r2, fp
 800110a:	055b      	lsls	r3, r3, #21
 800110c:	0254      	lsls	r4, r2, #9
 800110e:	0b24      	lsrs	r4, r4, #12
 8001110:	0d5b      	lsrs	r3, r3, #21
 8001112:	e669      	b.n	8000de8 <__aeabi_ddiv+0xd8>
 8001114:	0035      	movs	r5, r6
 8001116:	2b00      	cmp	r3, #0
 8001118:	d0db      	beq.n	80010d2 <__aeabi_ddiv+0x3c2>
 800111a:	9d00      	ldr	r5, [sp, #0]
 800111c:	1e51      	subs	r1, r2, #1
 800111e:	46ac      	mov	ip, r5
 8001120:	4464      	add	r4, ip
 8001122:	42ac      	cmp	r4, r5
 8001124:	d200      	bcs.n	8001128 <__aeabi_ddiv+0x418>
 8001126:	e09e      	b.n	8001266 <__aeabi_ddiv+0x556>
 8001128:	4284      	cmp	r4, r0
 800112a:	d200      	bcs.n	800112e <__aeabi_ddiv+0x41e>
 800112c:	e0e1      	b.n	80012f2 <__aeabi_ddiv+0x5e2>
 800112e:	d100      	bne.n	8001132 <__aeabi_ddiv+0x422>
 8001130:	e0ee      	b.n	8001310 <__aeabi_ddiv+0x600>
 8001132:	000a      	movs	r2, r1
 8001134:	e7ca      	b.n	80010cc <__aeabi_ddiv+0x3bc>
 8001136:	4542      	cmp	r2, r8
 8001138:	d900      	bls.n	800113c <__aeabi_ddiv+0x42c>
 800113a:	e708      	b.n	8000f4e <__aeabi_ddiv+0x23e>
 800113c:	464b      	mov	r3, r9
 800113e:	07dc      	lsls	r4, r3, #31
 8001140:	0858      	lsrs	r0, r3, #1
 8001142:	4643      	mov	r3, r8
 8001144:	085b      	lsrs	r3, r3, #1
 8001146:	431c      	orrs	r4, r3
 8001148:	4643      	mov	r3, r8
 800114a:	07dd      	lsls	r5, r3, #31
 800114c:	e706      	b.n	8000f5c <__aeabi_ddiv+0x24c>
 800114e:	f001 fa83 	bl	8002658 <__clzsi2>
 8001152:	2315      	movs	r3, #21
 8001154:	469c      	mov	ip, r3
 8001156:	4484      	add	ip, r0
 8001158:	0002      	movs	r2, r0
 800115a:	4663      	mov	r3, ip
 800115c:	3220      	adds	r2, #32
 800115e:	2b1c      	cmp	r3, #28
 8001160:	dc00      	bgt.n	8001164 <__aeabi_ddiv+0x454>
 8001162:	e692      	b.n	8000e8a <__aeabi_ddiv+0x17a>
 8001164:	0023      	movs	r3, r4
 8001166:	3808      	subs	r0, #8
 8001168:	4083      	lsls	r3, r0
 800116a:	4699      	mov	r9, r3
 800116c:	2300      	movs	r3, #0
 800116e:	4698      	mov	r8, r3
 8001170:	e69a      	b.n	8000ea8 <__aeabi_ddiv+0x198>
 8001172:	f001 fa71 	bl	8002658 <__clzsi2>
 8001176:	0002      	movs	r2, r0
 8001178:	0003      	movs	r3, r0
 800117a:	3215      	adds	r2, #21
 800117c:	3320      	adds	r3, #32
 800117e:	2a1c      	cmp	r2, #28
 8001180:	dc00      	bgt.n	8001184 <__aeabi_ddiv+0x474>
 8001182:	e65f      	b.n	8000e44 <__aeabi_ddiv+0x134>
 8001184:	9900      	ldr	r1, [sp, #0]
 8001186:	3808      	subs	r0, #8
 8001188:	4081      	lsls	r1, r0
 800118a:	2200      	movs	r2, #0
 800118c:	468b      	mov	fp, r1
 800118e:	e666      	b.n	8000e5e <__aeabi_ddiv+0x14e>
 8001190:	2200      	movs	r2, #0
 8001192:	002e      	movs	r6, r5
 8001194:	2400      	movs	r4, #0
 8001196:	4690      	mov	r8, r2
 8001198:	4b65      	ldr	r3, [pc, #404]	@ (8001330 <__aeabi_ddiv+0x620>)
 800119a:	e625      	b.n	8000de8 <__aeabi_ddiv+0xd8>
 800119c:	002e      	movs	r6, r5
 800119e:	2101      	movs	r1, #1
 80011a0:	1ac9      	subs	r1, r1, r3
 80011a2:	2938      	cmp	r1, #56	@ 0x38
 80011a4:	dd00      	ble.n	80011a8 <__aeabi_ddiv+0x498>
 80011a6:	e61b      	b.n	8000de0 <__aeabi_ddiv+0xd0>
 80011a8:	291f      	cmp	r1, #31
 80011aa:	dc7e      	bgt.n	80012aa <__aeabi_ddiv+0x59a>
 80011ac:	4861      	ldr	r0, [pc, #388]	@ (8001334 <__aeabi_ddiv+0x624>)
 80011ae:	0014      	movs	r4, r2
 80011b0:	4450      	add	r0, sl
 80011b2:	465b      	mov	r3, fp
 80011b4:	4082      	lsls	r2, r0
 80011b6:	4083      	lsls	r3, r0
 80011b8:	40cc      	lsrs	r4, r1
 80011ba:	1e50      	subs	r0, r2, #1
 80011bc:	4182      	sbcs	r2, r0
 80011be:	4323      	orrs	r3, r4
 80011c0:	431a      	orrs	r2, r3
 80011c2:	465b      	mov	r3, fp
 80011c4:	40cb      	lsrs	r3, r1
 80011c6:	0751      	lsls	r1, r2, #29
 80011c8:	d009      	beq.n	80011de <__aeabi_ddiv+0x4ce>
 80011ca:	210f      	movs	r1, #15
 80011cc:	4011      	ands	r1, r2
 80011ce:	2904      	cmp	r1, #4
 80011d0:	d005      	beq.n	80011de <__aeabi_ddiv+0x4ce>
 80011d2:	1d11      	adds	r1, r2, #4
 80011d4:	4291      	cmp	r1, r2
 80011d6:	4192      	sbcs	r2, r2
 80011d8:	4252      	negs	r2, r2
 80011da:	189b      	adds	r3, r3, r2
 80011dc:	000a      	movs	r2, r1
 80011de:	0219      	lsls	r1, r3, #8
 80011e0:	d400      	bmi.n	80011e4 <__aeabi_ddiv+0x4d4>
 80011e2:	e09b      	b.n	800131c <__aeabi_ddiv+0x60c>
 80011e4:	2200      	movs	r2, #0
 80011e6:	2301      	movs	r3, #1
 80011e8:	2400      	movs	r4, #0
 80011ea:	4690      	mov	r8, r2
 80011ec:	e5fc      	b.n	8000de8 <__aeabi_ddiv+0xd8>
 80011ee:	210f      	movs	r1, #15
 80011f0:	4011      	ands	r1, r2
 80011f2:	2904      	cmp	r1, #4
 80011f4:	d100      	bne.n	80011f8 <__aeabi_ddiv+0x4e8>
 80011f6:	e773      	b.n	80010e0 <__aeabi_ddiv+0x3d0>
 80011f8:	1d11      	adds	r1, r2, #4
 80011fa:	4291      	cmp	r1, r2
 80011fc:	4192      	sbcs	r2, r2
 80011fe:	4252      	negs	r2, r2
 8001200:	002e      	movs	r6, r5
 8001202:	08c9      	lsrs	r1, r1, #3
 8001204:	4493      	add	fp, r2
 8001206:	e76d      	b.n	80010e4 <__aeabi_ddiv+0x3d4>
 8001208:	9b00      	ldr	r3, [sp, #0]
 800120a:	3d01      	subs	r5, #1
 800120c:	469c      	mov	ip, r3
 800120e:	4461      	add	r1, ip
 8001210:	428b      	cmp	r3, r1
 8001212:	d900      	bls.n	8001216 <__aeabi_ddiv+0x506>
 8001214:	e72c      	b.n	8001070 <__aeabi_ddiv+0x360>
 8001216:	428a      	cmp	r2, r1
 8001218:	d800      	bhi.n	800121c <__aeabi_ddiv+0x50c>
 800121a:	e729      	b.n	8001070 <__aeabi_ddiv+0x360>
 800121c:	1e85      	subs	r5, r0, #2
 800121e:	4461      	add	r1, ip
 8001220:	e726      	b.n	8001070 <__aeabi_ddiv+0x360>
 8001222:	9900      	ldr	r1, [sp, #0]
 8001224:	3b01      	subs	r3, #1
 8001226:	468c      	mov	ip, r1
 8001228:	4464      	add	r4, ip
 800122a:	42a1      	cmp	r1, r4
 800122c:	d900      	bls.n	8001230 <__aeabi_ddiv+0x520>
 800122e:	e72d      	b.n	800108c <__aeabi_ddiv+0x37c>
 8001230:	42a2      	cmp	r2, r4
 8001232:	d800      	bhi.n	8001236 <__aeabi_ddiv+0x526>
 8001234:	e72a      	b.n	800108c <__aeabi_ddiv+0x37c>
 8001236:	1e83      	subs	r3, r0, #2
 8001238:	4464      	add	r4, ip
 800123a:	e727      	b.n	800108c <__aeabi_ddiv+0x37c>
 800123c:	4287      	cmp	r7, r0
 800123e:	d000      	beq.n	8001242 <__aeabi_ddiv+0x532>
 8001240:	e6fe      	b.n	8001040 <__aeabi_ddiv+0x330>
 8001242:	45a9      	cmp	r9, r5
 8001244:	d900      	bls.n	8001248 <__aeabi_ddiv+0x538>
 8001246:	e6fb      	b.n	8001040 <__aeabi_ddiv+0x330>
 8001248:	e6f5      	b.n	8001036 <__aeabi_ddiv+0x326>
 800124a:	42a2      	cmp	r2, r4
 800124c:	d800      	bhi.n	8001250 <__aeabi_ddiv+0x540>
 800124e:	e6b9      	b.n	8000fc4 <__aeabi_ddiv+0x2b4>
 8001250:	1e83      	subs	r3, r0, #2
 8001252:	4464      	add	r4, ip
 8001254:	e6b6      	b.n	8000fc4 <__aeabi_ddiv+0x2b4>
 8001256:	428a      	cmp	r2, r1
 8001258:	d800      	bhi.n	800125c <__aeabi_ddiv+0x54c>
 800125a:	e69f      	b.n	8000f9c <__aeabi_ddiv+0x28c>
 800125c:	46bc      	mov	ip, r7
 800125e:	1e83      	subs	r3, r0, #2
 8001260:	4698      	mov	r8, r3
 8001262:	4461      	add	r1, ip
 8001264:	e69a      	b.n	8000f9c <__aeabi_ddiv+0x28c>
 8001266:	000a      	movs	r2, r1
 8001268:	4284      	cmp	r4, r0
 800126a:	d000      	beq.n	800126e <__aeabi_ddiv+0x55e>
 800126c:	e72e      	b.n	80010cc <__aeabi_ddiv+0x3bc>
 800126e:	454b      	cmp	r3, r9
 8001270:	d000      	beq.n	8001274 <__aeabi_ddiv+0x564>
 8001272:	e72b      	b.n	80010cc <__aeabi_ddiv+0x3bc>
 8001274:	0035      	movs	r5, r6
 8001276:	e72c      	b.n	80010d2 <__aeabi_ddiv+0x3c2>
 8001278:	4b2a      	ldr	r3, [pc, #168]	@ (8001324 <__aeabi_ddiv+0x614>)
 800127a:	4a2f      	ldr	r2, [pc, #188]	@ (8001338 <__aeabi_ddiv+0x628>)
 800127c:	4453      	add	r3, sl
 800127e:	4592      	cmp	sl, r2
 8001280:	db43      	blt.n	800130a <__aeabi_ddiv+0x5fa>
 8001282:	2201      	movs	r2, #1
 8001284:	2100      	movs	r1, #0
 8001286:	4493      	add	fp, r2
 8001288:	e72c      	b.n	80010e4 <__aeabi_ddiv+0x3d4>
 800128a:	42ac      	cmp	r4, r5
 800128c:	d800      	bhi.n	8001290 <__aeabi_ddiv+0x580>
 800128e:	e6d7      	b.n	8001040 <__aeabi_ddiv+0x330>
 8001290:	2302      	movs	r3, #2
 8001292:	425b      	negs	r3, r3
 8001294:	469c      	mov	ip, r3
 8001296:	9900      	ldr	r1, [sp, #0]
 8001298:	444d      	add	r5, r9
 800129a:	454d      	cmp	r5, r9
 800129c:	419b      	sbcs	r3, r3
 800129e:	44e3      	add	fp, ip
 80012a0:	468c      	mov	ip, r1
 80012a2:	425b      	negs	r3, r3
 80012a4:	4463      	add	r3, ip
 80012a6:	18c0      	adds	r0, r0, r3
 80012a8:	e6cc      	b.n	8001044 <__aeabi_ddiv+0x334>
 80012aa:	201f      	movs	r0, #31
 80012ac:	4240      	negs	r0, r0
 80012ae:	1ac3      	subs	r3, r0, r3
 80012b0:	4658      	mov	r0, fp
 80012b2:	40d8      	lsrs	r0, r3
 80012b4:	2920      	cmp	r1, #32
 80012b6:	d004      	beq.n	80012c2 <__aeabi_ddiv+0x5b2>
 80012b8:	4659      	mov	r1, fp
 80012ba:	4b20      	ldr	r3, [pc, #128]	@ (800133c <__aeabi_ddiv+0x62c>)
 80012bc:	4453      	add	r3, sl
 80012be:	4099      	lsls	r1, r3
 80012c0:	430a      	orrs	r2, r1
 80012c2:	1e53      	subs	r3, r2, #1
 80012c4:	419a      	sbcs	r2, r3
 80012c6:	2307      	movs	r3, #7
 80012c8:	0019      	movs	r1, r3
 80012ca:	4302      	orrs	r2, r0
 80012cc:	2400      	movs	r4, #0
 80012ce:	4011      	ands	r1, r2
 80012d0:	4213      	tst	r3, r2
 80012d2:	d009      	beq.n	80012e8 <__aeabi_ddiv+0x5d8>
 80012d4:	3308      	adds	r3, #8
 80012d6:	4013      	ands	r3, r2
 80012d8:	2b04      	cmp	r3, #4
 80012da:	d01d      	beq.n	8001318 <__aeabi_ddiv+0x608>
 80012dc:	1d13      	adds	r3, r2, #4
 80012de:	4293      	cmp	r3, r2
 80012e0:	4189      	sbcs	r1, r1
 80012e2:	001a      	movs	r2, r3
 80012e4:	4249      	negs	r1, r1
 80012e6:	0749      	lsls	r1, r1, #29
 80012e8:	08d2      	lsrs	r2, r2, #3
 80012ea:	430a      	orrs	r2, r1
 80012ec:	4690      	mov	r8, r2
 80012ee:	2300      	movs	r3, #0
 80012f0:	e57a      	b.n	8000de8 <__aeabi_ddiv+0xd8>
 80012f2:	4649      	mov	r1, r9
 80012f4:	9f00      	ldr	r7, [sp, #0]
 80012f6:	004d      	lsls	r5, r1, #1
 80012f8:	454d      	cmp	r5, r9
 80012fa:	4189      	sbcs	r1, r1
 80012fc:	46bc      	mov	ip, r7
 80012fe:	4249      	negs	r1, r1
 8001300:	4461      	add	r1, ip
 8001302:	46a9      	mov	r9, r5
 8001304:	3a02      	subs	r2, #2
 8001306:	1864      	adds	r4, r4, r1
 8001308:	e7ae      	b.n	8001268 <__aeabi_ddiv+0x558>
 800130a:	2201      	movs	r2, #1
 800130c:	4252      	negs	r2, r2
 800130e:	e746      	b.n	800119e <__aeabi_ddiv+0x48e>
 8001310:	4599      	cmp	r9, r3
 8001312:	d3ee      	bcc.n	80012f2 <__aeabi_ddiv+0x5e2>
 8001314:	000a      	movs	r2, r1
 8001316:	e7aa      	b.n	800126e <__aeabi_ddiv+0x55e>
 8001318:	2100      	movs	r1, #0
 800131a:	e7e5      	b.n	80012e8 <__aeabi_ddiv+0x5d8>
 800131c:	0759      	lsls	r1, r3, #29
 800131e:	025b      	lsls	r3, r3, #9
 8001320:	0b1c      	lsrs	r4, r3, #12
 8001322:	e7e1      	b.n	80012e8 <__aeabi_ddiv+0x5d8>
 8001324:	000003ff 	.word	0x000003ff
 8001328:	feffffff 	.word	0xfeffffff
 800132c:	000007fe 	.word	0x000007fe
 8001330:	000007ff 	.word	0x000007ff
 8001334:	0000041e 	.word	0x0000041e
 8001338:	fffffc02 	.word	0xfffffc02
 800133c:	0000043e 	.word	0x0000043e

08001340 <__eqdf2>:
 8001340:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001342:	4657      	mov	r7, sl
 8001344:	46de      	mov	lr, fp
 8001346:	464e      	mov	r6, r9
 8001348:	4645      	mov	r5, r8
 800134a:	b5e0      	push	{r5, r6, r7, lr}
 800134c:	000d      	movs	r5, r1
 800134e:	0004      	movs	r4, r0
 8001350:	0fe8      	lsrs	r0, r5, #31
 8001352:	4683      	mov	fp, r0
 8001354:	0309      	lsls	r1, r1, #12
 8001356:	0fd8      	lsrs	r0, r3, #31
 8001358:	0b09      	lsrs	r1, r1, #12
 800135a:	4682      	mov	sl, r0
 800135c:	4819      	ldr	r0, [pc, #100]	@ (80013c4 <__eqdf2+0x84>)
 800135e:	468c      	mov	ip, r1
 8001360:	031f      	lsls	r7, r3, #12
 8001362:	0069      	lsls	r1, r5, #1
 8001364:	005e      	lsls	r6, r3, #1
 8001366:	0d49      	lsrs	r1, r1, #21
 8001368:	0b3f      	lsrs	r7, r7, #12
 800136a:	0d76      	lsrs	r6, r6, #21
 800136c:	4281      	cmp	r1, r0
 800136e:	d018      	beq.n	80013a2 <__eqdf2+0x62>
 8001370:	4286      	cmp	r6, r0
 8001372:	d00f      	beq.n	8001394 <__eqdf2+0x54>
 8001374:	2001      	movs	r0, #1
 8001376:	42b1      	cmp	r1, r6
 8001378:	d10d      	bne.n	8001396 <__eqdf2+0x56>
 800137a:	45bc      	cmp	ip, r7
 800137c:	d10b      	bne.n	8001396 <__eqdf2+0x56>
 800137e:	4294      	cmp	r4, r2
 8001380:	d109      	bne.n	8001396 <__eqdf2+0x56>
 8001382:	45d3      	cmp	fp, sl
 8001384:	d01c      	beq.n	80013c0 <__eqdf2+0x80>
 8001386:	2900      	cmp	r1, #0
 8001388:	d105      	bne.n	8001396 <__eqdf2+0x56>
 800138a:	4660      	mov	r0, ip
 800138c:	4320      	orrs	r0, r4
 800138e:	1e43      	subs	r3, r0, #1
 8001390:	4198      	sbcs	r0, r3
 8001392:	e000      	b.n	8001396 <__eqdf2+0x56>
 8001394:	2001      	movs	r0, #1
 8001396:	bcf0      	pop	{r4, r5, r6, r7}
 8001398:	46bb      	mov	fp, r7
 800139a:	46b2      	mov	sl, r6
 800139c:	46a9      	mov	r9, r5
 800139e:	46a0      	mov	r8, r4
 80013a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013a2:	2001      	movs	r0, #1
 80013a4:	428e      	cmp	r6, r1
 80013a6:	d1f6      	bne.n	8001396 <__eqdf2+0x56>
 80013a8:	4661      	mov	r1, ip
 80013aa:	4339      	orrs	r1, r7
 80013ac:	000f      	movs	r7, r1
 80013ae:	4317      	orrs	r7, r2
 80013b0:	4327      	orrs	r7, r4
 80013b2:	d1f0      	bne.n	8001396 <__eqdf2+0x56>
 80013b4:	465b      	mov	r3, fp
 80013b6:	4652      	mov	r2, sl
 80013b8:	1a98      	subs	r0, r3, r2
 80013ba:	1e43      	subs	r3, r0, #1
 80013bc:	4198      	sbcs	r0, r3
 80013be:	e7ea      	b.n	8001396 <__eqdf2+0x56>
 80013c0:	2000      	movs	r0, #0
 80013c2:	e7e8      	b.n	8001396 <__eqdf2+0x56>
 80013c4:	000007ff 	.word	0x000007ff

080013c8 <__gedf2>:
 80013c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80013ca:	4657      	mov	r7, sl
 80013cc:	464e      	mov	r6, r9
 80013ce:	4645      	mov	r5, r8
 80013d0:	46de      	mov	lr, fp
 80013d2:	b5e0      	push	{r5, r6, r7, lr}
 80013d4:	000d      	movs	r5, r1
 80013d6:	030e      	lsls	r6, r1, #12
 80013d8:	0049      	lsls	r1, r1, #1
 80013da:	0d49      	lsrs	r1, r1, #21
 80013dc:	468a      	mov	sl, r1
 80013de:	0fdf      	lsrs	r7, r3, #31
 80013e0:	0fe9      	lsrs	r1, r5, #31
 80013e2:	46bc      	mov	ip, r7
 80013e4:	b083      	sub	sp, #12
 80013e6:	4f2f      	ldr	r7, [pc, #188]	@ (80014a4 <__gedf2+0xdc>)
 80013e8:	0004      	movs	r4, r0
 80013ea:	4680      	mov	r8, r0
 80013ec:	9101      	str	r1, [sp, #4]
 80013ee:	0058      	lsls	r0, r3, #1
 80013f0:	0319      	lsls	r1, r3, #12
 80013f2:	4691      	mov	r9, r2
 80013f4:	0b36      	lsrs	r6, r6, #12
 80013f6:	0b09      	lsrs	r1, r1, #12
 80013f8:	0d40      	lsrs	r0, r0, #21
 80013fa:	45ba      	cmp	sl, r7
 80013fc:	d01d      	beq.n	800143a <__gedf2+0x72>
 80013fe:	42b8      	cmp	r0, r7
 8001400:	d00d      	beq.n	800141e <__gedf2+0x56>
 8001402:	4657      	mov	r7, sl
 8001404:	2f00      	cmp	r7, #0
 8001406:	d12a      	bne.n	800145e <__gedf2+0x96>
 8001408:	4334      	orrs	r4, r6
 800140a:	2800      	cmp	r0, #0
 800140c:	d124      	bne.n	8001458 <__gedf2+0x90>
 800140e:	430a      	orrs	r2, r1
 8001410:	d036      	beq.n	8001480 <__gedf2+0xb8>
 8001412:	2c00      	cmp	r4, #0
 8001414:	d141      	bne.n	800149a <__gedf2+0xd2>
 8001416:	4663      	mov	r3, ip
 8001418:	0058      	lsls	r0, r3, #1
 800141a:	3801      	subs	r0, #1
 800141c:	e015      	b.n	800144a <__gedf2+0x82>
 800141e:	4311      	orrs	r1, r2
 8001420:	d138      	bne.n	8001494 <__gedf2+0xcc>
 8001422:	4653      	mov	r3, sl
 8001424:	2b00      	cmp	r3, #0
 8001426:	d101      	bne.n	800142c <__gedf2+0x64>
 8001428:	4326      	orrs	r6, r4
 800142a:	d0f4      	beq.n	8001416 <__gedf2+0x4e>
 800142c:	9b01      	ldr	r3, [sp, #4]
 800142e:	4563      	cmp	r3, ip
 8001430:	d107      	bne.n	8001442 <__gedf2+0x7a>
 8001432:	9b01      	ldr	r3, [sp, #4]
 8001434:	0058      	lsls	r0, r3, #1
 8001436:	3801      	subs	r0, #1
 8001438:	e007      	b.n	800144a <__gedf2+0x82>
 800143a:	4326      	orrs	r6, r4
 800143c:	d12a      	bne.n	8001494 <__gedf2+0xcc>
 800143e:	4550      	cmp	r0, sl
 8001440:	d021      	beq.n	8001486 <__gedf2+0xbe>
 8001442:	2001      	movs	r0, #1
 8001444:	9b01      	ldr	r3, [sp, #4]
 8001446:	425f      	negs	r7, r3
 8001448:	4338      	orrs	r0, r7
 800144a:	b003      	add	sp, #12
 800144c:	bcf0      	pop	{r4, r5, r6, r7}
 800144e:	46bb      	mov	fp, r7
 8001450:	46b2      	mov	sl, r6
 8001452:	46a9      	mov	r9, r5
 8001454:	46a0      	mov	r8, r4
 8001456:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001458:	2c00      	cmp	r4, #0
 800145a:	d0dc      	beq.n	8001416 <__gedf2+0x4e>
 800145c:	e7e6      	b.n	800142c <__gedf2+0x64>
 800145e:	2800      	cmp	r0, #0
 8001460:	d0ef      	beq.n	8001442 <__gedf2+0x7a>
 8001462:	9b01      	ldr	r3, [sp, #4]
 8001464:	4563      	cmp	r3, ip
 8001466:	d1ec      	bne.n	8001442 <__gedf2+0x7a>
 8001468:	4582      	cmp	sl, r0
 800146a:	dcea      	bgt.n	8001442 <__gedf2+0x7a>
 800146c:	dbe1      	blt.n	8001432 <__gedf2+0x6a>
 800146e:	428e      	cmp	r6, r1
 8001470:	d8e7      	bhi.n	8001442 <__gedf2+0x7a>
 8001472:	d1de      	bne.n	8001432 <__gedf2+0x6a>
 8001474:	45c8      	cmp	r8, r9
 8001476:	d8e4      	bhi.n	8001442 <__gedf2+0x7a>
 8001478:	2000      	movs	r0, #0
 800147a:	45c8      	cmp	r8, r9
 800147c:	d2e5      	bcs.n	800144a <__gedf2+0x82>
 800147e:	e7d8      	b.n	8001432 <__gedf2+0x6a>
 8001480:	2c00      	cmp	r4, #0
 8001482:	d0e2      	beq.n	800144a <__gedf2+0x82>
 8001484:	e7dd      	b.n	8001442 <__gedf2+0x7a>
 8001486:	4311      	orrs	r1, r2
 8001488:	d104      	bne.n	8001494 <__gedf2+0xcc>
 800148a:	9b01      	ldr	r3, [sp, #4]
 800148c:	4563      	cmp	r3, ip
 800148e:	d1d8      	bne.n	8001442 <__gedf2+0x7a>
 8001490:	2000      	movs	r0, #0
 8001492:	e7da      	b.n	800144a <__gedf2+0x82>
 8001494:	2002      	movs	r0, #2
 8001496:	4240      	negs	r0, r0
 8001498:	e7d7      	b.n	800144a <__gedf2+0x82>
 800149a:	9b01      	ldr	r3, [sp, #4]
 800149c:	4563      	cmp	r3, ip
 800149e:	d0e6      	beq.n	800146e <__gedf2+0xa6>
 80014a0:	e7cf      	b.n	8001442 <__gedf2+0x7a>
 80014a2:	46c0      	nop			@ (mov r8, r8)
 80014a4:	000007ff 	.word	0x000007ff

080014a8 <__ledf2>:
 80014a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80014aa:	4657      	mov	r7, sl
 80014ac:	464e      	mov	r6, r9
 80014ae:	4645      	mov	r5, r8
 80014b0:	46de      	mov	lr, fp
 80014b2:	b5e0      	push	{r5, r6, r7, lr}
 80014b4:	000d      	movs	r5, r1
 80014b6:	030e      	lsls	r6, r1, #12
 80014b8:	0049      	lsls	r1, r1, #1
 80014ba:	0d49      	lsrs	r1, r1, #21
 80014bc:	468a      	mov	sl, r1
 80014be:	0fdf      	lsrs	r7, r3, #31
 80014c0:	0fe9      	lsrs	r1, r5, #31
 80014c2:	46bc      	mov	ip, r7
 80014c4:	b083      	sub	sp, #12
 80014c6:	4f2e      	ldr	r7, [pc, #184]	@ (8001580 <__ledf2+0xd8>)
 80014c8:	0004      	movs	r4, r0
 80014ca:	4680      	mov	r8, r0
 80014cc:	9101      	str	r1, [sp, #4]
 80014ce:	0058      	lsls	r0, r3, #1
 80014d0:	0319      	lsls	r1, r3, #12
 80014d2:	4691      	mov	r9, r2
 80014d4:	0b36      	lsrs	r6, r6, #12
 80014d6:	0b09      	lsrs	r1, r1, #12
 80014d8:	0d40      	lsrs	r0, r0, #21
 80014da:	45ba      	cmp	sl, r7
 80014dc:	d01e      	beq.n	800151c <__ledf2+0x74>
 80014de:	42b8      	cmp	r0, r7
 80014e0:	d00d      	beq.n	80014fe <__ledf2+0x56>
 80014e2:	4657      	mov	r7, sl
 80014e4:	2f00      	cmp	r7, #0
 80014e6:	d127      	bne.n	8001538 <__ledf2+0x90>
 80014e8:	4334      	orrs	r4, r6
 80014ea:	2800      	cmp	r0, #0
 80014ec:	d133      	bne.n	8001556 <__ledf2+0xae>
 80014ee:	430a      	orrs	r2, r1
 80014f0:	d034      	beq.n	800155c <__ledf2+0xb4>
 80014f2:	2c00      	cmp	r4, #0
 80014f4:	d140      	bne.n	8001578 <__ledf2+0xd0>
 80014f6:	4663      	mov	r3, ip
 80014f8:	0058      	lsls	r0, r3, #1
 80014fa:	3801      	subs	r0, #1
 80014fc:	e015      	b.n	800152a <__ledf2+0x82>
 80014fe:	4311      	orrs	r1, r2
 8001500:	d112      	bne.n	8001528 <__ledf2+0x80>
 8001502:	4653      	mov	r3, sl
 8001504:	2b00      	cmp	r3, #0
 8001506:	d101      	bne.n	800150c <__ledf2+0x64>
 8001508:	4326      	orrs	r6, r4
 800150a:	d0f4      	beq.n	80014f6 <__ledf2+0x4e>
 800150c:	9b01      	ldr	r3, [sp, #4]
 800150e:	4563      	cmp	r3, ip
 8001510:	d01d      	beq.n	800154e <__ledf2+0xa6>
 8001512:	2001      	movs	r0, #1
 8001514:	9b01      	ldr	r3, [sp, #4]
 8001516:	425f      	negs	r7, r3
 8001518:	4338      	orrs	r0, r7
 800151a:	e006      	b.n	800152a <__ledf2+0x82>
 800151c:	4326      	orrs	r6, r4
 800151e:	d103      	bne.n	8001528 <__ledf2+0x80>
 8001520:	4550      	cmp	r0, sl
 8001522:	d1f6      	bne.n	8001512 <__ledf2+0x6a>
 8001524:	4311      	orrs	r1, r2
 8001526:	d01c      	beq.n	8001562 <__ledf2+0xba>
 8001528:	2002      	movs	r0, #2
 800152a:	b003      	add	sp, #12
 800152c:	bcf0      	pop	{r4, r5, r6, r7}
 800152e:	46bb      	mov	fp, r7
 8001530:	46b2      	mov	sl, r6
 8001532:	46a9      	mov	r9, r5
 8001534:	46a0      	mov	r8, r4
 8001536:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001538:	2800      	cmp	r0, #0
 800153a:	d0ea      	beq.n	8001512 <__ledf2+0x6a>
 800153c:	9b01      	ldr	r3, [sp, #4]
 800153e:	4563      	cmp	r3, ip
 8001540:	d1e7      	bne.n	8001512 <__ledf2+0x6a>
 8001542:	4582      	cmp	sl, r0
 8001544:	dce5      	bgt.n	8001512 <__ledf2+0x6a>
 8001546:	db02      	blt.n	800154e <__ledf2+0xa6>
 8001548:	428e      	cmp	r6, r1
 800154a:	d8e2      	bhi.n	8001512 <__ledf2+0x6a>
 800154c:	d00e      	beq.n	800156c <__ledf2+0xc4>
 800154e:	9b01      	ldr	r3, [sp, #4]
 8001550:	0058      	lsls	r0, r3, #1
 8001552:	3801      	subs	r0, #1
 8001554:	e7e9      	b.n	800152a <__ledf2+0x82>
 8001556:	2c00      	cmp	r4, #0
 8001558:	d0cd      	beq.n	80014f6 <__ledf2+0x4e>
 800155a:	e7d7      	b.n	800150c <__ledf2+0x64>
 800155c:	2c00      	cmp	r4, #0
 800155e:	d0e4      	beq.n	800152a <__ledf2+0x82>
 8001560:	e7d7      	b.n	8001512 <__ledf2+0x6a>
 8001562:	9b01      	ldr	r3, [sp, #4]
 8001564:	2000      	movs	r0, #0
 8001566:	4563      	cmp	r3, ip
 8001568:	d0df      	beq.n	800152a <__ledf2+0x82>
 800156a:	e7d2      	b.n	8001512 <__ledf2+0x6a>
 800156c:	45c8      	cmp	r8, r9
 800156e:	d8d0      	bhi.n	8001512 <__ledf2+0x6a>
 8001570:	2000      	movs	r0, #0
 8001572:	45c8      	cmp	r8, r9
 8001574:	d2d9      	bcs.n	800152a <__ledf2+0x82>
 8001576:	e7ea      	b.n	800154e <__ledf2+0xa6>
 8001578:	9b01      	ldr	r3, [sp, #4]
 800157a:	4563      	cmp	r3, ip
 800157c:	d0e4      	beq.n	8001548 <__ledf2+0xa0>
 800157e:	e7c8      	b.n	8001512 <__ledf2+0x6a>
 8001580:	000007ff 	.word	0x000007ff

08001584 <__aeabi_dmul>:
 8001584:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001586:	4657      	mov	r7, sl
 8001588:	464e      	mov	r6, r9
 800158a:	46de      	mov	lr, fp
 800158c:	4645      	mov	r5, r8
 800158e:	b5e0      	push	{r5, r6, r7, lr}
 8001590:	001f      	movs	r7, r3
 8001592:	030b      	lsls	r3, r1, #12
 8001594:	0b1b      	lsrs	r3, r3, #12
 8001596:	0016      	movs	r6, r2
 8001598:	469a      	mov	sl, r3
 800159a:	0fca      	lsrs	r2, r1, #31
 800159c:	004b      	lsls	r3, r1, #1
 800159e:	0004      	movs	r4, r0
 80015a0:	4691      	mov	r9, r2
 80015a2:	b085      	sub	sp, #20
 80015a4:	0d5b      	lsrs	r3, r3, #21
 80015a6:	d100      	bne.n	80015aa <__aeabi_dmul+0x26>
 80015a8:	e1cf      	b.n	800194a <__aeabi_dmul+0x3c6>
 80015aa:	4acd      	ldr	r2, [pc, #820]	@ (80018e0 <__aeabi_dmul+0x35c>)
 80015ac:	4293      	cmp	r3, r2
 80015ae:	d055      	beq.n	800165c <__aeabi_dmul+0xd8>
 80015b0:	4651      	mov	r1, sl
 80015b2:	0f42      	lsrs	r2, r0, #29
 80015b4:	00c9      	lsls	r1, r1, #3
 80015b6:	430a      	orrs	r2, r1
 80015b8:	2180      	movs	r1, #128	@ 0x80
 80015ba:	0409      	lsls	r1, r1, #16
 80015bc:	4311      	orrs	r1, r2
 80015be:	00c2      	lsls	r2, r0, #3
 80015c0:	4690      	mov	r8, r2
 80015c2:	4ac8      	ldr	r2, [pc, #800]	@ (80018e4 <__aeabi_dmul+0x360>)
 80015c4:	468a      	mov	sl, r1
 80015c6:	4693      	mov	fp, r2
 80015c8:	449b      	add	fp, r3
 80015ca:	2300      	movs	r3, #0
 80015cc:	2500      	movs	r5, #0
 80015ce:	9302      	str	r3, [sp, #8]
 80015d0:	033c      	lsls	r4, r7, #12
 80015d2:	007b      	lsls	r3, r7, #1
 80015d4:	0ffa      	lsrs	r2, r7, #31
 80015d6:	9601      	str	r6, [sp, #4]
 80015d8:	0b24      	lsrs	r4, r4, #12
 80015da:	0d5b      	lsrs	r3, r3, #21
 80015dc:	9200      	str	r2, [sp, #0]
 80015de:	d100      	bne.n	80015e2 <__aeabi_dmul+0x5e>
 80015e0:	e188      	b.n	80018f4 <__aeabi_dmul+0x370>
 80015e2:	4abf      	ldr	r2, [pc, #764]	@ (80018e0 <__aeabi_dmul+0x35c>)
 80015e4:	4293      	cmp	r3, r2
 80015e6:	d100      	bne.n	80015ea <__aeabi_dmul+0x66>
 80015e8:	e092      	b.n	8001710 <__aeabi_dmul+0x18c>
 80015ea:	4abe      	ldr	r2, [pc, #760]	@ (80018e4 <__aeabi_dmul+0x360>)
 80015ec:	4694      	mov	ip, r2
 80015ee:	4463      	add	r3, ip
 80015f0:	449b      	add	fp, r3
 80015f2:	2d0a      	cmp	r5, #10
 80015f4:	dc42      	bgt.n	800167c <__aeabi_dmul+0xf8>
 80015f6:	00e4      	lsls	r4, r4, #3
 80015f8:	0f73      	lsrs	r3, r6, #29
 80015fa:	4323      	orrs	r3, r4
 80015fc:	2480      	movs	r4, #128	@ 0x80
 80015fe:	4649      	mov	r1, r9
 8001600:	0424      	lsls	r4, r4, #16
 8001602:	431c      	orrs	r4, r3
 8001604:	00f3      	lsls	r3, r6, #3
 8001606:	9301      	str	r3, [sp, #4]
 8001608:	9b00      	ldr	r3, [sp, #0]
 800160a:	2000      	movs	r0, #0
 800160c:	4059      	eors	r1, r3
 800160e:	b2cb      	uxtb	r3, r1
 8001610:	9303      	str	r3, [sp, #12]
 8001612:	2d02      	cmp	r5, #2
 8001614:	dc00      	bgt.n	8001618 <__aeabi_dmul+0x94>
 8001616:	e094      	b.n	8001742 <__aeabi_dmul+0x1be>
 8001618:	2301      	movs	r3, #1
 800161a:	40ab      	lsls	r3, r5
 800161c:	001d      	movs	r5, r3
 800161e:	23a6      	movs	r3, #166	@ 0xa6
 8001620:	002a      	movs	r2, r5
 8001622:	00db      	lsls	r3, r3, #3
 8001624:	401a      	ands	r2, r3
 8001626:	421d      	tst	r5, r3
 8001628:	d000      	beq.n	800162c <__aeabi_dmul+0xa8>
 800162a:	e229      	b.n	8001a80 <__aeabi_dmul+0x4fc>
 800162c:	2390      	movs	r3, #144	@ 0x90
 800162e:	009b      	lsls	r3, r3, #2
 8001630:	421d      	tst	r5, r3
 8001632:	d100      	bne.n	8001636 <__aeabi_dmul+0xb2>
 8001634:	e24d      	b.n	8001ad2 <__aeabi_dmul+0x54e>
 8001636:	2300      	movs	r3, #0
 8001638:	2480      	movs	r4, #128	@ 0x80
 800163a:	4699      	mov	r9, r3
 800163c:	0324      	lsls	r4, r4, #12
 800163e:	4ba8      	ldr	r3, [pc, #672]	@ (80018e0 <__aeabi_dmul+0x35c>)
 8001640:	0010      	movs	r0, r2
 8001642:	464a      	mov	r2, r9
 8001644:	051b      	lsls	r3, r3, #20
 8001646:	4323      	orrs	r3, r4
 8001648:	07d2      	lsls	r2, r2, #31
 800164a:	4313      	orrs	r3, r2
 800164c:	0019      	movs	r1, r3
 800164e:	b005      	add	sp, #20
 8001650:	bcf0      	pop	{r4, r5, r6, r7}
 8001652:	46bb      	mov	fp, r7
 8001654:	46b2      	mov	sl, r6
 8001656:	46a9      	mov	r9, r5
 8001658:	46a0      	mov	r8, r4
 800165a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800165c:	4652      	mov	r2, sl
 800165e:	4302      	orrs	r2, r0
 8001660:	4690      	mov	r8, r2
 8001662:	d000      	beq.n	8001666 <__aeabi_dmul+0xe2>
 8001664:	e1ac      	b.n	80019c0 <__aeabi_dmul+0x43c>
 8001666:	469b      	mov	fp, r3
 8001668:	2302      	movs	r3, #2
 800166a:	4692      	mov	sl, r2
 800166c:	2508      	movs	r5, #8
 800166e:	9302      	str	r3, [sp, #8]
 8001670:	e7ae      	b.n	80015d0 <__aeabi_dmul+0x4c>
 8001672:	9b00      	ldr	r3, [sp, #0]
 8001674:	46a2      	mov	sl, r4
 8001676:	4699      	mov	r9, r3
 8001678:	9b01      	ldr	r3, [sp, #4]
 800167a:	4698      	mov	r8, r3
 800167c:	9b02      	ldr	r3, [sp, #8]
 800167e:	2b02      	cmp	r3, #2
 8001680:	d100      	bne.n	8001684 <__aeabi_dmul+0x100>
 8001682:	e1ca      	b.n	8001a1a <__aeabi_dmul+0x496>
 8001684:	2b03      	cmp	r3, #3
 8001686:	d100      	bne.n	800168a <__aeabi_dmul+0x106>
 8001688:	e192      	b.n	80019b0 <__aeabi_dmul+0x42c>
 800168a:	2b01      	cmp	r3, #1
 800168c:	d110      	bne.n	80016b0 <__aeabi_dmul+0x12c>
 800168e:	2300      	movs	r3, #0
 8001690:	2400      	movs	r4, #0
 8001692:	2200      	movs	r2, #0
 8001694:	e7d4      	b.n	8001640 <__aeabi_dmul+0xbc>
 8001696:	2201      	movs	r2, #1
 8001698:	087b      	lsrs	r3, r7, #1
 800169a:	403a      	ands	r2, r7
 800169c:	4313      	orrs	r3, r2
 800169e:	4652      	mov	r2, sl
 80016a0:	07d2      	lsls	r2, r2, #31
 80016a2:	4313      	orrs	r3, r2
 80016a4:	4698      	mov	r8, r3
 80016a6:	4653      	mov	r3, sl
 80016a8:	085b      	lsrs	r3, r3, #1
 80016aa:	469a      	mov	sl, r3
 80016ac:	9b03      	ldr	r3, [sp, #12]
 80016ae:	4699      	mov	r9, r3
 80016b0:	465b      	mov	r3, fp
 80016b2:	1c58      	adds	r0, r3, #1
 80016b4:	2380      	movs	r3, #128	@ 0x80
 80016b6:	00db      	lsls	r3, r3, #3
 80016b8:	445b      	add	r3, fp
 80016ba:	2b00      	cmp	r3, #0
 80016bc:	dc00      	bgt.n	80016c0 <__aeabi_dmul+0x13c>
 80016be:	e1b1      	b.n	8001a24 <__aeabi_dmul+0x4a0>
 80016c0:	4642      	mov	r2, r8
 80016c2:	0752      	lsls	r2, r2, #29
 80016c4:	d00b      	beq.n	80016de <__aeabi_dmul+0x15a>
 80016c6:	220f      	movs	r2, #15
 80016c8:	4641      	mov	r1, r8
 80016ca:	400a      	ands	r2, r1
 80016cc:	2a04      	cmp	r2, #4
 80016ce:	d006      	beq.n	80016de <__aeabi_dmul+0x15a>
 80016d0:	4642      	mov	r2, r8
 80016d2:	1d11      	adds	r1, r2, #4
 80016d4:	4541      	cmp	r1, r8
 80016d6:	4192      	sbcs	r2, r2
 80016d8:	4688      	mov	r8, r1
 80016da:	4252      	negs	r2, r2
 80016dc:	4492      	add	sl, r2
 80016de:	4652      	mov	r2, sl
 80016e0:	01d2      	lsls	r2, r2, #7
 80016e2:	d506      	bpl.n	80016f2 <__aeabi_dmul+0x16e>
 80016e4:	4652      	mov	r2, sl
 80016e6:	4b80      	ldr	r3, [pc, #512]	@ (80018e8 <__aeabi_dmul+0x364>)
 80016e8:	401a      	ands	r2, r3
 80016ea:	2380      	movs	r3, #128	@ 0x80
 80016ec:	4692      	mov	sl, r2
 80016ee:	00db      	lsls	r3, r3, #3
 80016f0:	18c3      	adds	r3, r0, r3
 80016f2:	4a7e      	ldr	r2, [pc, #504]	@ (80018ec <__aeabi_dmul+0x368>)
 80016f4:	4293      	cmp	r3, r2
 80016f6:	dd00      	ble.n	80016fa <__aeabi_dmul+0x176>
 80016f8:	e18f      	b.n	8001a1a <__aeabi_dmul+0x496>
 80016fa:	4642      	mov	r2, r8
 80016fc:	08d1      	lsrs	r1, r2, #3
 80016fe:	4652      	mov	r2, sl
 8001700:	0752      	lsls	r2, r2, #29
 8001702:	430a      	orrs	r2, r1
 8001704:	4651      	mov	r1, sl
 8001706:	055b      	lsls	r3, r3, #21
 8001708:	024c      	lsls	r4, r1, #9
 800170a:	0b24      	lsrs	r4, r4, #12
 800170c:	0d5b      	lsrs	r3, r3, #21
 800170e:	e797      	b.n	8001640 <__aeabi_dmul+0xbc>
 8001710:	4b73      	ldr	r3, [pc, #460]	@ (80018e0 <__aeabi_dmul+0x35c>)
 8001712:	4326      	orrs	r6, r4
 8001714:	469c      	mov	ip, r3
 8001716:	44e3      	add	fp, ip
 8001718:	2e00      	cmp	r6, #0
 800171a:	d100      	bne.n	800171e <__aeabi_dmul+0x19a>
 800171c:	e16f      	b.n	80019fe <__aeabi_dmul+0x47a>
 800171e:	2303      	movs	r3, #3
 8001720:	4649      	mov	r1, r9
 8001722:	431d      	orrs	r5, r3
 8001724:	9b00      	ldr	r3, [sp, #0]
 8001726:	4059      	eors	r1, r3
 8001728:	b2cb      	uxtb	r3, r1
 800172a:	9303      	str	r3, [sp, #12]
 800172c:	2d0a      	cmp	r5, #10
 800172e:	dd00      	ble.n	8001732 <__aeabi_dmul+0x1ae>
 8001730:	e133      	b.n	800199a <__aeabi_dmul+0x416>
 8001732:	2301      	movs	r3, #1
 8001734:	40ab      	lsls	r3, r5
 8001736:	001d      	movs	r5, r3
 8001738:	2303      	movs	r3, #3
 800173a:	9302      	str	r3, [sp, #8]
 800173c:	2288      	movs	r2, #136	@ 0x88
 800173e:	422a      	tst	r2, r5
 8001740:	d197      	bne.n	8001672 <__aeabi_dmul+0xee>
 8001742:	4642      	mov	r2, r8
 8001744:	4643      	mov	r3, r8
 8001746:	0412      	lsls	r2, r2, #16
 8001748:	0c12      	lsrs	r2, r2, #16
 800174a:	0016      	movs	r6, r2
 800174c:	9801      	ldr	r0, [sp, #4]
 800174e:	0c1d      	lsrs	r5, r3, #16
 8001750:	0c03      	lsrs	r3, r0, #16
 8001752:	0400      	lsls	r0, r0, #16
 8001754:	0c00      	lsrs	r0, r0, #16
 8001756:	4346      	muls	r6, r0
 8001758:	46b4      	mov	ip, r6
 800175a:	001e      	movs	r6, r3
 800175c:	436e      	muls	r6, r5
 800175e:	9600      	str	r6, [sp, #0]
 8001760:	0016      	movs	r6, r2
 8001762:	0007      	movs	r7, r0
 8001764:	435e      	muls	r6, r3
 8001766:	4661      	mov	r1, ip
 8001768:	46b0      	mov	r8, r6
 800176a:	436f      	muls	r7, r5
 800176c:	0c0e      	lsrs	r6, r1, #16
 800176e:	44b8      	add	r8, r7
 8001770:	4446      	add	r6, r8
 8001772:	42b7      	cmp	r7, r6
 8001774:	d905      	bls.n	8001782 <__aeabi_dmul+0x1fe>
 8001776:	2180      	movs	r1, #128	@ 0x80
 8001778:	0249      	lsls	r1, r1, #9
 800177a:	4688      	mov	r8, r1
 800177c:	9f00      	ldr	r7, [sp, #0]
 800177e:	4447      	add	r7, r8
 8001780:	9700      	str	r7, [sp, #0]
 8001782:	4661      	mov	r1, ip
 8001784:	0409      	lsls	r1, r1, #16
 8001786:	0c09      	lsrs	r1, r1, #16
 8001788:	0c37      	lsrs	r7, r6, #16
 800178a:	0436      	lsls	r6, r6, #16
 800178c:	468c      	mov	ip, r1
 800178e:	0031      	movs	r1, r6
 8001790:	4461      	add	r1, ip
 8001792:	9101      	str	r1, [sp, #4]
 8001794:	0011      	movs	r1, r2
 8001796:	0c26      	lsrs	r6, r4, #16
 8001798:	0424      	lsls	r4, r4, #16
 800179a:	0c24      	lsrs	r4, r4, #16
 800179c:	4361      	muls	r1, r4
 800179e:	468c      	mov	ip, r1
 80017a0:	0021      	movs	r1, r4
 80017a2:	4369      	muls	r1, r5
 80017a4:	4689      	mov	r9, r1
 80017a6:	4661      	mov	r1, ip
 80017a8:	0c09      	lsrs	r1, r1, #16
 80017aa:	4688      	mov	r8, r1
 80017ac:	4372      	muls	r2, r6
 80017ae:	444a      	add	r2, r9
 80017b0:	4442      	add	r2, r8
 80017b2:	4375      	muls	r5, r6
 80017b4:	4591      	cmp	r9, r2
 80017b6:	d903      	bls.n	80017c0 <__aeabi_dmul+0x23c>
 80017b8:	2180      	movs	r1, #128	@ 0x80
 80017ba:	0249      	lsls	r1, r1, #9
 80017bc:	4688      	mov	r8, r1
 80017be:	4445      	add	r5, r8
 80017c0:	0c11      	lsrs	r1, r2, #16
 80017c2:	4688      	mov	r8, r1
 80017c4:	4661      	mov	r1, ip
 80017c6:	0409      	lsls	r1, r1, #16
 80017c8:	0c09      	lsrs	r1, r1, #16
 80017ca:	468c      	mov	ip, r1
 80017cc:	0412      	lsls	r2, r2, #16
 80017ce:	4462      	add	r2, ip
 80017d0:	18b9      	adds	r1, r7, r2
 80017d2:	9102      	str	r1, [sp, #8]
 80017d4:	4651      	mov	r1, sl
 80017d6:	0c09      	lsrs	r1, r1, #16
 80017d8:	468c      	mov	ip, r1
 80017da:	4651      	mov	r1, sl
 80017dc:	040f      	lsls	r7, r1, #16
 80017de:	0c3f      	lsrs	r7, r7, #16
 80017e0:	0039      	movs	r1, r7
 80017e2:	4341      	muls	r1, r0
 80017e4:	4445      	add	r5, r8
 80017e6:	4688      	mov	r8, r1
 80017e8:	4661      	mov	r1, ip
 80017ea:	4341      	muls	r1, r0
 80017ec:	468a      	mov	sl, r1
 80017ee:	4641      	mov	r1, r8
 80017f0:	4660      	mov	r0, ip
 80017f2:	0c09      	lsrs	r1, r1, #16
 80017f4:	4689      	mov	r9, r1
 80017f6:	4358      	muls	r0, r3
 80017f8:	437b      	muls	r3, r7
 80017fa:	4453      	add	r3, sl
 80017fc:	444b      	add	r3, r9
 80017fe:	459a      	cmp	sl, r3
 8001800:	d903      	bls.n	800180a <__aeabi_dmul+0x286>
 8001802:	2180      	movs	r1, #128	@ 0x80
 8001804:	0249      	lsls	r1, r1, #9
 8001806:	4689      	mov	r9, r1
 8001808:	4448      	add	r0, r9
 800180a:	0c19      	lsrs	r1, r3, #16
 800180c:	4689      	mov	r9, r1
 800180e:	4641      	mov	r1, r8
 8001810:	0409      	lsls	r1, r1, #16
 8001812:	0c09      	lsrs	r1, r1, #16
 8001814:	4688      	mov	r8, r1
 8001816:	0039      	movs	r1, r7
 8001818:	4361      	muls	r1, r4
 800181a:	041b      	lsls	r3, r3, #16
 800181c:	4443      	add	r3, r8
 800181e:	4688      	mov	r8, r1
 8001820:	4661      	mov	r1, ip
 8001822:	434c      	muls	r4, r1
 8001824:	4371      	muls	r1, r6
 8001826:	468c      	mov	ip, r1
 8001828:	4641      	mov	r1, r8
 800182a:	4377      	muls	r7, r6
 800182c:	0c0e      	lsrs	r6, r1, #16
 800182e:	193f      	adds	r7, r7, r4
 8001830:	19f6      	adds	r6, r6, r7
 8001832:	4448      	add	r0, r9
 8001834:	42b4      	cmp	r4, r6
 8001836:	d903      	bls.n	8001840 <__aeabi_dmul+0x2bc>
 8001838:	2180      	movs	r1, #128	@ 0x80
 800183a:	0249      	lsls	r1, r1, #9
 800183c:	4689      	mov	r9, r1
 800183e:	44cc      	add	ip, r9
 8001840:	9902      	ldr	r1, [sp, #8]
 8001842:	9f00      	ldr	r7, [sp, #0]
 8001844:	4689      	mov	r9, r1
 8001846:	0431      	lsls	r1, r6, #16
 8001848:	444f      	add	r7, r9
 800184a:	4689      	mov	r9, r1
 800184c:	4641      	mov	r1, r8
 800184e:	4297      	cmp	r7, r2
 8001850:	4192      	sbcs	r2, r2
 8001852:	040c      	lsls	r4, r1, #16
 8001854:	0c24      	lsrs	r4, r4, #16
 8001856:	444c      	add	r4, r9
 8001858:	18ff      	adds	r7, r7, r3
 800185a:	4252      	negs	r2, r2
 800185c:	1964      	adds	r4, r4, r5
 800185e:	18a1      	adds	r1, r4, r2
 8001860:	429f      	cmp	r7, r3
 8001862:	419b      	sbcs	r3, r3
 8001864:	4688      	mov	r8, r1
 8001866:	4682      	mov	sl, r0
 8001868:	425b      	negs	r3, r3
 800186a:	4699      	mov	r9, r3
 800186c:	4590      	cmp	r8, r2
 800186e:	4192      	sbcs	r2, r2
 8001870:	42ac      	cmp	r4, r5
 8001872:	41a4      	sbcs	r4, r4
 8001874:	44c2      	add	sl, r8
 8001876:	44d1      	add	r9, sl
 8001878:	4252      	negs	r2, r2
 800187a:	4264      	negs	r4, r4
 800187c:	4314      	orrs	r4, r2
 800187e:	4599      	cmp	r9, r3
 8001880:	419b      	sbcs	r3, r3
 8001882:	4582      	cmp	sl, r0
 8001884:	4192      	sbcs	r2, r2
 8001886:	425b      	negs	r3, r3
 8001888:	4252      	negs	r2, r2
 800188a:	4313      	orrs	r3, r2
 800188c:	464a      	mov	r2, r9
 800188e:	0c36      	lsrs	r6, r6, #16
 8001890:	19a4      	adds	r4, r4, r6
 8001892:	18e3      	adds	r3, r4, r3
 8001894:	4463      	add	r3, ip
 8001896:	025b      	lsls	r3, r3, #9
 8001898:	0dd2      	lsrs	r2, r2, #23
 800189a:	431a      	orrs	r2, r3
 800189c:	9901      	ldr	r1, [sp, #4]
 800189e:	4692      	mov	sl, r2
 80018a0:	027a      	lsls	r2, r7, #9
 80018a2:	430a      	orrs	r2, r1
 80018a4:	1e50      	subs	r0, r2, #1
 80018a6:	4182      	sbcs	r2, r0
 80018a8:	0dff      	lsrs	r7, r7, #23
 80018aa:	4317      	orrs	r7, r2
 80018ac:	464a      	mov	r2, r9
 80018ae:	0252      	lsls	r2, r2, #9
 80018b0:	4317      	orrs	r7, r2
 80018b2:	46b8      	mov	r8, r7
 80018b4:	01db      	lsls	r3, r3, #7
 80018b6:	d500      	bpl.n	80018ba <__aeabi_dmul+0x336>
 80018b8:	e6ed      	b.n	8001696 <__aeabi_dmul+0x112>
 80018ba:	4b0d      	ldr	r3, [pc, #52]	@ (80018f0 <__aeabi_dmul+0x36c>)
 80018bc:	9a03      	ldr	r2, [sp, #12]
 80018be:	445b      	add	r3, fp
 80018c0:	4691      	mov	r9, r2
 80018c2:	2b00      	cmp	r3, #0
 80018c4:	dc00      	bgt.n	80018c8 <__aeabi_dmul+0x344>
 80018c6:	e0ac      	b.n	8001a22 <__aeabi_dmul+0x49e>
 80018c8:	003a      	movs	r2, r7
 80018ca:	0752      	lsls	r2, r2, #29
 80018cc:	d100      	bne.n	80018d0 <__aeabi_dmul+0x34c>
 80018ce:	e710      	b.n	80016f2 <__aeabi_dmul+0x16e>
 80018d0:	220f      	movs	r2, #15
 80018d2:	4658      	mov	r0, fp
 80018d4:	403a      	ands	r2, r7
 80018d6:	2a04      	cmp	r2, #4
 80018d8:	d000      	beq.n	80018dc <__aeabi_dmul+0x358>
 80018da:	e6f9      	b.n	80016d0 <__aeabi_dmul+0x14c>
 80018dc:	e709      	b.n	80016f2 <__aeabi_dmul+0x16e>
 80018de:	46c0      	nop			@ (mov r8, r8)
 80018e0:	000007ff 	.word	0x000007ff
 80018e4:	fffffc01 	.word	0xfffffc01
 80018e8:	feffffff 	.word	0xfeffffff
 80018ec:	000007fe 	.word	0x000007fe
 80018f0:	000003ff 	.word	0x000003ff
 80018f4:	0022      	movs	r2, r4
 80018f6:	4332      	orrs	r2, r6
 80018f8:	d06f      	beq.n	80019da <__aeabi_dmul+0x456>
 80018fa:	2c00      	cmp	r4, #0
 80018fc:	d100      	bne.n	8001900 <__aeabi_dmul+0x37c>
 80018fe:	e0c2      	b.n	8001a86 <__aeabi_dmul+0x502>
 8001900:	0020      	movs	r0, r4
 8001902:	f000 fea9 	bl	8002658 <__clzsi2>
 8001906:	0002      	movs	r2, r0
 8001908:	0003      	movs	r3, r0
 800190a:	3a0b      	subs	r2, #11
 800190c:	201d      	movs	r0, #29
 800190e:	1a82      	subs	r2, r0, r2
 8001910:	0030      	movs	r0, r6
 8001912:	0019      	movs	r1, r3
 8001914:	40d0      	lsrs	r0, r2
 8001916:	3908      	subs	r1, #8
 8001918:	408c      	lsls	r4, r1
 800191a:	0002      	movs	r2, r0
 800191c:	4322      	orrs	r2, r4
 800191e:	0034      	movs	r4, r6
 8001920:	408c      	lsls	r4, r1
 8001922:	4659      	mov	r1, fp
 8001924:	1acb      	subs	r3, r1, r3
 8001926:	4986      	ldr	r1, [pc, #536]	@ (8001b40 <__aeabi_dmul+0x5bc>)
 8001928:	468b      	mov	fp, r1
 800192a:	449b      	add	fp, r3
 800192c:	2d0a      	cmp	r5, #10
 800192e:	dd00      	ble.n	8001932 <__aeabi_dmul+0x3ae>
 8001930:	e6a4      	b.n	800167c <__aeabi_dmul+0xf8>
 8001932:	4649      	mov	r1, r9
 8001934:	9b00      	ldr	r3, [sp, #0]
 8001936:	9401      	str	r4, [sp, #4]
 8001938:	4059      	eors	r1, r3
 800193a:	b2cb      	uxtb	r3, r1
 800193c:	0014      	movs	r4, r2
 800193e:	2000      	movs	r0, #0
 8001940:	9303      	str	r3, [sp, #12]
 8001942:	2d02      	cmp	r5, #2
 8001944:	dd00      	ble.n	8001948 <__aeabi_dmul+0x3c4>
 8001946:	e667      	b.n	8001618 <__aeabi_dmul+0x94>
 8001948:	e6fb      	b.n	8001742 <__aeabi_dmul+0x1be>
 800194a:	4653      	mov	r3, sl
 800194c:	4303      	orrs	r3, r0
 800194e:	4698      	mov	r8, r3
 8001950:	d03c      	beq.n	80019cc <__aeabi_dmul+0x448>
 8001952:	4653      	mov	r3, sl
 8001954:	2b00      	cmp	r3, #0
 8001956:	d100      	bne.n	800195a <__aeabi_dmul+0x3d6>
 8001958:	e0a3      	b.n	8001aa2 <__aeabi_dmul+0x51e>
 800195a:	4650      	mov	r0, sl
 800195c:	f000 fe7c 	bl	8002658 <__clzsi2>
 8001960:	230b      	movs	r3, #11
 8001962:	425b      	negs	r3, r3
 8001964:	469c      	mov	ip, r3
 8001966:	0002      	movs	r2, r0
 8001968:	4484      	add	ip, r0
 800196a:	0011      	movs	r1, r2
 800196c:	4650      	mov	r0, sl
 800196e:	3908      	subs	r1, #8
 8001970:	4088      	lsls	r0, r1
 8001972:	231d      	movs	r3, #29
 8001974:	4680      	mov	r8, r0
 8001976:	4660      	mov	r0, ip
 8001978:	1a1b      	subs	r3, r3, r0
 800197a:	0020      	movs	r0, r4
 800197c:	40d8      	lsrs	r0, r3
 800197e:	0003      	movs	r3, r0
 8001980:	4640      	mov	r0, r8
 8001982:	4303      	orrs	r3, r0
 8001984:	469a      	mov	sl, r3
 8001986:	0023      	movs	r3, r4
 8001988:	408b      	lsls	r3, r1
 800198a:	4698      	mov	r8, r3
 800198c:	4b6c      	ldr	r3, [pc, #432]	@ (8001b40 <__aeabi_dmul+0x5bc>)
 800198e:	2500      	movs	r5, #0
 8001990:	1a9b      	subs	r3, r3, r2
 8001992:	469b      	mov	fp, r3
 8001994:	2300      	movs	r3, #0
 8001996:	9302      	str	r3, [sp, #8]
 8001998:	e61a      	b.n	80015d0 <__aeabi_dmul+0x4c>
 800199a:	2d0f      	cmp	r5, #15
 800199c:	d000      	beq.n	80019a0 <__aeabi_dmul+0x41c>
 800199e:	e0c9      	b.n	8001b34 <__aeabi_dmul+0x5b0>
 80019a0:	2380      	movs	r3, #128	@ 0x80
 80019a2:	4652      	mov	r2, sl
 80019a4:	031b      	lsls	r3, r3, #12
 80019a6:	421a      	tst	r2, r3
 80019a8:	d002      	beq.n	80019b0 <__aeabi_dmul+0x42c>
 80019aa:	421c      	tst	r4, r3
 80019ac:	d100      	bne.n	80019b0 <__aeabi_dmul+0x42c>
 80019ae:	e092      	b.n	8001ad6 <__aeabi_dmul+0x552>
 80019b0:	2480      	movs	r4, #128	@ 0x80
 80019b2:	4653      	mov	r3, sl
 80019b4:	0324      	lsls	r4, r4, #12
 80019b6:	431c      	orrs	r4, r3
 80019b8:	0324      	lsls	r4, r4, #12
 80019ba:	4642      	mov	r2, r8
 80019bc:	0b24      	lsrs	r4, r4, #12
 80019be:	e63e      	b.n	800163e <__aeabi_dmul+0xba>
 80019c0:	469b      	mov	fp, r3
 80019c2:	2303      	movs	r3, #3
 80019c4:	4680      	mov	r8, r0
 80019c6:	250c      	movs	r5, #12
 80019c8:	9302      	str	r3, [sp, #8]
 80019ca:	e601      	b.n	80015d0 <__aeabi_dmul+0x4c>
 80019cc:	2300      	movs	r3, #0
 80019ce:	469a      	mov	sl, r3
 80019d0:	469b      	mov	fp, r3
 80019d2:	3301      	adds	r3, #1
 80019d4:	2504      	movs	r5, #4
 80019d6:	9302      	str	r3, [sp, #8]
 80019d8:	e5fa      	b.n	80015d0 <__aeabi_dmul+0x4c>
 80019da:	2101      	movs	r1, #1
 80019dc:	430d      	orrs	r5, r1
 80019de:	2d0a      	cmp	r5, #10
 80019e0:	dd00      	ble.n	80019e4 <__aeabi_dmul+0x460>
 80019e2:	e64b      	b.n	800167c <__aeabi_dmul+0xf8>
 80019e4:	4649      	mov	r1, r9
 80019e6:	9800      	ldr	r0, [sp, #0]
 80019e8:	4041      	eors	r1, r0
 80019ea:	b2c9      	uxtb	r1, r1
 80019ec:	9103      	str	r1, [sp, #12]
 80019ee:	2d02      	cmp	r5, #2
 80019f0:	dc00      	bgt.n	80019f4 <__aeabi_dmul+0x470>
 80019f2:	e096      	b.n	8001b22 <__aeabi_dmul+0x59e>
 80019f4:	2300      	movs	r3, #0
 80019f6:	2400      	movs	r4, #0
 80019f8:	2001      	movs	r0, #1
 80019fa:	9301      	str	r3, [sp, #4]
 80019fc:	e60c      	b.n	8001618 <__aeabi_dmul+0x94>
 80019fe:	4649      	mov	r1, r9
 8001a00:	2302      	movs	r3, #2
 8001a02:	9a00      	ldr	r2, [sp, #0]
 8001a04:	432b      	orrs	r3, r5
 8001a06:	4051      	eors	r1, r2
 8001a08:	b2ca      	uxtb	r2, r1
 8001a0a:	9203      	str	r2, [sp, #12]
 8001a0c:	2b0a      	cmp	r3, #10
 8001a0e:	dd00      	ble.n	8001a12 <__aeabi_dmul+0x48e>
 8001a10:	e634      	b.n	800167c <__aeabi_dmul+0xf8>
 8001a12:	2d00      	cmp	r5, #0
 8001a14:	d157      	bne.n	8001ac6 <__aeabi_dmul+0x542>
 8001a16:	9b03      	ldr	r3, [sp, #12]
 8001a18:	4699      	mov	r9, r3
 8001a1a:	2400      	movs	r4, #0
 8001a1c:	2200      	movs	r2, #0
 8001a1e:	4b49      	ldr	r3, [pc, #292]	@ (8001b44 <__aeabi_dmul+0x5c0>)
 8001a20:	e60e      	b.n	8001640 <__aeabi_dmul+0xbc>
 8001a22:	4658      	mov	r0, fp
 8001a24:	2101      	movs	r1, #1
 8001a26:	1ac9      	subs	r1, r1, r3
 8001a28:	2938      	cmp	r1, #56	@ 0x38
 8001a2a:	dd00      	ble.n	8001a2e <__aeabi_dmul+0x4aa>
 8001a2c:	e62f      	b.n	800168e <__aeabi_dmul+0x10a>
 8001a2e:	291f      	cmp	r1, #31
 8001a30:	dd56      	ble.n	8001ae0 <__aeabi_dmul+0x55c>
 8001a32:	221f      	movs	r2, #31
 8001a34:	4654      	mov	r4, sl
 8001a36:	4252      	negs	r2, r2
 8001a38:	1ad3      	subs	r3, r2, r3
 8001a3a:	40dc      	lsrs	r4, r3
 8001a3c:	2920      	cmp	r1, #32
 8001a3e:	d007      	beq.n	8001a50 <__aeabi_dmul+0x4cc>
 8001a40:	4b41      	ldr	r3, [pc, #260]	@ (8001b48 <__aeabi_dmul+0x5c4>)
 8001a42:	4642      	mov	r2, r8
 8001a44:	469c      	mov	ip, r3
 8001a46:	4653      	mov	r3, sl
 8001a48:	4460      	add	r0, ip
 8001a4a:	4083      	lsls	r3, r0
 8001a4c:	431a      	orrs	r2, r3
 8001a4e:	4690      	mov	r8, r2
 8001a50:	4642      	mov	r2, r8
 8001a52:	2107      	movs	r1, #7
 8001a54:	1e53      	subs	r3, r2, #1
 8001a56:	419a      	sbcs	r2, r3
 8001a58:	000b      	movs	r3, r1
 8001a5a:	4322      	orrs	r2, r4
 8001a5c:	4013      	ands	r3, r2
 8001a5e:	2400      	movs	r4, #0
 8001a60:	4211      	tst	r1, r2
 8001a62:	d009      	beq.n	8001a78 <__aeabi_dmul+0x4f4>
 8001a64:	230f      	movs	r3, #15
 8001a66:	4013      	ands	r3, r2
 8001a68:	2b04      	cmp	r3, #4
 8001a6a:	d05d      	beq.n	8001b28 <__aeabi_dmul+0x5a4>
 8001a6c:	1d11      	adds	r1, r2, #4
 8001a6e:	4291      	cmp	r1, r2
 8001a70:	419b      	sbcs	r3, r3
 8001a72:	000a      	movs	r2, r1
 8001a74:	425b      	negs	r3, r3
 8001a76:	075b      	lsls	r3, r3, #29
 8001a78:	08d2      	lsrs	r2, r2, #3
 8001a7a:	431a      	orrs	r2, r3
 8001a7c:	2300      	movs	r3, #0
 8001a7e:	e5df      	b.n	8001640 <__aeabi_dmul+0xbc>
 8001a80:	9b03      	ldr	r3, [sp, #12]
 8001a82:	4699      	mov	r9, r3
 8001a84:	e5fa      	b.n	800167c <__aeabi_dmul+0xf8>
 8001a86:	9801      	ldr	r0, [sp, #4]
 8001a88:	f000 fde6 	bl	8002658 <__clzsi2>
 8001a8c:	0002      	movs	r2, r0
 8001a8e:	0003      	movs	r3, r0
 8001a90:	3215      	adds	r2, #21
 8001a92:	3320      	adds	r3, #32
 8001a94:	2a1c      	cmp	r2, #28
 8001a96:	dc00      	bgt.n	8001a9a <__aeabi_dmul+0x516>
 8001a98:	e738      	b.n	800190c <__aeabi_dmul+0x388>
 8001a9a:	9a01      	ldr	r2, [sp, #4]
 8001a9c:	3808      	subs	r0, #8
 8001a9e:	4082      	lsls	r2, r0
 8001aa0:	e73f      	b.n	8001922 <__aeabi_dmul+0x39e>
 8001aa2:	f000 fdd9 	bl	8002658 <__clzsi2>
 8001aa6:	2315      	movs	r3, #21
 8001aa8:	469c      	mov	ip, r3
 8001aaa:	4484      	add	ip, r0
 8001aac:	0002      	movs	r2, r0
 8001aae:	4663      	mov	r3, ip
 8001ab0:	3220      	adds	r2, #32
 8001ab2:	2b1c      	cmp	r3, #28
 8001ab4:	dc00      	bgt.n	8001ab8 <__aeabi_dmul+0x534>
 8001ab6:	e758      	b.n	800196a <__aeabi_dmul+0x3e6>
 8001ab8:	2300      	movs	r3, #0
 8001aba:	4698      	mov	r8, r3
 8001abc:	0023      	movs	r3, r4
 8001abe:	3808      	subs	r0, #8
 8001ac0:	4083      	lsls	r3, r0
 8001ac2:	469a      	mov	sl, r3
 8001ac4:	e762      	b.n	800198c <__aeabi_dmul+0x408>
 8001ac6:	001d      	movs	r5, r3
 8001ac8:	2300      	movs	r3, #0
 8001aca:	2400      	movs	r4, #0
 8001acc:	2002      	movs	r0, #2
 8001ace:	9301      	str	r3, [sp, #4]
 8001ad0:	e5a2      	b.n	8001618 <__aeabi_dmul+0x94>
 8001ad2:	9002      	str	r0, [sp, #8]
 8001ad4:	e632      	b.n	800173c <__aeabi_dmul+0x1b8>
 8001ad6:	431c      	orrs	r4, r3
 8001ad8:	9b00      	ldr	r3, [sp, #0]
 8001ada:	9a01      	ldr	r2, [sp, #4]
 8001adc:	4699      	mov	r9, r3
 8001ade:	e5ae      	b.n	800163e <__aeabi_dmul+0xba>
 8001ae0:	4b1a      	ldr	r3, [pc, #104]	@ (8001b4c <__aeabi_dmul+0x5c8>)
 8001ae2:	4652      	mov	r2, sl
 8001ae4:	18c3      	adds	r3, r0, r3
 8001ae6:	4640      	mov	r0, r8
 8001ae8:	409a      	lsls	r2, r3
 8001aea:	40c8      	lsrs	r0, r1
 8001aec:	4302      	orrs	r2, r0
 8001aee:	4640      	mov	r0, r8
 8001af0:	4098      	lsls	r0, r3
 8001af2:	0003      	movs	r3, r0
 8001af4:	1e58      	subs	r0, r3, #1
 8001af6:	4183      	sbcs	r3, r0
 8001af8:	4654      	mov	r4, sl
 8001afa:	431a      	orrs	r2, r3
 8001afc:	40cc      	lsrs	r4, r1
 8001afe:	0753      	lsls	r3, r2, #29
 8001b00:	d009      	beq.n	8001b16 <__aeabi_dmul+0x592>
 8001b02:	230f      	movs	r3, #15
 8001b04:	4013      	ands	r3, r2
 8001b06:	2b04      	cmp	r3, #4
 8001b08:	d005      	beq.n	8001b16 <__aeabi_dmul+0x592>
 8001b0a:	1d13      	adds	r3, r2, #4
 8001b0c:	4293      	cmp	r3, r2
 8001b0e:	4192      	sbcs	r2, r2
 8001b10:	4252      	negs	r2, r2
 8001b12:	18a4      	adds	r4, r4, r2
 8001b14:	001a      	movs	r2, r3
 8001b16:	0223      	lsls	r3, r4, #8
 8001b18:	d508      	bpl.n	8001b2c <__aeabi_dmul+0x5a8>
 8001b1a:	2301      	movs	r3, #1
 8001b1c:	2400      	movs	r4, #0
 8001b1e:	2200      	movs	r2, #0
 8001b20:	e58e      	b.n	8001640 <__aeabi_dmul+0xbc>
 8001b22:	4689      	mov	r9, r1
 8001b24:	2400      	movs	r4, #0
 8001b26:	e58b      	b.n	8001640 <__aeabi_dmul+0xbc>
 8001b28:	2300      	movs	r3, #0
 8001b2a:	e7a5      	b.n	8001a78 <__aeabi_dmul+0x4f4>
 8001b2c:	0763      	lsls	r3, r4, #29
 8001b2e:	0264      	lsls	r4, r4, #9
 8001b30:	0b24      	lsrs	r4, r4, #12
 8001b32:	e7a1      	b.n	8001a78 <__aeabi_dmul+0x4f4>
 8001b34:	9b00      	ldr	r3, [sp, #0]
 8001b36:	46a2      	mov	sl, r4
 8001b38:	4699      	mov	r9, r3
 8001b3a:	9b01      	ldr	r3, [sp, #4]
 8001b3c:	4698      	mov	r8, r3
 8001b3e:	e737      	b.n	80019b0 <__aeabi_dmul+0x42c>
 8001b40:	fffffc0d 	.word	0xfffffc0d
 8001b44:	000007ff 	.word	0x000007ff
 8001b48:	0000043e 	.word	0x0000043e
 8001b4c:	0000041e 	.word	0x0000041e

08001b50 <__aeabi_dsub>:
 8001b50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001b52:	4657      	mov	r7, sl
 8001b54:	464e      	mov	r6, r9
 8001b56:	4645      	mov	r5, r8
 8001b58:	46de      	mov	lr, fp
 8001b5a:	b5e0      	push	{r5, r6, r7, lr}
 8001b5c:	b083      	sub	sp, #12
 8001b5e:	9000      	str	r0, [sp, #0]
 8001b60:	9101      	str	r1, [sp, #4]
 8001b62:	030c      	lsls	r4, r1, #12
 8001b64:	004d      	lsls	r5, r1, #1
 8001b66:	0fce      	lsrs	r6, r1, #31
 8001b68:	0a61      	lsrs	r1, r4, #9
 8001b6a:	9c00      	ldr	r4, [sp, #0]
 8001b6c:	005f      	lsls	r7, r3, #1
 8001b6e:	0f64      	lsrs	r4, r4, #29
 8001b70:	430c      	orrs	r4, r1
 8001b72:	9900      	ldr	r1, [sp, #0]
 8001b74:	9200      	str	r2, [sp, #0]
 8001b76:	9301      	str	r3, [sp, #4]
 8001b78:	00c8      	lsls	r0, r1, #3
 8001b7a:	0319      	lsls	r1, r3, #12
 8001b7c:	0d7b      	lsrs	r3, r7, #21
 8001b7e:	4699      	mov	r9, r3
 8001b80:	9b01      	ldr	r3, [sp, #4]
 8001b82:	4fcc      	ldr	r7, [pc, #816]	@ (8001eb4 <__aeabi_dsub+0x364>)
 8001b84:	0fdb      	lsrs	r3, r3, #31
 8001b86:	469c      	mov	ip, r3
 8001b88:	0a4b      	lsrs	r3, r1, #9
 8001b8a:	9900      	ldr	r1, [sp, #0]
 8001b8c:	4680      	mov	r8, r0
 8001b8e:	0f49      	lsrs	r1, r1, #29
 8001b90:	4319      	orrs	r1, r3
 8001b92:	9b00      	ldr	r3, [sp, #0]
 8001b94:	468b      	mov	fp, r1
 8001b96:	00da      	lsls	r2, r3, #3
 8001b98:	4692      	mov	sl, r2
 8001b9a:	0d6d      	lsrs	r5, r5, #21
 8001b9c:	45b9      	cmp	r9, r7
 8001b9e:	d100      	bne.n	8001ba2 <__aeabi_dsub+0x52>
 8001ba0:	e0bf      	b.n	8001d22 <__aeabi_dsub+0x1d2>
 8001ba2:	2301      	movs	r3, #1
 8001ba4:	4661      	mov	r1, ip
 8001ba6:	4059      	eors	r1, r3
 8001ba8:	464b      	mov	r3, r9
 8001baa:	468c      	mov	ip, r1
 8001bac:	1aeb      	subs	r3, r5, r3
 8001bae:	428e      	cmp	r6, r1
 8001bb0:	d075      	beq.n	8001c9e <__aeabi_dsub+0x14e>
 8001bb2:	2b00      	cmp	r3, #0
 8001bb4:	dc00      	bgt.n	8001bb8 <__aeabi_dsub+0x68>
 8001bb6:	e2a3      	b.n	8002100 <__aeabi_dsub+0x5b0>
 8001bb8:	4649      	mov	r1, r9
 8001bba:	2900      	cmp	r1, #0
 8001bbc:	d100      	bne.n	8001bc0 <__aeabi_dsub+0x70>
 8001bbe:	e0ce      	b.n	8001d5e <__aeabi_dsub+0x20e>
 8001bc0:	42bd      	cmp	r5, r7
 8001bc2:	d100      	bne.n	8001bc6 <__aeabi_dsub+0x76>
 8001bc4:	e200      	b.n	8001fc8 <__aeabi_dsub+0x478>
 8001bc6:	2701      	movs	r7, #1
 8001bc8:	2b38      	cmp	r3, #56	@ 0x38
 8001bca:	dc19      	bgt.n	8001c00 <__aeabi_dsub+0xb0>
 8001bcc:	2780      	movs	r7, #128	@ 0x80
 8001bce:	4659      	mov	r1, fp
 8001bd0:	043f      	lsls	r7, r7, #16
 8001bd2:	4339      	orrs	r1, r7
 8001bd4:	468b      	mov	fp, r1
 8001bd6:	2b1f      	cmp	r3, #31
 8001bd8:	dd00      	ble.n	8001bdc <__aeabi_dsub+0x8c>
 8001bda:	e1fa      	b.n	8001fd2 <__aeabi_dsub+0x482>
 8001bdc:	2720      	movs	r7, #32
 8001bde:	1af9      	subs	r1, r7, r3
 8001be0:	468c      	mov	ip, r1
 8001be2:	4659      	mov	r1, fp
 8001be4:	4667      	mov	r7, ip
 8001be6:	40b9      	lsls	r1, r7
 8001be8:	000f      	movs	r7, r1
 8001bea:	0011      	movs	r1, r2
 8001bec:	40d9      	lsrs	r1, r3
 8001bee:	430f      	orrs	r7, r1
 8001bf0:	4661      	mov	r1, ip
 8001bf2:	408a      	lsls	r2, r1
 8001bf4:	1e51      	subs	r1, r2, #1
 8001bf6:	418a      	sbcs	r2, r1
 8001bf8:	4659      	mov	r1, fp
 8001bfa:	40d9      	lsrs	r1, r3
 8001bfc:	4317      	orrs	r7, r2
 8001bfe:	1a64      	subs	r4, r4, r1
 8001c00:	1bc7      	subs	r7, r0, r7
 8001c02:	42b8      	cmp	r0, r7
 8001c04:	4180      	sbcs	r0, r0
 8001c06:	4240      	negs	r0, r0
 8001c08:	1a24      	subs	r4, r4, r0
 8001c0a:	0223      	lsls	r3, r4, #8
 8001c0c:	d400      	bmi.n	8001c10 <__aeabi_dsub+0xc0>
 8001c0e:	e140      	b.n	8001e92 <__aeabi_dsub+0x342>
 8001c10:	0264      	lsls	r4, r4, #9
 8001c12:	0a64      	lsrs	r4, r4, #9
 8001c14:	2c00      	cmp	r4, #0
 8001c16:	d100      	bne.n	8001c1a <__aeabi_dsub+0xca>
 8001c18:	e154      	b.n	8001ec4 <__aeabi_dsub+0x374>
 8001c1a:	0020      	movs	r0, r4
 8001c1c:	f000 fd1c 	bl	8002658 <__clzsi2>
 8001c20:	0003      	movs	r3, r0
 8001c22:	3b08      	subs	r3, #8
 8001c24:	2120      	movs	r1, #32
 8001c26:	0038      	movs	r0, r7
 8001c28:	1aca      	subs	r2, r1, r3
 8001c2a:	40d0      	lsrs	r0, r2
 8001c2c:	409c      	lsls	r4, r3
 8001c2e:	0002      	movs	r2, r0
 8001c30:	409f      	lsls	r7, r3
 8001c32:	4322      	orrs	r2, r4
 8001c34:	429d      	cmp	r5, r3
 8001c36:	dd00      	ble.n	8001c3a <__aeabi_dsub+0xea>
 8001c38:	e1a6      	b.n	8001f88 <__aeabi_dsub+0x438>
 8001c3a:	1b58      	subs	r0, r3, r5
 8001c3c:	3001      	adds	r0, #1
 8001c3e:	1a09      	subs	r1, r1, r0
 8001c40:	003c      	movs	r4, r7
 8001c42:	408f      	lsls	r7, r1
 8001c44:	40c4      	lsrs	r4, r0
 8001c46:	1e7b      	subs	r3, r7, #1
 8001c48:	419f      	sbcs	r7, r3
 8001c4a:	0013      	movs	r3, r2
 8001c4c:	408b      	lsls	r3, r1
 8001c4e:	4327      	orrs	r7, r4
 8001c50:	431f      	orrs	r7, r3
 8001c52:	40c2      	lsrs	r2, r0
 8001c54:	003b      	movs	r3, r7
 8001c56:	0014      	movs	r4, r2
 8001c58:	2500      	movs	r5, #0
 8001c5a:	4313      	orrs	r3, r2
 8001c5c:	d100      	bne.n	8001c60 <__aeabi_dsub+0x110>
 8001c5e:	e1f7      	b.n	8002050 <__aeabi_dsub+0x500>
 8001c60:	077b      	lsls	r3, r7, #29
 8001c62:	d100      	bne.n	8001c66 <__aeabi_dsub+0x116>
 8001c64:	e377      	b.n	8002356 <__aeabi_dsub+0x806>
 8001c66:	230f      	movs	r3, #15
 8001c68:	0038      	movs	r0, r7
 8001c6a:	403b      	ands	r3, r7
 8001c6c:	2b04      	cmp	r3, #4
 8001c6e:	d004      	beq.n	8001c7a <__aeabi_dsub+0x12a>
 8001c70:	1d38      	adds	r0, r7, #4
 8001c72:	42b8      	cmp	r0, r7
 8001c74:	41bf      	sbcs	r7, r7
 8001c76:	427f      	negs	r7, r7
 8001c78:	19e4      	adds	r4, r4, r7
 8001c7a:	0223      	lsls	r3, r4, #8
 8001c7c:	d400      	bmi.n	8001c80 <__aeabi_dsub+0x130>
 8001c7e:	e368      	b.n	8002352 <__aeabi_dsub+0x802>
 8001c80:	4b8c      	ldr	r3, [pc, #560]	@ (8001eb4 <__aeabi_dsub+0x364>)
 8001c82:	3501      	adds	r5, #1
 8001c84:	429d      	cmp	r5, r3
 8001c86:	d100      	bne.n	8001c8a <__aeabi_dsub+0x13a>
 8001c88:	e0f4      	b.n	8001e74 <__aeabi_dsub+0x324>
 8001c8a:	4b8b      	ldr	r3, [pc, #556]	@ (8001eb8 <__aeabi_dsub+0x368>)
 8001c8c:	056d      	lsls	r5, r5, #21
 8001c8e:	401c      	ands	r4, r3
 8001c90:	0d6d      	lsrs	r5, r5, #21
 8001c92:	0767      	lsls	r7, r4, #29
 8001c94:	08c0      	lsrs	r0, r0, #3
 8001c96:	0264      	lsls	r4, r4, #9
 8001c98:	4307      	orrs	r7, r0
 8001c9a:	0b24      	lsrs	r4, r4, #12
 8001c9c:	e0ec      	b.n	8001e78 <__aeabi_dsub+0x328>
 8001c9e:	2b00      	cmp	r3, #0
 8001ca0:	dc00      	bgt.n	8001ca4 <__aeabi_dsub+0x154>
 8001ca2:	e329      	b.n	80022f8 <__aeabi_dsub+0x7a8>
 8001ca4:	4649      	mov	r1, r9
 8001ca6:	2900      	cmp	r1, #0
 8001ca8:	d000      	beq.n	8001cac <__aeabi_dsub+0x15c>
 8001caa:	e0d6      	b.n	8001e5a <__aeabi_dsub+0x30a>
 8001cac:	4659      	mov	r1, fp
 8001cae:	4311      	orrs	r1, r2
 8001cb0:	d100      	bne.n	8001cb4 <__aeabi_dsub+0x164>
 8001cb2:	e12e      	b.n	8001f12 <__aeabi_dsub+0x3c2>
 8001cb4:	1e59      	subs	r1, r3, #1
 8001cb6:	2b01      	cmp	r3, #1
 8001cb8:	d100      	bne.n	8001cbc <__aeabi_dsub+0x16c>
 8001cba:	e1e6      	b.n	800208a <__aeabi_dsub+0x53a>
 8001cbc:	42bb      	cmp	r3, r7
 8001cbe:	d100      	bne.n	8001cc2 <__aeabi_dsub+0x172>
 8001cc0:	e182      	b.n	8001fc8 <__aeabi_dsub+0x478>
 8001cc2:	2701      	movs	r7, #1
 8001cc4:	000b      	movs	r3, r1
 8001cc6:	2938      	cmp	r1, #56	@ 0x38
 8001cc8:	dc14      	bgt.n	8001cf4 <__aeabi_dsub+0x1a4>
 8001cca:	2b1f      	cmp	r3, #31
 8001ccc:	dd00      	ble.n	8001cd0 <__aeabi_dsub+0x180>
 8001cce:	e23c      	b.n	800214a <__aeabi_dsub+0x5fa>
 8001cd0:	2720      	movs	r7, #32
 8001cd2:	1af9      	subs	r1, r7, r3
 8001cd4:	468c      	mov	ip, r1
 8001cd6:	4659      	mov	r1, fp
 8001cd8:	4667      	mov	r7, ip
 8001cda:	40b9      	lsls	r1, r7
 8001cdc:	000f      	movs	r7, r1
 8001cde:	0011      	movs	r1, r2
 8001ce0:	40d9      	lsrs	r1, r3
 8001ce2:	430f      	orrs	r7, r1
 8001ce4:	4661      	mov	r1, ip
 8001ce6:	408a      	lsls	r2, r1
 8001ce8:	1e51      	subs	r1, r2, #1
 8001cea:	418a      	sbcs	r2, r1
 8001cec:	4659      	mov	r1, fp
 8001cee:	40d9      	lsrs	r1, r3
 8001cf0:	4317      	orrs	r7, r2
 8001cf2:	1864      	adds	r4, r4, r1
 8001cf4:	183f      	adds	r7, r7, r0
 8001cf6:	4287      	cmp	r7, r0
 8001cf8:	4180      	sbcs	r0, r0
 8001cfa:	4240      	negs	r0, r0
 8001cfc:	1824      	adds	r4, r4, r0
 8001cfe:	0223      	lsls	r3, r4, #8
 8001d00:	d400      	bmi.n	8001d04 <__aeabi_dsub+0x1b4>
 8001d02:	e0c6      	b.n	8001e92 <__aeabi_dsub+0x342>
 8001d04:	4b6b      	ldr	r3, [pc, #428]	@ (8001eb4 <__aeabi_dsub+0x364>)
 8001d06:	3501      	adds	r5, #1
 8001d08:	429d      	cmp	r5, r3
 8001d0a:	d100      	bne.n	8001d0e <__aeabi_dsub+0x1be>
 8001d0c:	e0b2      	b.n	8001e74 <__aeabi_dsub+0x324>
 8001d0e:	2101      	movs	r1, #1
 8001d10:	4b69      	ldr	r3, [pc, #420]	@ (8001eb8 <__aeabi_dsub+0x368>)
 8001d12:	087a      	lsrs	r2, r7, #1
 8001d14:	401c      	ands	r4, r3
 8001d16:	4039      	ands	r1, r7
 8001d18:	430a      	orrs	r2, r1
 8001d1a:	07e7      	lsls	r7, r4, #31
 8001d1c:	4317      	orrs	r7, r2
 8001d1e:	0864      	lsrs	r4, r4, #1
 8001d20:	e79e      	b.n	8001c60 <__aeabi_dsub+0x110>
 8001d22:	4b66      	ldr	r3, [pc, #408]	@ (8001ebc <__aeabi_dsub+0x36c>)
 8001d24:	4311      	orrs	r1, r2
 8001d26:	468a      	mov	sl, r1
 8001d28:	18eb      	adds	r3, r5, r3
 8001d2a:	2900      	cmp	r1, #0
 8001d2c:	d028      	beq.n	8001d80 <__aeabi_dsub+0x230>
 8001d2e:	4566      	cmp	r6, ip
 8001d30:	d02c      	beq.n	8001d8c <__aeabi_dsub+0x23c>
 8001d32:	2b00      	cmp	r3, #0
 8001d34:	d05b      	beq.n	8001dee <__aeabi_dsub+0x29e>
 8001d36:	2d00      	cmp	r5, #0
 8001d38:	d100      	bne.n	8001d3c <__aeabi_dsub+0x1ec>
 8001d3a:	e12c      	b.n	8001f96 <__aeabi_dsub+0x446>
 8001d3c:	465b      	mov	r3, fp
 8001d3e:	4666      	mov	r6, ip
 8001d40:	075f      	lsls	r7, r3, #29
 8001d42:	08d2      	lsrs	r2, r2, #3
 8001d44:	4317      	orrs	r7, r2
 8001d46:	08dd      	lsrs	r5, r3, #3
 8001d48:	003b      	movs	r3, r7
 8001d4a:	432b      	orrs	r3, r5
 8001d4c:	d100      	bne.n	8001d50 <__aeabi_dsub+0x200>
 8001d4e:	e0e2      	b.n	8001f16 <__aeabi_dsub+0x3c6>
 8001d50:	2480      	movs	r4, #128	@ 0x80
 8001d52:	0324      	lsls	r4, r4, #12
 8001d54:	432c      	orrs	r4, r5
 8001d56:	0324      	lsls	r4, r4, #12
 8001d58:	4d56      	ldr	r5, [pc, #344]	@ (8001eb4 <__aeabi_dsub+0x364>)
 8001d5a:	0b24      	lsrs	r4, r4, #12
 8001d5c:	e08c      	b.n	8001e78 <__aeabi_dsub+0x328>
 8001d5e:	4659      	mov	r1, fp
 8001d60:	4311      	orrs	r1, r2
 8001d62:	d100      	bne.n	8001d66 <__aeabi_dsub+0x216>
 8001d64:	e0d5      	b.n	8001f12 <__aeabi_dsub+0x3c2>
 8001d66:	1e59      	subs	r1, r3, #1
 8001d68:	2b01      	cmp	r3, #1
 8001d6a:	d100      	bne.n	8001d6e <__aeabi_dsub+0x21e>
 8001d6c:	e1b9      	b.n	80020e2 <__aeabi_dsub+0x592>
 8001d6e:	42bb      	cmp	r3, r7
 8001d70:	d100      	bne.n	8001d74 <__aeabi_dsub+0x224>
 8001d72:	e1b1      	b.n	80020d8 <__aeabi_dsub+0x588>
 8001d74:	2701      	movs	r7, #1
 8001d76:	000b      	movs	r3, r1
 8001d78:	2938      	cmp	r1, #56	@ 0x38
 8001d7a:	dd00      	ble.n	8001d7e <__aeabi_dsub+0x22e>
 8001d7c:	e740      	b.n	8001c00 <__aeabi_dsub+0xb0>
 8001d7e:	e72a      	b.n	8001bd6 <__aeabi_dsub+0x86>
 8001d80:	4661      	mov	r1, ip
 8001d82:	2701      	movs	r7, #1
 8001d84:	4079      	eors	r1, r7
 8001d86:	468c      	mov	ip, r1
 8001d88:	4566      	cmp	r6, ip
 8001d8a:	d1d2      	bne.n	8001d32 <__aeabi_dsub+0x1e2>
 8001d8c:	2b00      	cmp	r3, #0
 8001d8e:	d100      	bne.n	8001d92 <__aeabi_dsub+0x242>
 8001d90:	e0c5      	b.n	8001f1e <__aeabi_dsub+0x3ce>
 8001d92:	2d00      	cmp	r5, #0
 8001d94:	d000      	beq.n	8001d98 <__aeabi_dsub+0x248>
 8001d96:	e155      	b.n	8002044 <__aeabi_dsub+0x4f4>
 8001d98:	464b      	mov	r3, r9
 8001d9a:	0025      	movs	r5, r4
 8001d9c:	4305      	orrs	r5, r0
 8001d9e:	d100      	bne.n	8001da2 <__aeabi_dsub+0x252>
 8001da0:	e212      	b.n	80021c8 <__aeabi_dsub+0x678>
 8001da2:	1e59      	subs	r1, r3, #1
 8001da4:	468c      	mov	ip, r1
 8001da6:	2b01      	cmp	r3, #1
 8001da8:	d100      	bne.n	8001dac <__aeabi_dsub+0x25c>
 8001daa:	e249      	b.n	8002240 <__aeabi_dsub+0x6f0>
 8001dac:	4d41      	ldr	r5, [pc, #260]	@ (8001eb4 <__aeabi_dsub+0x364>)
 8001dae:	42ab      	cmp	r3, r5
 8001db0:	d100      	bne.n	8001db4 <__aeabi_dsub+0x264>
 8001db2:	e28f      	b.n	80022d4 <__aeabi_dsub+0x784>
 8001db4:	2701      	movs	r7, #1
 8001db6:	2938      	cmp	r1, #56	@ 0x38
 8001db8:	dc11      	bgt.n	8001dde <__aeabi_dsub+0x28e>
 8001dba:	4663      	mov	r3, ip
 8001dbc:	2b1f      	cmp	r3, #31
 8001dbe:	dd00      	ble.n	8001dc2 <__aeabi_dsub+0x272>
 8001dc0:	e25b      	b.n	800227a <__aeabi_dsub+0x72a>
 8001dc2:	4661      	mov	r1, ip
 8001dc4:	2320      	movs	r3, #32
 8001dc6:	0027      	movs	r7, r4
 8001dc8:	1a5b      	subs	r3, r3, r1
 8001dca:	0005      	movs	r5, r0
 8001dcc:	4098      	lsls	r0, r3
 8001dce:	409f      	lsls	r7, r3
 8001dd0:	40cd      	lsrs	r5, r1
 8001dd2:	1e43      	subs	r3, r0, #1
 8001dd4:	4198      	sbcs	r0, r3
 8001dd6:	40cc      	lsrs	r4, r1
 8001dd8:	432f      	orrs	r7, r5
 8001dda:	4307      	orrs	r7, r0
 8001ddc:	44a3      	add	fp, r4
 8001dde:	18bf      	adds	r7, r7, r2
 8001de0:	4297      	cmp	r7, r2
 8001de2:	4192      	sbcs	r2, r2
 8001de4:	4252      	negs	r2, r2
 8001de6:	445a      	add	r2, fp
 8001de8:	0014      	movs	r4, r2
 8001dea:	464d      	mov	r5, r9
 8001dec:	e787      	b.n	8001cfe <__aeabi_dsub+0x1ae>
 8001dee:	4f34      	ldr	r7, [pc, #208]	@ (8001ec0 <__aeabi_dsub+0x370>)
 8001df0:	1c6b      	adds	r3, r5, #1
 8001df2:	423b      	tst	r3, r7
 8001df4:	d000      	beq.n	8001df8 <__aeabi_dsub+0x2a8>
 8001df6:	e0b6      	b.n	8001f66 <__aeabi_dsub+0x416>
 8001df8:	4659      	mov	r1, fp
 8001dfa:	0023      	movs	r3, r4
 8001dfc:	4311      	orrs	r1, r2
 8001dfe:	000f      	movs	r7, r1
 8001e00:	4303      	orrs	r3, r0
 8001e02:	2d00      	cmp	r5, #0
 8001e04:	d000      	beq.n	8001e08 <__aeabi_dsub+0x2b8>
 8001e06:	e126      	b.n	8002056 <__aeabi_dsub+0x506>
 8001e08:	2b00      	cmp	r3, #0
 8001e0a:	d100      	bne.n	8001e0e <__aeabi_dsub+0x2be>
 8001e0c:	e1c0      	b.n	8002190 <__aeabi_dsub+0x640>
 8001e0e:	2900      	cmp	r1, #0
 8001e10:	d100      	bne.n	8001e14 <__aeabi_dsub+0x2c4>
 8001e12:	e0a1      	b.n	8001f58 <__aeabi_dsub+0x408>
 8001e14:	1a83      	subs	r3, r0, r2
 8001e16:	4698      	mov	r8, r3
 8001e18:	465b      	mov	r3, fp
 8001e1a:	4540      	cmp	r0, r8
 8001e1c:	41ad      	sbcs	r5, r5
 8001e1e:	1ae3      	subs	r3, r4, r3
 8001e20:	426d      	negs	r5, r5
 8001e22:	1b5b      	subs	r3, r3, r5
 8001e24:	2580      	movs	r5, #128	@ 0x80
 8001e26:	042d      	lsls	r5, r5, #16
 8001e28:	422b      	tst	r3, r5
 8001e2a:	d100      	bne.n	8001e2e <__aeabi_dsub+0x2de>
 8001e2c:	e14b      	b.n	80020c6 <__aeabi_dsub+0x576>
 8001e2e:	465b      	mov	r3, fp
 8001e30:	1a10      	subs	r0, r2, r0
 8001e32:	4282      	cmp	r2, r0
 8001e34:	4192      	sbcs	r2, r2
 8001e36:	1b1c      	subs	r4, r3, r4
 8001e38:	0007      	movs	r7, r0
 8001e3a:	2601      	movs	r6, #1
 8001e3c:	4663      	mov	r3, ip
 8001e3e:	4252      	negs	r2, r2
 8001e40:	1aa4      	subs	r4, r4, r2
 8001e42:	4327      	orrs	r7, r4
 8001e44:	401e      	ands	r6, r3
 8001e46:	2f00      	cmp	r7, #0
 8001e48:	d100      	bne.n	8001e4c <__aeabi_dsub+0x2fc>
 8001e4a:	e142      	b.n	80020d2 <__aeabi_dsub+0x582>
 8001e4c:	422c      	tst	r4, r5
 8001e4e:	d100      	bne.n	8001e52 <__aeabi_dsub+0x302>
 8001e50:	e26d      	b.n	800232e <__aeabi_dsub+0x7de>
 8001e52:	4b19      	ldr	r3, [pc, #100]	@ (8001eb8 <__aeabi_dsub+0x368>)
 8001e54:	2501      	movs	r5, #1
 8001e56:	401c      	ands	r4, r3
 8001e58:	e71b      	b.n	8001c92 <__aeabi_dsub+0x142>
 8001e5a:	42bd      	cmp	r5, r7
 8001e5c:	d100      	bne.n	8001e60 <__aeabi_dsub+0x310>
 8001e5e:	e13b      	b.n	80020d8 <__aeabi_dsub+0x588>
 8001e60:	2701      	movs	r7, #1
 8001e62:	2b38      	cmp	r3, #56	@ 0x38
 8001e64:	dd00      	ble.n	8001e68 <__aeabi_dsub+0x318>
 8001e66:	e745      	b.n	8001cf4 <__aeabi_dsub+0x1a4>
 8001e68:	2780      	movs	r7, #128	@ 0x80
 8001e6a:	4659      	mov	r1, fp
 8001e6c:	043f      	lsls	r7, r7, #16
 8001e6e:	4339      	orrs	r1, r7
 8001e70:	468b      	mov	fp, r1
 8001e72:	e72a      	b.n	8001cca <__aeabi_dsub+0x17a>
 8001e74:	2400      	movs	r4, #0
 8001e76:	2700      	movs	r7, #0
 8001e78:	052d      	lsls	r5, r5, #20
 8001e7a:	4325      	orrs	r5, r4
 8001e7c:	07f6      	lsls	r6, r6, #31
 8001e7e:	4335      	orrs	r5, r6
 8001e80:	0038      	movs	r0, r7
 8001e82:	0029      	movs	r1, r5
 8001e84:	b003      	add	sp, #12
 8001e86:	bcf0      	pop	{r4, r5, r6, r7}
 8001e88:	46bb      	mov	fp, r7
 8001e8a:	46b2      	mov	sl, r6
 8001e8c:	46a9      	mov	r9, r5
 8001e8e:	46a0      	mov	r8, r4
 8001e90:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e92:	077b      	lsls	r3, r7, #29
 8001e94:	d004      	beq.n	8001ea0 <__aeabi_dsub+0x350>
 8001e96:	230f      	movs	r3, #15
 8001e98:	403b      	ands	r3, r7
 8001e9a:	2b04      	cmp	r3, #4
 8001e9c:	d000      	beq.n	8001ea0 <__aeabi_dsub+0x350>
 8001e9e:	e6e7      	b.n	8001c70 <__aeabi_dsub+0x120>
 8001ea0:	002b      	movs	r3, r5
 8001ea2:	08f8      	lsrs	r0, r7, #3
 8001ea4:	4a03      	ldr	r2, [pc, #12]	@ (8001eb4 <__aeabi_dsub+0x364>)
 8001ea6:	0767      	lsls	r7, r4, #29
 8001ea8:	4307      	orrs	r7, r0
 8001eaa:	08e5      	lsrs	r5, r4, #3
 8001eac:	4293      	cmp	r3, r2
 8001eae:	d100      	bne.n	8001eb2 <__aeabi_dsub+0x362>
 8001eb0:	e74a      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 8001eb2:	e0a5      	b.n	8002000 <__aeabi_dsub+0x4b0>
 8001eb4:	000007ff 	.word	0x000007ff
 8001eb8:	ff7fffff 	.word	0xff7fffff
 8001ebc:	fffff801 	.word	0xfffff801
 8001ec0:	000007fe 	.word	0x000007fe
 8001ec4:	0038      	movs	r0, r7
 8001ec6:	f000 fbc7 	bl	8002658 <__clzsi2>
 8001eca:	0003      	movs	r3, r0
 8001ecc:	3318      	adds	r3, #24
 8001ece:	2b1f      	cmp	r3, #31
 8001ed0:	dc00      	bgt.n	8001ed4 <__aeabi_dsub+0x384>
 8001ed2:	e6a7      	b.n	8001c24 <__aeabi_dsub+0xd4>
 8001ed4:	003a      	movs	r2, r7
 8001ed6:	3808      	subs	r0, #8
 8001ed8:	4082      	lsls	r2, r0
 8001eda:	429d      	cmp	r5, r3
 8001edc:	dd00      	ble.n	8001ee0 <__aeabi_dsub+0x390>
 8001ede:	e08a      	b.n	8001ff6 <__aeabi_dsub+0x4a6>
 8001ee0:	1b5b      	subs	r3, r3, r5
 8001ee2:	1c58      	adds	r0, r3, #1
 8001ee4:	281f      	cmp	r0, #31
 8001ee6:	dc00      	bgt.n	8001eea <__aeabi_dsub+0x39a>
 8001ee8:	e1d8      	b.n	800229c <__aeabi_dsub+0x74c>
 8001eea:	0017      	movs	r7, r2
 8001eec:	3b1f      	subs	r3, #31
 8001eee:	40df      	lsrs	r7, r3
 8001ef0:	2820      	cmp	r0, #32
 8001ef2:	d005      	beq.n	8001f00 <__aeabi_dsub+0x3b0>
 8001ef4:	2340      	movs	r3, #64	@ 0x40
 8001ef6:	1a1b      	subs	r3, r3, r0
 8001ef8:	409a      	lsls	r2, r3
 8001efa:	1e53      	subs	r3, r2, #1
 8001efc:	419a      	sbcs	r2, r3
 8001efe:	4317      	orrs	r7, r2
 8001f00:	2500      	movs	r5, #0
 8001f02:	2f00      	cmp	r7, #0
 8001f04:	d100      	bne.n	8001f08 <__aeabi_dsub+0x3b8>
 8001f06:	e0e5      	b.n	80020d4 <__aeabi_dsub+0x584>
 8001f08:	077b      	lsls	r3, r7, #29
 8001f0a:	d000      	beq.n	8001f0e <__aeabi_dsub+0x3be>
 8001f0c:	e6ab      	b.n	8001c66 <__aeabi_dsub+0x116>
 8001f0e:	002c      	movs	r4, r5
 8001f10:	e7c6      	b.n	8001ea0 <__aeabi_dsub+0x350>
 8001f12:	08c0      	lsrs	r0, r0, #3
 8001f14:	e7c6      	b.n	8001ea4 <__aeabi_dsub+0x354>
 8001f16:	2700      	movs	r7, #0
 8001f18:	2400      	movs	r4, #0
 8001f1a:	4dd1      	ldr	r5, [pc, #836]	@ (8002260 <__aeabi_dsub+0x710>)
 8001f1c:	e7ac      	b.n	8001e78 <__aeabi_dsub+0x328>
 8001f1e:	4fd1      	ldr	r7, [pc, #836]	@ (8002264 <__aeabi_dsub+0x714>)
 8001f20:	1c6b      	adds	r3, r5, #1
 8001f22:	423b      	tst	r3, r7
 8001f24:	d171      	bne.n	800200a <__aeabi_dsub+0x4ba>
 8001f26:	0023      	movs	r3, r4
 8001f28:	4303      	orrs	r3, r0
 8001f2a:	2d00      	cmp	r5, #0
 8001f2c:	d000      	beq.n	8001f30 <__aeabi_dsub+0x3e0>
 8001f2e:	e14e      	b.n	80021ce <__aeabi_dsub+0x67e>
 8001f30:	4657      	mov	r7, sl
 8001f32:	2b00      	cmp	r3, #0
 8001f34:	d100      	bne.n	8001f38 <__aeabi_dsub+0x3e8>
 8001f36:	e1b5      	b.n	80022a4 <__aeabi_dsub+0x754>
 8001f38:	2f00      	cmp	r7, #0
 8001f3a:	d00d      	beq.n	8001f58 <__aeabi_dsub+0x408>
 8001f3c:	1883      	adds	r3, r0, r2
 8001f3e:	4283      	cmp	r3, r0
 8001f40:	4180      	sbcs	r0, r0
 8001f42:	445c      	add	r4, fp
 8001f44:	4240      	negs	r0, r0
 8001f46:	1824      	adds	r4, r4, r0
 8001f48:	0222      	lsls	r2, r4, #8
 8001f4a:	d500      	bpl.n	8001f4e <__aeabi_dsub+0x3fe>
 8001f4c:	e1c8      	b.n	80022e0 <__aeabi_dsub+0x790>
 8001f4e:	001f      	movs	r7, r3
 8001f50:	4698      	mov	r8, r3
 8001f52:	4327      	orrs	r7, r4
 8001f54:	d100      	bne.n	8001f58 <__aeabi_dsub+0x408>
 8001f56:	e0bc      	b.n	80020d2 <__aeabi_dsub+0x582>
 8001f58:	4643      	mov	r3, r8
 8001f5a:	0767      	lsls	r7, r4, #29
 8001f5c:	08db      	lsrs	r3, r3, #3
 8001f5e:	431f      	orrs	r7, r3
 8001f60:	08e5      	lsrs	r5, r4, #3
 8001f62:	2300      	movs	r3, #0
 8001f64:	e04c      	b.n	8002000 <__aeabi_dsub+0x4b0>
 8001f66:	1a83      	subs	r3, r0, r2
 8001f68:	4698      	mov	r8, r3
 8001f6a:	465b      	mov	r3, fp
 8001f6c:	4540      	cmp	r0, r8
 8001f6e:	41bf      	sbcs	r7, r7
 8001f70:	1ae3      	subs	r3, r4, r3
 8001f72:	427f      	negs	r7, r7
 8001f74:	1bdb      	subs	r3, r3, r7
 8001f76:	021f      	lsls	r7, r3, #8
 8001f78:	d47c      	bmi.n	8002074 <__aeabi_dsub+0x524>
 8001f7a:	4647      	mov	r7, r8
 8001f7c:	431f      	orrs	r7, r3
 8001f7e:	d100      	bne.n	8001f82 <__aeabi_dsub+0x432>
 8001f80:	e0a6      	b.n	80020d0 <__aeabi_dsub+0x580>
 8001f82:	001c      	movs	r4, r3
 8001f84:	4647      	mov	r7, r8
 8001f86:	e645      	b.n	8001c14 <__aeabi_dsub+0xc4>
 8001f88:	4cb7      	ldr	r4, [pc, #732]	@ (8002268 <__aeabi_dsub+0x718>)
 8001f8a:	1aed      	subs	r5, r5, r3
 8001f8c:	4014      	ands	r4, r2
 8001f8e:	077b      	lsls	r3, r7, #29
 8001f90:	d000      	beq.n	8001f94 <__aeabi_dsub+0x444>
 8001f92:	e780      	b.n	8001e96 <__aeabi_dsub+0x346>
 8001f94:	e784      	b.n	8001ea0 <__aeabi_dsub+0x350>
 8001f96:	464b      	mov	r3, r9
 8001f98:	0025      	movs	r5, r4
 8001f9a:	4305      	orrs	r5, r0
 8001f9c:	d066      	beq.n	800206c <__aeabi_dsub+0x51c>
 8001f9e:	1e5f      	subs	r7, r3, #1
 8001fa0:	2b01      	cmp	r3, #1
 8001fa2:	d100      	bne.n	8001fa6 <__aeabi_dsub+0x456>
 8001fa4:	e0fc      	b.n	80021a0 <__aeabi_dsub+0x650>
 8001fa6:	4dae      	ldr	r5, [pc, #696]	@ (8002260 <__aeabi_dsub+0x710>)
 8001fa8:	42ab      	cmp	r3, r5
 8001faa:	d100      	bne.n	8001fae <__aeabi_dsub+0x45e>
 8001fac:	e15e      	b.n	800226c <__aeabi_dsub+0x71c>
 8001fae:	4666      	mov	r6, ip
 8001fb0:	2f38      	cmp	r7, #56	@ 0x38
 8001fb2:	dc00      	bgt.n	8001fb6 <__aeabi_dsub+0x466>
 8001fb4:	e0b4      	b.n	8002120 <__aeabi_dsub+0x5d0>
 8001fb6:	2001      	movs	r0, #1
 8001fb8:	1a17      	subs	r7, r2, r0
 8001fba:	42ba      	cmp	r2, r7
 8001fbc:	4192      	sbcs	r2, r2
 8001fbe:	465b      	mov	r3, fp
 8001fc0:	4252      	negs	r2, r2
 8001fc2:	464d      	mov	r5, r9
 8001fc4:	1a9c      	subs	r4, r3, r2
 8001fc6:	e620      	b.n	8001c0a <__aeabi_dsub+0xba>
 8001fc8:	0767      	lsls	r7, r4, #29
 8001fca:	08c0      	lsrs	r0, r0, #3
 8001fcc:	4307      	orrs	r7, r0
 8001fce:	08e5      	lsrs	r5, r4, #3
 8001fd0:	e6ba      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 8001fd2:	001f      	movs	r7, r3
 8001fd4:	4659      	mov	r1, fp
 8001fd6:	3f20      	subs	r7, #32
 8001fd8:	40f9      	lsrs	r1, r7
 8001fda:	000f      	movs	r7, r1
 8001fdc:	2b20      	cmp	r3, #32
 8001fde:	d005      	beq.n	8001fec <__aeabi_dsub+0x49c>
 8001fe0:	2140      	movs	r1, #64	@ 0x40
 8001fe2:	1acb      	subs	r3, r1, r3
 8001fe4:	4659      	mov	r1, fp
 8001fe6:	4099      	lsls	r1, r3
 8001fe8:	430a      	orrs	r2, r1
 8001fea:	4692      	mov	sl, r2
 8001fec:	4653      	mov	r3, sl
 8001fee:	1e5a      	subs	r2, r3, #1
 8001ff0:	4193      	sbcs	r3, r2
 8001ff2:	431f      	orrs	r7, r3
 8001ff4:	e604      	b.n	8001c00 <__aeabi_dsub+0xb0>
 8001ff6:	1aeb      	subs	r3, r5, r3
 8001ff8:	4d9b      	ldr	r5, [pc, #620]	@ (8002268 <__aeabi_dsub+0x718>)
 8001ffa:	4015      	ands	r5, r2
 8001ffc:	076f      	lsls	r7, r5, #29
 8001ffe:	08ed      	lsrs	r5, r5, #3
 8002000:	032c      	lsls	r4, r5, #12
 8002002:	055d      	lsls	r5, r3, #21
 8002004:	0b24      	lsrs	r4, r4, #12
 8002006:	0d6d      	lsrs	r5, r5, #21
 8002008:	e736      	b.n	8001e78 <__aeabi_dsub+0x328>
 800200a:	4d95      	ldr	r5, [pc, #596]	@ (8002260 <__aeabi_dsub+0x710>)
 800200c:	42ab      	cmp	r3, r5
 800200e:	d100      	bne.n	8002012 <__aeabi_dsub+0x4c2>
 8002010:	e0d6      	b.n	80021c0 <__aeabi_dsub+0x670>
 8002012:	1882      	adds	r2, r0, r2
 8002014:	0021      	movs	r1, r4
 8002016:	4282      	cmp	r2, r0
 8002018:	4180      	sbcs	r0, r0
 800201a:	4459      	add	r1, fp
 800201c:	4240      	negs	r0, r0
 800201e:	1808      	adds	r0, r1, r0
 8002020:	07c7      	lsls	r7, r0, #31
 8002022:	0852      	lsrs	r2, r2, #1
 8002024:	4317      	orrs	r7, r2
 8002026:	0844      	lsrs	r4, r0, #1
 8002028:	0752      	lsls	r2, r2, #29
 800202a:	d400      	bmi.n	800202e <__aeabi_dsub+0x4de>
 800202c:	e185      	b.n	800233a <__aeabi_dsub+0x7ea>
 800202e:	220f      	movs	r2, #15
 8002030:	001d      	movs	r5, r3
 8002032:	403a      	ands	r2, r7
 8002034:	2a04      	cmp	r2, #4
 8002036:	d000      	beq.n	800203a <__aeabi_dsub+0x4ea>
 8002038:	e61a      	b.n	8001c70 <__aeabi_dsub+0x120>
 800203a:	08ff      	lsrs	r7, r7, #3
 800203c:	0764      	lsls	r4, r4, #29
 800203e:	4327      	orrs	r7, r4
 8002040:	0905      	lsrs	r5, r0, #4
 8002042:	e7dd      	b.n	8002000 <__aeabi_dsub+0x4b0>
 8002044:	465b      	mov	r3, fp
 8002046:	08d2      	lsrs	r2, r2, #3
 8002048:	075f      	lsls	r7, r3, #29
 800204a:	4317      	orrs	r7, r2
 800204c:	08dd      	lsrs	r5, r3, #3
 800204e:	e67b      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 8002050:	2700      	movs	r7, #0
 8002052:	2400      	movs	r4, #0
 8002054:	e710      	b.n	8001e78 <__aeabi_dsub+0x328>
 8002056:	2b00      	cmp	r3, #0
 8002058:	d000      	beq.n	800205c <__aeabi_dsub+0x50c>
 800205a:	e0d6      	b.n	800220a <__aeabi_dsub+0x6ba>
 800205c:	2900      	cmp	r1, #0
 800205e:	d000      	beq.n	8002062 <__aeabi_dsub+0x512>
 8002060:	e12f      	b.n	80022c2 <__aeabi_dsub+0x772>
 8002062:	2480      	movs	r4, #128	@ 0x80
 8002064:	2600      	movs	r6, #0
 8002066:	4d7e      	ldr	r5, [pc, #504]	@ (8002260 <__aeabi_dsub+0x710>)
 8002068:	0324      	lsls	r4, r4, #12
 800206a:	e705      	b.n	8001e78 <__aeabi_dsub+0x328>
 800206c:	4666      	mov	r6, ip
 800206e:	465c      	mov	r4, fp
 8002070:	08d0      	lsrs	r0, r2, #3
 8002072:	e717      	b.n	8001ea4 <__aeabi_dsub+0x354>
 8002074:	465b      	mov	r3, fp
 8002076:	1a17      	subs	r7, r2, r0
 8002078:	42ba      	cmp	r2, r7
 800207a:	4192      	sbcs	r2, r2
 800207c:	1b1c      	subs	r4, r3, r4
 800207e:	2601      	movs	r6, #1
 8002080:	4663      	mov	r3, ip
 8002082:	4252      	negs	r2, r2
 8002084:	1aa4      	subs	r4, r4, r2
 8002086:	401e      	ands	r6, r3
 8002088:	e5c4      	b.n	8001c14 <__aeabi_dsub+0xc4>
 800208a:	1883      	adds	r3, r0, r2
 800208c:	4283      	cmp	r3, r0
 800208e:	4180      	sbcs	r0, r0
 8002090:	445c      	add	r4, fp
 8002092:	4240      	negs	r0, r0
 8002094:	1825      	adds	r5, r4, r0
 8002096:	022a      	lsls	r2, r5, #8
 8002098:	d400      	bmi.n	800209c <__aeabi_dsub+0x54c>
 800209a:	e0da      	b.n	8002252 <__aeabi_dsub+0x702>
 800209c:	4a72      	ldr	r2, [pc, #456]	@ (8002268 <__aeabi_dsub+0x718>)
 800209e:	085b      	lsrs	r3, r3, #1
 80020a0:	4015      	ands	r5, r2
 80020a2:	07ea      	lsls	r2, r5, #31
 80020a4:	431a      	orrs	r2, r3
 80020a6:	0869      	lsrs	r1, r5, #1
 80020a8:	075b      	lsls	r3, r3, #29
 80020aa:	d400      	bmi.n	80020ae <__aeabi_dsub+0x55e>
 80020ac:	e14a      	b.n	8002344 <__aeabi_dsub+0x7f4>
 80020ae:	230f      	movs	r3, #15
 80020b0:	4013      	ands	r3, r2
 80020b2:	2b04      	cmp	r3, #4
 80020b4:	d100      	bne.n	80020b8 <__aeabi_dsub+0x568>
 80020b6:	e0fc      	b.n	80022b2 <__aeabi_dsub+0x762>
 80020b8:	1d17      	adds	r7, r2, #4
 80020ba:	4297      	cmp	r7, r2
 80020bc:	41a4      	sbcs	r4, r4
 80020be:	4264      	negs	r4, r4
 80020c0:	2502      	movs	r5, #2
 80020c2:	1864      	adds	r4, r4, r1
 80020c4:	e6ec      	b.n	8001ea0 <__aeabi_dsub+0x350>
 80020c6:	4647      	mov	r7, r8
 80020c8:	001c      	movs	r4, r3
 80020ca:	431f      	orrs	r7, r3
 80020cc:	d000      	beq.n	80020d0 <__aeabi_dsub+0x580>
 80020ce:	e743      	b.n	8001f58 <__aeabi_dsub+0x408>
 80020d0:	2600      	movs	r6, #0
 80020d2:	2500      	movs	r5, #0
 80020d4:	2400      	movs	r4, #0
 80020d6:	e6cf      	b.n	8001e78 <__aeabi_dsub+0x328>
 80020d8:	08c0      	lsrs	r0, r0, #3
 80020da:	0767      	lsls	r7, r4, #29
 80020dc:	4307      	orrs	r7, r0
 80020de:	08e5      	lsrs	r5, r4, #3
 80020e0:	e632      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 80020e2:	1a87      	subs	r7, r0, r2
 80020e4:	465b      	mov	r3, fp
 80020e6:	42b8      	cmp	r0, r7
 80020e8:	4180      	sbcs	r0, r0
 80020ea:	1ae4      	subs	r4, r4, r3
 80020ec:	4240      	negs	r0, r0
 80020ee:	1a24      	subs	r4, r4, r0
 80020f0:	0223      	lsls	r3, r4, #8
 80020f2:	d428      	bmi.n	8002146 <__aeabi_dsub+0x5f6>
 80020f4:	0763      	lsls	r3, r4, #29
 80020f6:	08ff      	lsrs	r7, r7, #3
 80020f8:	431f      	orrs	r7, r3
 80020fa:	08e5      	lsrs	r5, r4, #3
 80020fc:	2301      	movs	r3, #1
 80020fe:	e77f      	b.n	8002000 <__aeabi_dsub+0x4b0>
 8002100:	2b00      	cmp	r3, #0
 8002102:	d100      	bne.n	8002106 <__aeabi_dsub+0x5b6>
 8002104:	e673      	b.n	8001dee <__aeabi_dsub+0x29e>
 8002106:	464b      	mov	r3, r9
 8002108:	1b5f      	subs	r7, r3, r5
 800210a:	003b      	movs	r3, r7
 800210c:	2d00      	cmp	r5, #0
 800210e:	d100      	bne.n	8002112 <__aeabi_dsub+0x5c2>
 8002110:	e742      	b.n	8001f98 <__aeabi_dsub+0x448>
 8002112:	2f38      	cmp	r7, #56	@ 0x38
 8002114:	dd00      	ble.n	8002118 <__aeabi_dsub+0x5c8>
 8002116:	e0ec      	b.n	80022f2 <__aeabi_dsub+0x7a2>
 8002118:	2380      	movs	r3, #128	@ 0x80
 800211a:	000e      	movs	r6, r1
 800211c:	041b      	lsls	r3, r3, #16
 800211e:	431c      	orrs	r4, r3
 8002120:	2f1f      	cmp	r7, #31
 8002122:	dc25      	bgt.n	8002170 <__aeabi_dsub+0x620>
 8002124:	2520      	movs	r5, #32
 8002126:	0023      	movs	r3, r4
 8002128:	1bed      	subs	r5, r5, r7
 800212a:	0001      	movs	r1, r0
 800212c:	40a8      	lsls	r0, r5
 800212e:	40ab      	lsls	r3, r5
 8002130:	40f9      	lsrs	r1, r7
 8002132:	1e45      	subs	r5, r0, #1
 8002134:	41a8      	sbcs	r0, r5
 8002136:	430b      	orrs	r3, r1
 8002138:	40fc      	lsrs	r4, r7
 800213a:	4318      	orrs	r0, r3
 800213c:	465b      	mov	r3, fp
 800213e:	1b1b      	subs	r3, r3, r4
 8002140:	469b      	mov	fp, r3
 8002142:	e739      	b.n	8001fb8 <__aeabi_dsub+0x468>
 8002144:	4666      	mov	r6, ip
 8002146:	2501      	movs	r5, #1
 8002148:	e562      	b.n	8001c10 <__aeabi_dsub+0xc0>
 800214a:	001f      	movs	r7, r3
 800214c:	4659      	mov	r1, fp
 800214e:	3f20      	subs	r7, #32
 8002150:	40f9      	lsrs	r1, r7
 8002152:	468c      	mov	ip, r1
 8002154:	2b20      	cmp	r3, #32
 8002156:	d005      	beq.n	8002164 <__aeabi_dsub+0x614>
 8002158:	2740      	movs	r7, #64	@ 0x40
 800215a:	4659      	mov	r1, fp
 800215c:	1afb      	subs	r3, r7, r3
 800215e:	4099      	lsls	r1, r3
 8002160:	430a      	orrs	r2, r1
 8002162:	4692      	mov	sl, r2
 8002164:	4657      	mov	r7, sl
 8002166:	1e7b      	subs	r3, r7, #1
 8002168:	419f      	sbcs	r7, r3
 800216a:	4663      	mov	r3, ip
 800216c:	431f      	orrs	r7, r3
 800216e:	e5c1      	b.n	8001cf4 <__aeabi_dsub+0x1a4>
 8002170:	003b      	movs	r3, r7
 8002172:	0025      	movs	r5, r4
 8002174:	3b20      	subs	r3, #32
 8002176:	40dd      	lsrs	r5, r3
 8002178:	2f20      	cmp	r7, #32
 800217a:	d004      	beq.n	8002186 <__aeabi_dsub+0x636>
 800217c:	2340      	movs	r3, #64	@ 0x40
 800217e:	1bdb      	subs	r3, r3, r7
 8002180:	409c      	lsls	r4, r3
 8002182:	4320      	orrs	r0, r4
 8002184:	4680      	mov	r8, r0
 8002186:	4640      	mov	r0, r8
 8002188:	1e43      	subs	r3, r0, #1
 800218a:	4198      	sbcs	r0, r3
 800218c:	4328      	orrs	r0, r5
 800218e:	e713      	b.n	8001fb8 <__aeabi_dsub+0x468>
 8002190:	2900      	cmp	r1, #0
 8002192:	d09d      	beq.n	80020d0 <__aeabi_dsub+0x580>
 8002194:	2601      	movs	r6, #1
 8002196:	4663      	mov	r3, ip
 8002198:	465c      	mov	r4, fp
 800219a:	4690      	mov	r8, r2
 800219c:	401e      	ands	r6, r3
 800219e:	e6db      	b.n	8001f58 <__aeabi_dsub+0x408>
 80021a0:	1a17      	subs	r7, r2, r0
 80021a2:	465b      	mov	r3, fp
 80021a4:	42ba      	cmp	r2, r7
 80021a6:	4192      	sbcs	r2, r2
 80021a8:	1b1c      	subs	r4, r3, r4
 80021aa:	4252      	negs	r2, r2
 80021ac:	1aa4      	subs	r4, r4, r2
 80021ae:	0223      	lsls	r3, r4, #8
 80021b0:	d4c8      	bmi.n	8002144 <__aeabi_dsub+0x5f4>
 80021b2:	0763      	lsls	r3, r4, #29
 80021b4:	08ff      	lsrs	r7, r7, #3
 80021b6:	431f      	orrs	r7, r3
 80021b8:	4666      	mov	r6, ip
 80021ba:	2301      	movs	r3, #1
 80021bc:	08e5      	lsrs	r5, r4, #3
 80021be:	e71f      	b.n	8002000 <__aeabi_dsub+0x4b0>
 80021c0:	001d      	movs	r5, r3
 80021c2:	2400      	movs	r4, #0
 80021c4:	2700      	movs	r7, #0
 80021c6:	e657      	b.n	8001e78 <__aeabi_dsub+0x328>
 80021c8:	465c      	mov	r4, fp
 80021ca:	08d0      	lsrs	r0, r2, #3
 80021cc:	e66a      	b.n	8001ea4 <__aeabi_dsub+0x354>
 80021ce:	2b00      	cmp	r3, #0
 80021d0:	d100      	bne.n	80021d4 <__aeabi_dsub+0x684>
 80021d2:	e737      	b.n	8002044 <__aeabi_dsub+0x4f4>
 80021d4:	4653      	mov	r3, sl
 80021d6:	08c0      	lsrs	r0, r0, #3
 80021d8:	0767      	lsls	r7, r4, #29
 80021da:	4307      	orrs	r7, r0
 80021dc:	08e5      	lsrs	r5, r4, #3
 80021de:	2b00      	cmp	r3, #0
 80021e0:	d100      	bne.n	80021e4 <__aeabi_dsub+0x694>
 80021e2:	e5b1      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 80021e4:	2380      	movs	r3, #128	@ 0x80
 80021e6:	031b      	lsls	r3, r3, #12
 80021e8:	421d      	tst	r5, r3
 80021ea:	d008      	beq.n	80021fe <__aeabi_dsub+0x6ae>
 80021ec:	4659      	mov	r1, fp
 80021ee:	08c8      	lsrs	r0, r1, #3
 80021f0:	4218      	tst	r0, r3
 80021f2:	d104      	bne.n	80021fe <__aeabi_dsub+0x6ae>
 80021f4:	08d2      	lsrs	r2, r2, #3
 80021f6:	0749      	lsls	r1, r1, #29
 80021f8:	430a      	orrs	r2, r1
 80021fa:	0017      	movs	r7, r2
 80021fc:	0005      	movs	r5, r0
 80021fe:	0f7b      	lsrs	r3, r7, #29
 8002200:	00ff      	lsls	r7, r7, #3
 8002202:	08ff      	lsrs	r7, r7, #3
 8002204:	075b      	lsls	r3, r3, #29
 8002206:	431f      	orrs	r7, r3
 8002208:	e59e      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 800220a:	08c0      	lsrs	r0, r0, #3
 800220c:	0763      	lsls	r3, r4, #29
 800220e:	4318      	orrs	r0, r3
 8002210:	08e5      	lsrs	r5, r4, #3
 8002212:	2900      	cmp	r1, #0
 8002214:	d053      	beq.n	80022be <__aeabi_dsub+0x76e>
 8002216:	2380      	movs	r3, #128	@ 0x80
 8002218:	031b      	lsls	r3, r3, #12
 800221a:	421d      	tst	r5, r3
 800221c:	d00a      	beq.n	8002234 <__aeabi_dsub+0x6e4>
 800221e:	4659      	mov	r1, fp
 8002220:	08cc      	lsrs	r4, r1, #3
 8002222:	421c      	tst	r4, r3
 8002224:	d106      	bne.n	8002234 <__aeabi_dsub+0x6e4>
 8002226:	2601      	movs	r6, #1
 8002228:	4663      	mov	r3, ip
 800222a:	0025      	movs	r5, r4
 800222c:	08d0      	lsrs	r0, r2, #3
 800222e:	0749      	lsls	r1, r1, #29
 8002230:	4308      	orrs	r0, r1
 8002232:	401e      	ands	r6, r3
 8002234:	0f47      	lsrs	r7, r0, #29
 8002236:	00c0      	lsls	r0, r0, #3
 8002238:	08c0      	lsrs	r0, r0, #3
 800223a:	077f      	lsls	r7, r7, #29
 800223c:	4307      	orrs	r7, r0
 800223e:	e583      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 8002240:	1883      	adds	r3, r0, r2
 8002242:	4293      	cmp	r3, r2
 8002244:	4192      	sbcs	r2, r2
 8002246:	445c      	add	r4, fp
 8002248:	4252      	negs	r2, r2
 800224a:	18a5      	adds	r5, r4, r2
 800224c:	022a      	lsls	r2, r5, #8
 800224e:	d500      	bpl.n	8002252 <__aeabi_dsub+0x702>
 8002250:	e724      	b.n	800209c <__aeabi_dsub+0x54c>
 8002252:	076f      	lsls	r7, r5, #29
 8002254:	08db      	lsrs	r3, r3, #3
 8002256:	431f      	orrs	r7, r3
 8002258:	08ed      	lsrs	r5, r5, #3
 800225a:	2301      	movs	r3, #1
 800225c:	e6d0      	b.n	8002000 <__aeabi_dsub+0x4b0>
 800225e:	46c0      	nop			@ (mov r8, r8)
 8002260:	000007ff 	.word	0x000007ff
 8002264:	000007fe 	.word	0x000007fe
 8002268:	ff7fffff 	.word	0xff7fffff
 800226c:	465b      	mov	r3, fp
 800226e:	08d2      	lsrs	r2, r2, #3
 8002270:	075f      	lsls	r7, r3, #29
 8002272:	4666      	mov	r6, ip
 8002274:	4317      	orrs	r7, r2
 8002276:	08dd      	lsrs	r5, r3, #3
 8002278:	e566      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 800227a:	0025      	movs	r5, r4
 800227c:	3b20      	subs	r3, #32
 800227e:	40dd      	lsrs	r5, r3
 8002280:	4663      	mov	r3, ip
 8002282:	2b20      	cmp	r3, #32
 8002284:	d005      	beq.n	8002292 <__aeabi_dsub+0x742>
 8002286:	2340      	movs	r3, #64	@ 0x40
 8002288:	4661      	mov	r1, ip
 800228a:	1a5b      	subs	r3, r3, r1
 800228c:	409c      	lsls	r4, r3
 800228e:	4320      	orrs	r0, r4
 8002290:	4680      	mov	r8, r0
 8002292:	4647      	mov	r7, r8
 8002294:	1e7b      	subs	r3, r7, #1
 8002296:	419f      	sbcs	r7, r3
 8002298:	432f      	orrs	r7, r5
 800229a:	e5a0      	b.n	8001dde <__aeabi_dsub+0x28e>
 800229c:	2120      	movs	r1, #32
 800229e:	2700      	movs	r7, #0
 80022a0:	1a09      	subs	r1, r1, r0
 80022a2:	e4d2      	b.n	8001c4a <__aeabi_dsub+0xfa>
 80022a4:	2f00      	cmp	r7, #0
 80022a6:	d100      	bne.n	80022aa <__aeabi_dsub+0x75a>
 80022a8:	e713      	b.n	80020d2 <__aeabi_dsub+0x582>
 80022aa:	465c      	mov	r4, fp
 80022ac:	0017      	movs	r7, r2
 80022ae:	2500      	movs	r5, #0
 80022b0:	e5f6      	b.n	8001ea0 <__aeabi_dsub+0x350>
 80022b2:	08d7      	lsrs	r7, r2, #3
 80022b4:	0749      	lsls	r1, r1, #29
 80022b6:	2302      	movs	r3, #2
 80022b8:	430f      	orrs	r7, r1
 80022ba:	092d      	lsrs	r5, r5, #4
 80022bc:	e6a0      	b.n	8002000 <__aeabi_dsub+0x4b0>
 80022be:	0007      	movs	r7, r0
 80022c0:	e542      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 80022c2:	465b      	mov	r3, fp
 80022c4:	2601      	movs	r6, #1
 80022c6:	075f      	lsls	r7, r3, #29
 80022c8:	08dd      	lsrs	r5, r3, #3
 80022ca:	4663      	mov	r3, ip
 80022cc:	08d2      	lsrs	r2, r2, #3
 80022ce:	4317      	orrs	r7, r2
 80022d0:	401e      	ands	r6, r3
 80022d2:	e539      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 80022d4:	465b      	mov	r3, fp
 80022d6:	08d2      	lsrs	r2, r2, #3
 80022d8:	075f      	lsls	r7, r3, #29
 80022da:	4317      	orrs	r7, r2
 80022dc:	08dd      	lsrs	r5, r3, #3
 80022de:	e533      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 80022e0:	4a1e      	ldr	r2, [pc, #120]	@ (800235c <__aeabi_dsub+0x80c>)
 80022e2:	08db      	lsrs	r3, r3, #3
 80022e4:	4022      	ands	r2, r4
 80022e6:	0757      	lsls	r7, r2, #29
 80022e8:	0252      	lsls	r2, r2, #9
 80022ea:	2501      	movs	r5, #1
 80022ec:	431f      	orrs	r7, r3
 80022ee:	0b14      	lsrs	r4, r2, #12
 80022f0:	e5c2      	b.n	8001e78 <__aeabi_dsub+0x328>
 80022f2:	000e      	movs	r6, r1
 80022f4:	2001      	movs	r0, #1
 80022f6:	e65f      	b.n	8001fb8 <__aeabi_dsub+0x468>
 80022f8:	2b00      	cmp	r3, #0
 80022fa:	d00d      	beq.n	8002318 <__aeabi_dsub+0x7c8>
 80022fc:	464b      	mov	r3, r9
 80022fe:	1b5b      	subs	r3, r3, r5
 8002300:	469c      	mov	ip, r3
 8002302:	2d00      	cmp	r5, #0
 8002304:	d100      	bne.n	8002308 <__aeabi_dsub+0x7b8>
 8002306:	e548      	b.n	8001d9a <__aeabi_dsub+0x24a>
 8002308:	2701      	movs	r7, #1
 800230a:	2b38      	cmp	r3, #56	@ 0x38
 800230c:	dd00      	ble.n	8002310 <__aeabi_dsub+0x7c0>
 800230e:	e566      	b.n	8001dde <__aeabi_dsub+0x28e>
 8002310:	2380      	movs	r3, #128	@ 0x80
 8002312:	041b      	lsls	r3, r3, #16
 8002314:	431c      	orrs	r4, r3
 8002316:	e550      	b.n	8001dba <__aeabi_dsub+0x26a>
 8002318:	1c6b      	adds	r3, r5, #1
 800231a:	4d11      	ldr	r5, [pc, #68]	@ (8002360 <__aeabi_dsub+0x810>)
 800231c:	422b      	tst	r3, r5
 800231e:	d000      	beq.n	8002322 <__aeabi_dsub+0x7d2>
 8002320:	e673      	b.n	800200a <__aeabi_dsub+0x4ba>
 8002322:	4659      	mov	r1, fp
 8002324:	0023      	movs	r3, r4
 8002326:	4311      	orrs	r1, r2
 8002328:	468a      	mov	sl, r1
 800232a:	4303      	orrs	r3, r0
 800232c:	e600      	b.n	8001f30 <__aeabi_dsub+0x3e0>
 800232e:	0767      	lsls	r7, r4, #29
 8002330:	08c0      	lsrs	r0, r0, #3
 8002332:	2300      	movs	r3, #0
 8002334:	4307      	orrs	r7, r0
 8002336:	08e5      	lsrs	r5, r4, #3
 8002338:	e662      	b.n	8002000 <__aeabi_dsub+0x4b0>
 800233a:	0764      	lsls	r4, r4, #29
 800233c:	08ff      	lsrs	r7, r7, #3
 800233e:	4327      	orrs	r7, r4
 8002340:	0905      	lsrs	r5, r0, #4
 8002342:	e65d      	b.n	8002000 <__aeabi_dsub+0x4b0>
 8002344:	08d2      	lsrs	r2, r2, #3
 8002346:	0749      	lsls	r1, r1, #29
 8002348:	4311      	orrs	r1, r2
 800234a:	000f      	movs	r7, r1
 800234c:	2302      	movs	r3, #2
 800234e:	092d      	lsrs	r5, r5, #4
 8002350:	e656      	b.n	8002000 <__aeabi_dsub+0x4b0>
 8002352:	0007      	movs	r7, r0
 8002354:	e5a4      	b.n	8001ea0 <__aeabi_dsub+0x350>
 8002356:	0038      	movs	r0, r7
 8002358:	e48f      	b.n	8001c7a <__aeabi_dsub+0x12a>
 800235a:	46c0      	nop			@ (mov r8, r8)
 800235c:	ff7fffff 	.word	0xff7fffff
 8002360:	000007fe 	.word	0x000007fe

08002364 <__aeabi_dcmpun>:
 8002364:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002366:	46c6      	mov	lr, r8
 8002368:	031e      	lsls	r6, r3, #12
 800236a:	0b36      	lsrs	r6, r6, #12
 800236c:	46b0      	mov	r8, r6
 800236e:	4e0d      	ldr	r6, [pc, #52]	@ (80023a4 <__aeabi_dcmpun+0x40>)
 8002370:	030c      	lsls	r4, r1, #12
 8002372:	004d      	lsls	r5, r1, #1
 8002374:	005f      	lsls	r7, r3, #1
 8002376:	b500      	push	{lr}
 8002378:	0b24      	lsrs	r4, r4, #12
 800237a:	0d6d      	lsrs	r5, r5, #21
 800237c:	0d7f      	lsrs	r7, r7, #21
 800237e:	42b5      	cmp	r5, r6
 8002380:	d00b      	beq.n	800239a <__aeabi_dcmpun+0x36>
 8002382:	4908      	ldr	r1, [pc, #32]	@ (80023a4 <__aeabi_dcmpun+0x40>)
 8002384:	2000      	movs	r0, #0
 8002386:	428f      	cmp	r7, r1
 8002388:	d104      	bne.n	8002394 <__aeabi_dcmpun+0x30>
 800238a:	4646      	mov	r6, r8
 800238c:	4316      	orrs	r6, r2
 800238e:	0030      	movs	r0, r6
 8002390:	1e43      	subs	r3, r0, #1
 8002392:	4198      	sbcs	r0, r3
 8002394:	bc80      	pop	{r7}
 8002396:	46b8      	mov	r8, r7
 8002398:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800239a:	4304      	orrs	r4, r0
 800239c:	2001      	movs	r0, #1
 800239e:	2c00      	cmp	r4, #0
 80023a0:	d1f8      	bne.n	8002394 <__aeabi_dcmpun+0x30>
 80023a2:	e7ee      	b.n	8002382 <__aeabi_dcmpun+0x1e>
 80023a4:	000007ff 	.word	0x000007ff

080023a8 <__aeabi_d2iz>:
 80023a8:	000b      	movs	r3, r1
 80023aa:	0002      	movs	r2, r0
 80023ac:	b570      	push	{r4, r5, r6, lr}
 80023ae:	4d16      	ldr	r5, [pc, #88]	@ (8002408 <__aeabi_d2iz+0x60>)
 80023b0:	030c      	lsls	r4, r1, #12
 80023b2:	b082      	sub	sp, #8
 80023b4:	0049      	lsls	r1, r1, #1
 80023b6:	2000      	movs	r0, #0
 80023b8:	9200      	str	r2, [sp, #0]
 80023ba:	9301      	str	r3, [sp, #4]
 80023bc:	0b24      	lsrs	r4, r4, #12
 80023be:	0d49      	lsrs	r1, r1, #21
 80023c0:	0fde      	lsrs	r6, r3, #31
 80023c2:	42a9      	cmp	r1, r5
 80023c4:	dd04      	ble.n	80023d0 <__aeabi_d2iz+0x28>
 80023c6:	4811      	ldr	r0, [pc, #68]	@ (800240c <__aeabi_d2iz+0x64>)
 80023c8:	4281      	cmp	r1, r0
 80023ca:	dd03      	ble.n	80023d4 <__aeabi_d2iz+0x2c>
 80023cc:	4b10      	ldr	r3, [pc, #64]	@ (8002410 <__aeabi_d2iz+0x68>)
 80023ce:	18f0      	adds	r0, r6, r3
 80023d0:	b002      	add	sp, #8
 80023d2:	bd70      	pop	{r4, r5, r6, pc}
 80023d4:	2080      	movs	r0, #128	@ 0x80
 80023d6:	0340      	lsls	r0, r0, #13
 80023d8:	4320      	orrs	r0, r4
 80023da:	4c0e      	ldr	r4, [pc, #56]	@ (8002414 <__aeabi_d2iz+0x6c>)
 80023dc:	1a64      	subs	r4, r4, r1
 80023de:	2c1f      	cmp	r4, #31
 80023e0:	dd08      	ble.n	80023f4 <__aeabi_d2iz+0x4c>
 80023e2:	4b0d      	ldr	r3, [pc, #52]	@ (8002418 <__aeabi_d2iz+0x70>)
 80023e4:	1a5b      	subs	r3, r3, r1
 80023e6:	40d8      	lsrs	r0, r3
 80023e8:	0003      	movs	r3, r0
 80023ea:	4258      	negs	r0, r3
 80023ec:	2e00      	cmp	r6, #0
 80023ee:	d1ef      	bne.n	80023d0 <__aeabi_d2iz+0x28>
 80023f0:	0018      	movs	r0, r3
 80023f2:	e7ed      	b.n	80023d0 <__aeabi_d2iz+0x28>
 80023f4:	4b09      	ldr	r3, [pc, #36]	@ (800241c <__aeabi_d2iz+0x74>)
 80023f6:	9a00      	ldr	r2, [sp, #0]
 80023f8:	469c      	mov	ip, r3
 80023fa:	0003      	movs	r3, r0
 80023fc:	4461      	add	r1, ip
 80023fe:	408b      	lsls	r3, r1
 8002400:	40e2      	lsrs	r2, r4
 8002402:	4313      	orrs	r3, r2
 8002404:	e7f1      	b.n	80023ea <__aeabi_d2iz+0x42>
 8002406:	46c0      	nop			@ (mov r8, r8)
 8002408:	000003fe 	.word	0x000003fe
 800240c:	0000041d 	.word	0x0000041d
 8002410:	7fffffff 	.word	0x7fffffff
 8002414:	00000433 	.word	0x00000433
 8002418:	00000413 	.word	0x00000413
 800241c:	fffffbed 	.word	0xfffffbed

08002420 <__aeabi_i2d>:
 8002420:	b570      	push	{r4, r5, r6, lr}
 8002422:	2800      	cmp	r0, #0
 8002424:	d016      	beq.n	8002454 <__aeabi_i2d+0x34>
 8002426:	17c3      	asrs	r3, r0, #31
 8002428:	18c5      	adds	r5, r0, r3
 800242a:	405d      	eors	r5, r3
 800242c:	0fc4      	lsrs	r4, r0, #31
 800242e:	0028      	movs	r0, r5
 8002430:	f000 f912 	bl	8002658 <__clzsi2>
 8002434:	4b10      	ldr	r3, [pc, #64]	@ (8002478 <__aeabi_i2d+0x58>)
 8002436:	1a1b      	subs	r3, r3, r0
 8002438:	055b      	lsls	r3, r3, #21
 800243a:	0d5b      	lsrs	r3, r3, #21
 800243c:	280a      	cmp	r0, #10
 800243e:	dc14      	bgt.n	800246a <__aeabi_i2d+0x4a>
 8002440:	0002      	movs	r2, r0
 8002442:	002e      	movs	r6, r5
 8002444:	3215      	adds	r2, #21
 8002446:	4096      	lsls	r6, r2
 8002448:	220b      	movs	r2, #11
 800244a:	1a12      	subs	r2, r2, r0
 800244c:	40d5      	lsrs	r5, r2
 800244e:	032d      	lsls	r5, r5, #12
 8002450:	0b2d      	lsrs	r5, r5, #12
 8002452:	e003      	b.n	800245c <__aeabi_i2d+0x3c>
 8002454:	2400      	movs	r4, #0
 8002456:	2300      	movs	r3, #0
 8002458:	2500      	movs	r5, #0
 800245a:	2600      	movs	r6, #0
 800245c:	051b      	lsls	r3, r3, #20
 800245e:	432b      	orrs	r3, r5
 8002460:	07e4      	lsls	r4, r4, #31
 8002462:	4323      	orrs	r3, r4
 8002464:	0030      	movs	r0, r6
 8002466:	0019      	movs	r1, r3
 8002468:	bd70      	pop	{r4, r5, r6, pc}
 800246a:	380b      	subs	r0, #11
 800246c:	4085      	lsls	r5, r0
 800246e:	032d      	lsls	r5, r5, #12
 8002470:	2600      	movs	r6, #0
 8002472:	0b2d      	lsrs	r5, r5, #12
 8002474:	e7f2      	b.n	800245c <__aeabi_i2d+0x3c>
 8002476:	46c0      	nop			@ (mov r8, r8)
 8002478:	0000041e 	.word	0x0000041e

0800247c <__aeabi_ui2d>:
 800247c:	b510      	push	{r4, lr}
 800247e:	1e04      	subs	r4, r0, #0
 8002480:	d010      	beq.n	80024a4 <__aeabi_ui2d+0x28>
 8002482:	f000 f8e9 	bl	8002658 <__clzsi2>
 8002486:	4b0e      	ldr	r3, [pc, #56]	@ (80024c0 <__aeabi_ui2d+0x44>)
 8002488:	1a1b      	subs	r3, r3, r0
 800248a:	055b      	lsls	r3, r3, #21
 800248c:	0d5b      	lsrs	r3, r3, #21
 800248e:	280a      	cmp	r0, #10
 8002490:	dc0f      	bgt.n	80024b2 <__aeabi_ui2d+0x36>
 8002492:	220b      	movs	r2, #11
 8002494:	0021      	movs	r1, r4
 8002496:	1a12      	subs	r2, r2, r0
 8002498:	40d1      	lsrs	r1, r2
 800249a:	3015      	adds	r0, #21
 800249c:	030a      	lsls	r2, r1, #12
 800249e:	4084      	lsls	r4, r0
 80024a0:	0b12      	lsrs	r2, r2, #12
 80024a2:	e001      	b.n	80024a8 <__aeabi_ui2d+0x2c>
 80024a4:	2300      	movs	r3, #0
 80024a6:	2200      	movs	r2, #0
 80024a8:	051b      	lsls	r3, r3, #20
 80024aa:	4313      	orrs	r3, r2
 80024ac:	0020      	movs	r0, r4
 80024ae:	0019      	movs	r1, r3
 80024b0:	bd10      	pop	{r4, pc}
 80024b2:	0022      	movs	r2, r4
 80024b4:	380b      	subs	r0, #11
 80024b6:	4082      	lsls	r2, r0
 80024b8:	0312      	lsls	r2, r2, #12
 80024ba:	2400      	movs	r4, #0
 80024bc:	0b12      	lsrs	r2, r2, #12
 80024be:	e7f3      	b.n	80024a8 <__aeabi_ui2d+0x2c>
 80024c0:	0000041e 	.word	0x0000041e

080024c4 <__aeabi_f2d>:
 80024c4:	b570      	push	{r4, r5, r6, lr}
 80024c6:	0242      	lsls	r2, r0, #9
 80024c8:	0043      	lsls	r3, r0, #1
 80024ca:	0fc4      	lsrs	r4, r0, #31
 80024cc:	20fe      	movs	r0, #254	@ 0xfe
 80024ce:	0e1b      	lsrs	r3, r3, #24
 80024d0:	1c59      	adds	r1, r3, #1
 80024d2:	0a55      	lsrs	r5, r2, #9
 80024d4:	4208      	tst	r0, r1
 80024d6:	d00c      	beq.n	80024f2 <__aeabi_f2d+0x2e>
 80024d8:	21e0      	movs	r1, #224	@ 0xe0
 80024da:	0089      	lsls	r1, r1, #2
 80024dc:	468c      	mov	ip, r1
 80024de:	076d      	lsls	r5, r5, #29
 80024e0:	0b12      	lsrs	r2, r2, #12
 80024e2:	4463      	add	r3, ip
 80024e4:	051b      	lsls	r3, r3, #20
 80024e6:	4313      	orrs	r3, r2
 80024e8:	07e4      	lsls	r4, r4, #31
 80024ea:	4323      	orrs	r3, r4
 80024ec:	0028      	movs	r0, r5
 80024ee:	0019      	movs	r1, r3
 80024f0:	bd70      	pop	{r4, r5, r6, pc}
 80024f2:	2b00      	cmp	r3, #0
 80024f4:	d114      	bne.n	8002520 <__aeabi_f2d+0x5c>
 80024f6:	2d00      	cmp	r5, #0
 80024f8:	d01b      	beq.n	8002532 <__aeabi_f2d+0x6e>
 80024fa:	0028      	movs	r0, r5
 80024fc:	f000 f8ac 	bl	8002658 <__clzsi2>
 8002500:	280a      	cmp	r0, #10
 8002502:	dc1c      	bgt.n	800253e <__aeabi_f2d+0x7a>
 8002504:	230b      	movs	r3, #11
 8002506:	002a      	movs	r2, r5
 8002508:	1a1b      	subs	r3, r3, r0
 800250a:	40da      	lsrs	r2, r3
 800250c:	0003      	movs	r3, r0
 800250e:	3315      	adds	r3, #21
 8002510:	409d      	lsls	r5, r3
 8002512:	4b0e      	ldr	r3, [pc, #56]	@ (800254c <__aeabi_f2d+0x88>)
 8002514:	0312      	lsls	r2, r2, #12
 8002516:	1a1b      	subs	r3, r3, r0
 8002518:	055b      	lsls	r3, r3, #21
 800251a:	0b12      	lsrs	r2, r2, #12
 800251c:	0d5b      	lsrs	r3, r3, #21
 800251e:	e7e1      	b.n	80024e4 <__aeabi_f2d+0x20>
 8002520:	2d00      	cmp	r5, #0
 8002522:	d009      	beq.n	8002538 <__aeabi_f2d+0x74>
 8002524:	0b13      	lsrs	r3, r2, #12
 8002526:	2280      	movs	r2, #128	@ 0x80
 8002528:	0312      	lsls	r2, r2, #12
 800252a:	431a      	orrs	r2, r3
 800252c:	076d      	lsls	r5, r5, #29
 800252e:	4b08      	ldr	r3, [pc, #32]	@ (8002550 <__aeabi_f2d+0x8c>)
 8002530:	e7d8      	b.n	80024e4 <__aeabi_f2d+0x20>
 8002532:	2300      	movs	r3, #0
 8002534:	2200      	movs	r2, #0
 8002536:	e7d5      	b.n	80024e4 <__aeabi_f2d+0x20>
 8002538:	2200      	movs	r2, #0
 800253a:	4b05      	ldr	r3, [pc, #20]	@ (8002550 <__aeabi_f2d+0x8c>)
 800253c:	e7d2      	b.n	80024e4 <__aeabi_f2d+0x20>
 800253e:	0003      	movs	r3, r0
 8002540:	002a      	movs	r2, r5
 8002542:	3b0b      	subs	r3, #11
 8002544:	409a      	lsls	r2, r3
 8002546:	2500      	movs	r5, #0
 8002548:	e7e3      	b.n	8002512 <__aeabi_f2d+0x4e>
 800254a:	46c0      	nop			@ (mov r8, r8)
 800254c:	00000389 	.word	0x00000389
 8002550:	000007ff 	.word	0x000007ff

08002554 <__aeabi_d2f>:
 8002554:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002556:	004b      	lsls	r3, r1, #1
 8002558:	030f      	lsls	r7, r1, #12
 800255a:	0d5b      	lsrs	r3, r3, #21
 800255c:	4c3a      	ldr	r4, [pc, #232]	@ (8002648 <__aeabi_d2f+0xf4>)
 800255e:	0f45      	lsrs	r5, r0, #29
 8002560:	b083      	sub	sp, #12
 8002562:	0a7f      	lsrs	r7, r7, #9
 8002564:	1c5e      	adds	r6, r3, #1
 8002566:	432f      	orrs	r7, r5
 8002568:	9000      	str	r0, [sp, #0]
 800256a:	9101      	str	r1, [sp, #4]
 800256c:	0fca      	lsrs	r2, r1, #31
 800256e:	00c5      	lsls	r5, r0, #3
 8002570:	4226      	tst	r6, r4
 8002572:	d00b      	beq.n	800258c <__aeabi_d2f+0x38>
 8002574:	4935      	ldr	r1, [pc, #212]	@ (800264c <__aeabi_d2f+0xf8>)
 8002576:	185c      	adds	r4, r3, r1
 8002578:	2cfe      	cmp	r4, #254	@ 0xfe
 800257a:	dd13      	ble.n	80025a4 <__aeabi_d2f+0x50>
 800257c:	20ff      	movs	r0, #255	@ 0xff
 800257e:	2300      	movs	r3, #0
 8002580:	05c0      	lsls	r0, r0, #23
 8002582:	4318      	orrs	r0, r3
 8002584:	07d2      	lsls	r2, r2, #31
 8002586:	4310      	orrs	r0, r2
 8002588:	b003      	add	sp, #12
 800258a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800258c:	433d      	orrs	r5, r7
 800258e:	2b00      	cmp	r3, #0
 8002590:	d101      	bne.n	8002596 <__aeabi_d2f+0x42>
 8002592:	2000      	movs	r0, #0
 8002594:	e7f4      	b.n	8002580 <__aeabi_d2f+0x2c>
 8002596:	2d00      	cmp	r5, #0
 8002598:	d0f0      	beq.n	800257c <__aeabi_d2f+0x28>
 800259a:	2380      	movs	r3, #128	@ 0x80
 800259c:	03db      	lsls	r3, r3, #15
 800259e:	20ff      	movs	r0, #255	@ 0xff
 80025a0:	433b      	orrs	r3, r7
 80025a2:	e7ed      	b.n	8002580 <__aeabi_d2f+0x2c>
 80025a4:	2c00      	cmp	r4, #0
 80025a6:	dd0c      	ble.n	80025c2 <__aeabi_d2f+0x6e>
 80025a8:	9b00      	ldr	r3, [sp, #0]
 80025aa:	00ff      	lsls	r7, r7, #3
 80025ac:	019b      	lsls	r3, r3, #6
 80025ae:	1e58      	subs	r0, r3, #1
 80025b0:	4183      	sbcs	r3, r0
 80025b2:	0f69      	lsrs	r1, r5, #29
 80025b4:	433b      	orrs	r3, r7
 80025b6:	430b      	orrs	r3, r1
 80025b8:	0759      	lsls	r1, r3, #29
 80025ba:	d127      	bne.n	800260c <__aeabi_d2f+0xb8>
 80025bc:	08db      	lsrs	r3, r3, #3
 80025be:	b2e0      	uxtb	r0, r4
 80025c0:	e7de      	b.n	8002580 <__aeabi_d2f+0x2c>
 80025c2:	0021      	movs	r1, r4
 80025c4:	3117      	adds	r1, #23
 80025c6:	db31      	blt.n	800262c <__aeabi_d2f+0xd8>
 80025c8:	2180      	movs	r1, #128	@ 0x80
 80025ca:	201e      	movs	r0, #30
 80025cc:	0409      	lsls	r1, r1, #16
 80025ce:	4339      	orrs	r1, r7
 80025d0:	1b00      	subs	r0, r0, r4
 80025d2:	281f      	cmp	r0, #31
 80025d4:	dd2d      	ble.n	8002632 <__aeabi_d2f+0xde>
 80025d6:	2602      	movs	r6, #2
 80025d8:	4276      	negs	r6, r6
 80025da:	1b34      	subs	r4, r6, r4
 80025dc:	000e      	movs	r6, r1
 80025de:	40e6      	lsrs	r6, r4
 80025e0:	0034      	movs	r4, r6
 80025e2:	2820      	cmp	r0, #32
 80025e4:	d004      	beq.n	80025f0 <__aeabi_d2f+0x9c>
 80025e6:	481a      	ldr	r0, [pc, #104]	@ (8002650 <__aeabi_d2f+0xfc>)
 80025e8:	4684      	mov	ip, r0
 80025ea:	4463      	add	r3, ip
 80025ec:	4099      	lsls	r1, r3
 80025ee:	430d      	orrs	r5, r1
 80025f0:	002b      	movs	r3, r5
 80025f2:	1e59      	subs	r1, r3, #1
 80025f4:	418b      	sbcs	r3, r1
 80025f6:	4323      	orrs	r3, r4
 80025f8:	0759      	lsls	r1, r3, #29
 80025fa:	d003      	beq.n	8002604 <__aeabi_d2f+0xb0>
 80025fc:	210f      	movs	r1, #15
 80025fe:	4019      	ands	r1, r3
 8002600:	2904      	cmp	r1, #4
 8002602:	d10b      	bne.n	800261c <__aeabi_d2f+0xc8>
 8002604:	019b      	lsls	r3, r3, #6
 8002606:	2000      	movs	r0, #0
 8002608:	0a5b      	lsrs	r3, r3, #9
 800260a:	e7b9      	b.n	8002580 <__aeabi_d2f+0x2c>
 800260c:	210f      	movs	r1, #15
 800260e:	4019      	ands	r1, r3
 8002610:	2904      	cmp	r1, #4
 8002612:	d104      	bne.n	800261e <__aeabi_d2f+0xca>
 8002614:	019b      	lsls	r3, r3, #6
 8002616:	0a5b      	lsrs	r3, r3, #9
 8002618:	b2e0      	uxtb	r0, r4
 800261a:	e7b1      	b.n	8002580 <__aeabi_d2f+0x2c>
 800261c:	2400      	movs	r4, #0
 800261e:	3304      	adds	r3, #4
 8002620:	0159      	lsls	r1, r3, #5
 8002622:	d5f7      	bpl.n	8002614 <__aeabi_d2f+0xc0>
 8002624:	3401      	adds	r4, #1
 8002626:	2300      	movs	r3, #0
 8002628:	b2e0      	uxtb	r0, r4
 800262a:	e7a9      	b.n	8002580 <__aeabi_d2f+0x2c>
 800262c:	2000      	movs	r0, #0
 800262e:	2300      	movs	r3, #0
 8002630:	e7a6      	b.n	8002580 <__aeabi_d2f+0x2c>
 8002632:	4c08      	ldr	r4, [pc, #32]	@ (8002654 <__aeabi_d2f+0x100>)
 8002634:	191c      	adds	r4, r3, r4
 8002636:	002b      	movs	r3, r5
 8002638:	40a5      	lsls	r5, r4
 800263a:	40c3      	lsrs	r3, r0
 800263c:	40a1      	lsls	r1, r4
 800263e:	1e68      	subs	r0, r5, #1
 8002640:	4185      	sbcs	r5, r0
 8002642:	4329      	orrs	r1, r5
 8002644:	430b      	orrs	r3, r1
 8002646:	e7d7      	b.n	80025f8 <__aeabi_d2f+0xa4>
 8002648:	000007fe 	.word	0x000007fe
 800264c:	fffffc80 	.word	0xfffffc80
 8002650:	fffffca2 	.word	0xfffffca2
 8002654:	fffffc82 	.word	0xfffffc82

08002658 <__clzsi2>:
 8002658:	211c      	movs	r1, #28
 800265a:	2301      	movs	r3, #1
 800265c:	041b      	lsls	r3, r3, #16
 800265e:	4298      	cmp	r0, r3
 8002660:	d301      	bcc.n	8002666 <__clzsi2+0xe>
 8002662:	0c00      	lsrs	r0, r0, #16
 8002664:	3910      	subs	r1, #16
 8002666:	0a1b      	lsrs	r3, r3, #8
 8002668:	4298      	cmp	r0, r3
 800266a:	d301      	bcc.n	8002670 <__clzsi2+0x18>
 800266c:	0a00      	lsrs	r0, r0, #8
 800266e:	3908      	subs	r1, #8
 8002670:	091b      	lsrs	r3, r3, #4
 8002672:	4298      	cmp	r0, r3
 8002674:	d301      	bcc.n	800267a <__clzsi2+0x22>
 8002676:	0900      	lsrs	r0, r0, #4
 8002678:	3904      	subs	r1, #4
 800267a:	a202      	add	r2, pc, #8	@ (adr r2, 8002684 <__clzsi2+0x2c>)
 800267c:	5c10      	ldrb	r0, [r2, r0]
 800267e:	1840      	adds	r0, r0, r1
 8002680:	4770      	bx	lr
 8002682:	46c0      	nop			@ (mov r8, r8)
 8002684:	02020304 	.word	0x02020304
 8002688:	01010101 	.word	0x01010101
	...

08002694 <__io_putchar>:
#define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
#define GETCHAR_PROTOTYPE int fgetc(FILE *f)
#endif

PUTCHAR_PROTOTYPE
{
 8002694:	b580      	push	{r7, lr}
 8002696:	b082      	sub	sp, #8
 8002698:	af00      	add	r7, sp, #0
 800269a:	6078      	str	r0, [r7, #4]
  HAL_UART_Transmit(&huart2, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 800269c:	2301      	movs	r3, #1
 800269e:	425b      	negs	r3, r3
 80026a0:	1d39      	adds	r1, r7, #4
 80026a2:	4804      	ldr	r0, [pc, #16]	@ (80026b4 <__io_putchar+0x20>)
 80026a4:	2201      	movs	r2, #1
 80026a6:	f001 fbe5 	bl	8003e74 <HAL_UART_Transmit>
  return ch;
 80026aa:	687b      	ldr	r3, [r7, #4]
}
 80026ac:	0018      	movs	r0, r3
 80026ae:	46bd      	mov	sp, r7
 80026b0:	b002      	add	sp, #8
 80026b2:	bd80      	pop	{r7, pc}
 80026b4:	200001f4 	.word	0x200001f4

080026b8 <__io_getchar>:

GETCHAR_PROTOTYPE
{
 80026b8:	b580      	push	{r7, lr}
 80026ba:	b082      	sub	sp, #8
 80026bc:	af00      	add	r7, sp, #0
  uint8_t ch = 0;
 80026be:	1dfb      	adds	r3, r7, #7
 80026c0:	2200      	movs	r2, #0
 80026c2:	701a      	strb	r2, [r3, #0]

  /* Clear the Overrun flag just before receiving the first character */
  __HAL_UART_CLEAR_OREFLAG(&huart2);
 80026c4:	4b0b      	ldr	r3, [pc, #44]	@ (80026f4 <__io_getchar+0x3c>)
 80026c6:	681b      	ldr	r3, [r3, #0]
 80026c8:	2208      	movs	r2, #8
 80026ca:	621a      	str	r2, [r3, #32]

  /* Wait for reception of a character on the USART RX line and echo this
   * character on console */
  HAL_UART_Receive(&huart2, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 80026cc:	2301      	movs	r3, #1
 80026ce:	425b      	negs	r3, r3
 80026d0:	1df9      	adds	r1, r7, #7
 80026d2:	4808      	ldr	r0, [pc, #32]	@ (80026f4 <__io_getchar+0x3c>)
 80026d4:	2201      	movs	r2, #1
 80026d6:	f001 fc75 	bl	8003fc4 <HAL_UART_Receive>
  HAL_UART_Transmit(&huart2, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 80026da:	2301      	movs	r3, #1
 80026dc:	425b      	negs	r3, r3
 80026de:	1df9      	adds	r1, r7, #7
 80026e0:	4804      	ldr	r0, [pc, #16]	@ (80026f4 <__io_getchar+0x3c>)
 80026e2:	2201      	movs	r2, #1
 80026e4:	f001 fbc6 	bl	8003e74 <HAL_UART_Transmit>
  return ch;
 80026e8:	1dfb      	adds	r3, r7, #7
 80026ea:	781b      	ldrb	r3, [r3, #0]
}
 80026ec:	0018      	movs	r0, r3
 80026ee:	46bd      	mov	sp, r7
 80026f0:	b002      	add	sp, #8
 80026f2:	bd80      	pop	{r7, pc}
 80026f4:	200001f4 	.word	0x200001f4

080026f8 <HAL_GPIO_EXTI_Callback>:
/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

// define what we do in case of GPIO interrupt
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 80026f8:	b580      	push	{r7, lr}
 80026fa:	b082      	sub	sp, #8
 80026fc:	af00      	add	r7, sp, #0
 80026fe:	0002      	movs	r2, r0
 8002700:	1dbb      	adds	r3, r7, #6
 8002702:	801a      	strh	r2, [r3, #0]
	/* We get here after GRIO interruption caused by button push
	   We will write to serial UART with asynchronous HAL_UART_Transmit_IT.
	   Note, variable buffer should be global for this. */
	static uint8_t counter = 0;

	++counter;
 8002704:	4b12      	ldr	r3, [pc, #72]	@ (8002750 <HAL_GPIO_EXTI_Callback+0x58>)
 8002706:	781b      	ldrb	r3, [r3, #0]
 8002708:	3301      	adds	r3, #1
 800270a:	b2da      	uxtb	r2, r3
 800270c:	4b10      	ldr	r3, [pc, #64]	@ (8002750 <HAL_GPIO_EXTI_Callback+0x58>)
 800270e:	701a      	strb	r2, [r3, #0]

	if (uart_tx_complete) {
 8002710:	4b10      	ldr	r3, [pc, #64]	@ (8002754 <HAL_GPIO_EXTI_Callback+0x5c>)
 8002712:	781b      	ldrb	r3, [r3, #0]
 8002714:	b2db      	uxtb	r3, r3
 8002716:	2b00      	cmp	r3, #0
 8002718:	d015      	beq.n	8002746 <HAL_GPIO_EXTI_Callback+0x4e>
	    uart_tx_complete = 0;  // Mark as transmitting
 800271a:	4b0e      	ldr	r3, [pc, #56]	@ (8002754 <HAL_GPIO_EXTI_Callback+0x5c>)
 800271c:	2200      	movs	r2, #0
 800271e:	701a      	strb	r2, [r3, #0]
	    sprintf(buffer, "Blue button is pressed %d times...", counter);
 8002720:	4b0b      	ldr	r3, [pc, #44]	@ (8002750 <HAL_GPIO_EXTI_Callback+0x58>)
 8002722:	781b      	ldrb	r3, [r3, #0]
 8002724:	001a      	movs	r2, r3
 8002726:	490c      	ldr	r1, [pc, #48]	@ (8002758 <HAL_GPIO_EXTI_Callback+0x60>)
 8002728:	4b0c      	ldr	r3, [pc, #48]	@ (800275c <HAL_GPIO_EXTI_Callback+0x64>)
 800272a:	0018      	movs	r0, r3
 800272c:	f003 fa92 	bl	8005c54 <siprintf>
	    HAL_UART_Transmit_IT(&huart2, buffer, strlen(buffer));
 8002730:	4b0a      	ldr	r3, [pc, #40]	@ (800275c <HAL_GPIO_EXTI_Callback+0x64>)
 8002732:	0018      	movs	r0, r3
 8002734:	f7fd fce8 	bl	8000108 <strlen>
 8002738:	0003      	movs	r3, r0
 800273a:	b29a      	uxth	r2, r3
 800273c:	4907      	ldr	r1, [pc, #28]	@ (800275c <HAL_GPIO_EXTI_Callback+0x64>)
 800273e:	4b08      	ldr	r3, [pc, #32]	@ (8002760 <HAL_GPIO_EXTI_Callback+0x68>)
 8002740:	0018      	movs	r0, r3
 8002742:	f001 fd17 	bl	8004174 <HAL_UART_Transmit_IT>
	}
}
 8002746:	46c0      	nop			@ (mov r8, r8)
 8002748:	46bd      	mov	sp, r7
 800274a:	b002      	add	sp, #8
 800274c:	bd80      	pop	{r7, pc}
 800274e:	46c0      	nop			@ (mov r8, r8)
 8002750:	200002a6 	.word	0x200002a6
 8002754:	20000000 	.word	0x20000000
 8002758:	0800a118 	.word	0x0800a118
 800275c:	20000274 	.word	0x20000274
 8002760:	200001f4 	.word	0x200001f4

08002764 <HAL_UART_TxCpltCallback>:


void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 8002764:	b5b0      	push	{r4, r5, r7, lr}
 8002766:	b08a      	sub	sp, #40	@ 0x28
 8002768:	af00      	add	r7, sp, #0
 800276a:	6078      	str	r0, [r7, #4]
/*
This is overriding of weak callback function
Here we will check if transmission finished
 */

  if (huart->Instance == USART2) // Check if it is USART2 Transmission complete, do something
 800276c:	687b      	ldr	r3, [r7, #4]
 800276e:	681b      	ldr	r3, [r3, #0]
 8002770:	4a0f      	ldr	r2, [pc, #60]	@ (80027b0 <HAL_UART_TxCpltCallback+0x4c>)
 8002772:	4293      	cmp	r3, r2
 8002774:	d118      	bne.n	80027a8 <HAL_UART_TxCpltCallback+0x44>
  {
	  uart_tx_complete = 1;  // Mark transmission as complete
 8002776:	4b0f      	ldr	r3, [pc, #60]	@ (80027b4 <HAL_UART_TxCpltCallback+0x50>)
 8002778:	2201      	movs	r2, #1
 800277a:	701a      	strb	r2, [r3, #0]
	  uint8_t msg[] = "Asinc Transmission complete\n\r";
 800277c:	2508      	movs	r5, #8
 800277e:	197b      	adds	r3, r7, r5
 8002780:	4a0d      	ldr	r2, [pc, #52]	@ (80027b8 <HAL_UART_TxCpltCallback+0x54>)
 8002782:	ca13      	ldmia	r2!, {r0, r1, r4}
 8002784:	c313      	stmia	r3!, {r0, r1, r4}
 8002786:	ca13      	ldmia	r2!, {r0, r1, r4}
 8002788:	c313      	stmia	r3!, {r0, r1, r4}
 800278a:	6811      	ldr	r1, [r2, #0]
 800278c:	6019      	str	r1, [r3, #0]
 800278e:	8892      	ldrh	r2, [r2, #4]
 8002790:	809a      	strh	r2, [r3, #4]
	  HAL_UART_Transmit(&huart2, msg, strlen(msg), 20); // Sent message to UART in blocking manner with timeout 20 ms
 8002792:	197b      	adds	r3, r7, r5
 8002794:	0018      	movs	r0, r3
 8002796:	f7fd fcb7 	bl	8000108 <strlen>
 800279a:	0003      	movs	r3, r0
 800279c:	b29a      	uxth	r2, r3
 800279e:	1979      	adds	r1, r7, r5
 80027a0:	4806      	ldr	r0, [pc, #24]	@ (80027bc <HAL_UART_TxCpltCallback+0x58>)
 80027a2:	2314      	movs	r3, #20
 80027a4:	f001 fb66 	bl	8003e74 <HAL_UART_Transmit>
  }
}
 80027a8:	46c0      	nop			@ (mov r8, r8)
 80027aa:	46bd      	mov	sp, r7
 80027ac:	b00a      	add	sp, #40	@ 0x28
 80027ae:	bdb0      	pop	{r4, r5, r7, pc}
 80027b0:	40004400 	.word	0x40004400
 80027b4:	20000000 	.word	0x20000000
 80027b8:	0800a13c 	.word	0x0800a13c
 80027bc:	200001f4 	.word	0x200001f4

080027c0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80027c0:	b5b0      	push	{r4, r5, r7, lr}
 80027c2:	b0a4      	sub	sp, #144	@ 0x90
 80027c4:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80027c6:	f000 fb25 	bl	8002e14 <HAL_Init>

  /* USER CODE BEGIN Init */
	  // Disable internal buffering for the input stream, is must for redefined scanf() work correctly
	  setvbuf(stdin, NULL, _IONBF, 0);
 80027ca:	4b40      	ldr	r3, [pc, #256]	@ (80028cc <main+0x10c>)
 80027cc:	681b      	ldr	r3, [r3, #0]
 80027ce:	6858      	ldr	r0, [r3, #4]
 80027d0:	2300      	movs	r3, #0
 80027d2:	2202      	movs	r2, #2
 80027d4:	2100      	movs	r1, #0
 80027d6:	f003 f987 	bl	8005ae8 <setvbuf>
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80027da:	f000 f893 	bl	8002904 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80027de:	f000 f90b 	bl	80029f8 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 80027e2:	f000 f8d9 	bl	8002998 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */

  uint8_t msg[50] = {0};
 80027e6:	245c      	movs	r4, #92	@ 0x5c
 80027e8:	193b      	adds	r3, r7, r4
 80027ea:	0018      	movs	r0, r3
 80027ec:	2332      	movs	r3, #50	@ 0x32
 80027ee:	001a      	movs	r2, r3
 80027f0:	2100      	movs	r1, #0
 80027f2:	f003 fa9d 	bl	8005d30 <memset>
  sprintf(msg, "Serial started at %d baud rate\n\r", huart2.Init.BaudRate);
 80027f6:	4b36      	ldr	r3, [pc, #216]	@ (80028d0 <main+0x110>)
 80027f8:	685a      	ldr	r2, [r3, #4]
 80027fa:	4936      	ldr	r1, [pc, #216]	@ (80028d4 <main+0x114>)
 80027fc:	193b      	adds	r3, r7, r4
 80027fe:	0018      	movs	r0, r3
 8002800:	f003 fa28 	bl	8005c54 <siprintf>
  HAL_UART_Transmit(&huart2, msg, strlen(msg) , 20); // Sent message to UART in blocking manner with timeout 20 ms
 8002804:	193b      	adds	r3, r7, r4
 8002806:	0018      	movs	r0, r3
 8002808:	f7fd fc7e 	bl	8000108 <strlen>
 800280c:	0003      	movs	r3, r0
 800280e:	b29a      	uxth	r2, r3
 8002810:	1939      	adds	r1, r7, r4
 8002812:	482f      	ldr	r0, [pc, #188]	@ (80028d0 <main+0x110>)
 8002814:	2314      	movs	r3, #20
 8002816:	f001 fb2d 	bl	8003e74 <HAL_UART_Transmit>
	// using redefined printf() and scanf()
	char str[80];
	int i;
	float f;

	printf("Enter your name: ");
 800281a:	4b2f      	ldr	r3, [pc, #188]	@ (80028d8 <main+0x118>)
 800281c:	0018      	movs	r0, r3
 800281e:	f003 f939 	bl	8005a94 <iprintf>
	scanf("%79s", str);
 8002822:	240c      	movs	r4, #12
 8002824:	193a      	adds	r2, r7, r4
 8002826:	4b2d      	ldr	r3, [pc, #180]	@ (80028dc <main+0x11c>)
 8002828:	0011      	movs	r1, r2
 800282a:	0018      	movs	r0, r3
 800282c:	f003 f94c 	bl	8005ac8 <iscanf>
	printf("\n");
 8002830:	200a      	movs	r0, #10
 8002832:	f003 f93f 	bl	8005ab4 <putchar>


	printf("Enter your age: ");
 8002836:	4b2a      	ldr	r3, [pc, #168]	@ (80028e0 <main+0x120>)
 8002838:	0018      	movs	r0, r3
 800283a:	f003 f92b 	bl	8005a94 <iprintf>
	scanf("%d", &i);
 800283e:	2508      	movs	r5, #8
 8002840:	197a      	adds	r2, r7, r5
 8002842:	4b28      	ldr	r3, [pc, #160]	@ (80028e4 <main+0x124>)
 8002844:	0011      	movs	r1, r2
 8002846:	0018      	movs	r0, r3
 8002848:	f003 f93e 	bl	8005ac8 <iscanf>
	printf("\n");
 800284c:	200a      	movs	r0, #10
 800284e:	f003 f931 	bl	8005ab4 <putchar>

	printf("Hello, %s, %d years old.\r\n", str, i);
 8002852:	68ba      	ldr	r2, [r7, #8]
 8002854:	1939      	adds	r1, r7, r4
 8002856:	4b24      	ldr	r3, [pc, #144]	@ (80028e8 <main+0x128>)
 8002858:	0018      	movs	r0, r3
 800285a:	f003 f91b 	bl	8005a94 <iprintf>

	printf("Enter a hexadecimal number: ");
 800285e:	4b23      	ldr	r3, [pc, #140]	@ (80028ec <main+0x12c>)
 8002860:	0018      	movs	r0, r3
 8002862:	f003 f917 	bl	8005a94 <iprintf>
	scanf("%x", &i);
 8002866:	197a      	adds	r2, r7, r5
 8002868:	4b21      	ldr	r3, [pc, #132]	@ (80028f0 <main+0x130>)
 800286a:	0011      	movs	r1, r2
 800286c:	0018      	movs	r0, r3
 800286e:	f003 f92b 	bl	8005ac8 <iscanf>
	printf("\n");
 8002872:	200a      	movs	r0, #10
 8002874:	f003 f91e 	bl	8005ab4 <putchar>

	printf("You have entered %#x (%d).\r\n", i, i);
 8002878:	68b9      	ldr	r1, [r7, #8]
 800287a:	68ba      	ldr	r2, [r7, #8]
 800287c:	4b1d      	ldr	r3, [pc, #116]	@ (80028f4 <main+0x134>)
 800287e:	0018      	movs	r0, r3
 8002880:	f003 f908 	bl	8005a94 <iprintf>

	/* to use floating point input/output
	 the option should be anabled in project properties. See details here:
	 https://forum.digikey.com/t/easily-use-scanf-on-stm32/21103
	 */
	printf("Enter a floating point number: ");
 8002884:	4b1c      	ldr	r3, [pc, #112]	@ (80028f8 <main+0x138>)
 8002886:	0018      	movs	r0, r3
 8002888:	f003 f904 	bl	8005a94 <iprintf>
	scanf("%f", &f);
 800288c:	1d3a      	adds	r2, r7, #4
 800288e:	4b1b      	ldr	r3, [pc, #108]	@ (80028fc <main+0x13c>)
 8002890:	0011      	movs	r1, r2
 8002892:	0018      	movs	r0, r3
 8002894:	f003 f918 	bl	8005ac8 <iscanf>
	printf("\n");
 8002898:	200a      	movs	r0, #10
 800289a:	f003 f90b 	bl	8005ab4 <putchar>

	printf("You have entered %f \r\n", f);
 800289e:	687b      	ldr	r3, [r7, #4]
 80028a0:	1c18      	adds	r0, r3, #0
 80028a2:	f7ff fe0f 	bl	80024c4 <__aeabi_f2d>
 80028a6:	0002      	movs	r2, r0
 80028a8:	000b      	movs	r3, r1
 80028aa:	4915      	ldr	r1, [pc, #84]	@ (8002900 <main+0x140>)
 80028ac:	0008      	movs	r0, r1
 80028ae:	f003 f8f1 	bl	8005a94 <iprintf>

    /* USER CODE BEGIN 3 */


	// blink LCD
	HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 80028b2:	2390      	movs	r3, #144	@ 0x90
 80028b4:	05db      	lsls	r3, r3, #23
 80028b6:	2120      	movs	r1, #32
 80028b8:	0018      	movs	r0, r3
 80028ba:	f000 fde4 	bl	8003486 <HAL_GPIO_TogglePin>
	HAL_Delay(500);
 80028be:	23fa      	movs	r3, #250	@ 0xfa
 80028c0:	005b      	lsls	r3, r3, #1
 80028c2:	0018      	movs	r0, r3
 80028c4:	f000 fb0a 	bl	8002edc <HAL_Delay>
	HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 80028c8:	46c0      	nop			@ (mov r8, r8)
 80028ca:	e7f2      	b.n	80028b2 <main+0xf2>
 80028cc:	2000001c 	.word	0x2000001c
 80028d0:	200001f4 	.word	0x200001f4
 80028d4:	0800a15c 	.word	0x0800a15c
 80028d8:	0800a180 	.word	0x0800a180
 80028dc:	0800a194 	.word	0x0800a194
 80028e0:	0800a19c 	.word	0x0800a19c
 80028e4:	0800a1b0 	.word	0x0800a1b0
 80028e8:	0800a1b4 	.word	0x0800a1b4
 80028ec:	0800a1d0 	.word	0x0800a1d0
 80028f0:	0800a1f0 	.word	0x0800a1f0
 80028f4:	0800a1f4 	.word	0x0800a1f4
 80028f8:	0800a214 	.word	0x0800a214
 80028fc:	0800a234 	.word	0x0800a234
 8002900:	0800a238 	.word	0x0800a238

08002904 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002904:	b590      	push	{r4, r7, lr}
 8002906:	b091      	sub	sp, #68	@ 0x44
 8002908:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800290a:	2410      	movs	r4, #16
 800290c:	193b      	adds	r3, r7, r4
 800290e:	0018      	movs	r0, r3
 8002910:	2330      	movs	r3, #48	@ 0x30
 8002912:	001a      	movs	r2, r3
 8002914:	2100      	movs	r1, #0
 8002916:	f003 fa0b 	bl	8005d30 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800291a:	003b      	movs	r3, r7
 800291c:	0018      	movs	r0, r3
 800291e:	2310      	movs	r3, #16
 8002920:	001a      	movs	r2, r3
 8002922:	2100      	movs	r1, #0
 8002924:	f003 fa04 	bl	8005d30 <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002928:	0021      	movs	r1, r4
 800292a:	187b      	adds	r3, r7, r1
 800292c:	2202      	movs	r2, #2
 800292e:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002930:	187b      	adds	r3, r7, r1
 8002932:	2201      	movs	r2, #1
 8002934:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8002936:	187b      	adds	r3, r7, r1
 8002938:	2210      	movs	r2, #16
 800293a:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800293c:	187b      	adds	r3, r7, r1
 800293e:	2202      	movs	r2, #2
 8002940:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8002942:	187b      	adds	r3, r7, r1
 8002944:	2200      	movs	r2, #0
 8002946:	625a      	str	r2, [r3, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 8002948:	187b      	adds	r3, r7, r1
 800294a:	22a0      	movs	r2, #160	@ 0xa0
 800294c:	0392      	lsls	r2, r2, #14
 800294e:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 8002950:	187b      	adds	r3, r7, r1
 8002952:	2200      	movs	r2, #0
 8002954:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002956:	187b      	adds	r3, r7, r1
 8002958:	0018      	movs	r0, r3
 800295a:	f000 fdcb 	bl	80034f4 <HAL_RCC_OscConfig>
 800295e:	1e03      	subs	r3, r0, #0
 8002960:	d001      	beq.n	8002966 <SystemClock_Config+0x62>
  {
    Error_Handler();
 8002962:	f000 f8bb 	bl	8002adc <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002966:	003b      	movs	r3, r7
 8002968:	2207      	movs	r2, #7
 800296a:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800296c:	003b      	movs	r3, r7
 800296e:	2202      	movs	r2, #2
 8002970:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002972:	003b      	movs	r3, r7
 8002974:	2200      	movs	r2, #0
 8002976:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8002978:	003b      	movs	r3, r7
 800297a:	2200      	movs	r2, #0
 800297c:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 800297e:	003b      	movs	r3, r7
 8002980:	2101      	movs	r1, #1
 8002982:	0018      	movs	r0, r3
 8002984:	f001 f8d0 	bl	8003b28 <HAL_RCC_ClockConfig>
 8002988:	1e03      	subs	r3, r0, #0
 800298a:	d001      	beq.n	8002990 <SystemClock_Config+0x8c>
  {
    Error_Handler();
 800298c:	f000 f8a6 	bl	8002adc <Error_Handler>
  }
}
 8002990:	46c0      	nop			@ (mov r8, r8)
 8002992:	46bd      	mov	sp, r7
 8002994:	b011      	add	sp, #68	@ 0x44
 8002996:	bd90      	pop	{r4, r7, pc}

08002998 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8002998:	b580      	push	{r7, lr}
 800299a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800299c:	4b14      	ldr	r3, [pc, #80]	@ (80029f0 <MX_USART2_UART_Init+0x58>)
 800299e:	4a15      	ldr	r2, [pc, #84]	@ (80029f4 <MX_USART2_UART_Init+0x5c>)
 80029a0:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 38400;
 80029a2:	4b13      	ldr	r3, [pc, #76]	@ (80029f0 <MX_USART2_UART_Init+0x58>)
 80029a4:	2296      	movs	r2, #150	@ 0x96
 80029a6:	0212      	lsls	r2, r2, #8
 80029a8:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80029aa:	4b11      	ldr	r3, [pc, #68]	@ (80029f0 <MX_USART2_UART_Init+0x58>)
 80029ac:	2200      	movs	r2, #0
 80029ae:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80029b0:	4b0f      	ldr	r3, [pc, #60]	@ (80029f0 <MX_USART2_UART_Init+0x58>)
 80029b2:	2200      	movs	r2, #0
 80029b4:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80029b6:	4b0e      	ldr	r3, [pc, #56]	@ (80029f0 <MX_USART2_UART_Init+0x58>)
 80029b8:	2200      	movs	r2, #0
 80029ba:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80029bc:	4b0c      	ldr	r3, [pc, #48]	@ (80029f0 <MX_USART2_UART_Init+0x58>)
 80029be:	220c      	movs	r2, #12
 80029c0:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80029c2:	4b0b      	ldr	r3, [pc, #44]	@ (80029f0 <MX_USART2_UART_Init+0x58>)
 80029c4:	2200      	movs	r2, #0
 80029c6:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80029c8:	4b09      	ldr	r3, [pc, #36]	@ (80029f0 <MX_USART2_UART_Init+0x58>)
 80029ca:	2200      	movs	r2, #0
 80029cc:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80029ce:	4b08      	ldr	r3, [pc, #32]	@ (80029f0 <MX_USART2_UART_Init+0x58>)
 80029d0:	2200      	movs	r2, #0
 80029d2:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80029d4:	4b06      	ldr	r3, [pc, #24]	@ (80029f0 <MX_USART2_UART_Init+0x58>)
 80029d6:	2200      	movs	r2, #0
 80029d8:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80029da:	4b05      	ldr	r3, [pc, #20]	@ (80029f0 <MX_USART2_UART_Init+0x58>)
 80029dc:	0018      	movs	r0, r3
 80029de:	f001 f9f5 	bl	8003dcc <HAL_UART_Init>
 80029e2:	1e03      	subs	r3, r0, #0
 80029e4:	d001      	beq.n	80029ea <MX_USART2_UART_Init+0x52>
  {
    Error_Handler();
 80029e6:	f000 f879 	bl	8002adc <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80029ea:	46c0      	nop			@ (mov r8, r8)
 80029ec:	46bd      	mov	sp, r7
 80029ee:	bd80      	pop	{r7, pc}
 80029f0:	200001f4 	.word	0x200001f4
 80029f4:	40004400 	.word	0x40004400

080029f8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80029f8:	b590      	push	{r4, r7, lr}
 80029fa:	b089      	sub	sp, #36	@ 0x24
 80029fc:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80029fe:	240c      	movs	r4, #12
 8002a00:	193b      	adds	r3, r7, r4
 8002a02:	0018      	movs	r0, r3
 8002a04:	2314      	movs	r3, #20
 8002a06:	001a      	movs	r2, r3
 8002a08:	2100      	movs	r1, #0
 8002a0a:	f003 f991 	bl	8005d30 <memset>
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002a0e:	4b30      	ldr	r3, [pc, #192]	@ (8002ad0 <MX_GPIO_Init+0xd8>)
 8002a10:	695a      	ldr	r2, [r3, #20]
 8002a12:	4b2f      	ldr	r3, [pc, #188]	@ (8002ad0 <MX_GPIO_Init+0xd8>)
 8002a14:	2180      	movs	r1, #128	@ 0x80
 8002a16:	0309      	lsls	r1, r1, #12
 8002a18:	430a      	orrs	r2, r1
 8002a1a:	615a      	str	r2, [r3, #20]
 8002a1c:	4b2c      	ldr	r3, [pc, #176]	@ (8002ad0 <MX_GPIO_Init+0xd8>)
 8002a1e:	695a      	ldr	r2, [r3, #20]
 8002a20:	2380      	movs	r3, #128	@ 0x80
 8002a22:	031b      	lsls	r3, r3, #12
 8002a24:	4013      	ands	r3, r2
 8002a26:	60bb      	str	r3, [r7, #8]
 8002a28:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8002a2a:	4b29      	ldr	r3, [pc, #164]	@ (8002ad0 <MX_GPIO_Init+0xd8>)
 8002a2c:	695a      	ldr	r2, [r3, #20]
 8002a2e:	4b28      	ldr	r3, [pc, #160]	@ (8002ad0 <MX_GPIO_Init+0xd8>)
 8002a30:	2180      	movs	r1, #128	@ 0x80
 8002a32:	03c9      	lsls	r1, r1, #15
 8002a34:	430a      	orrs	r2, r1
 8002a36:	615a      	str	r2, [r3, #20]
 8002a38:	4b25      	ldr	r3, [pc, #148]	@ (8002ad0 <MX_GPIO_Init+0xd8>)
 8002a3a:	695a      	ldr	r2, [r3, #20]
 8002a3c:	2380      	movs	r3, #128	@ 0x80
 8002a3e:	03db      	lsls	r3, r3, #15
 8002a40:	4013      	ands	r3, r2
 8002a42:	607b      	str	r3, [r7, #4]
 8002a44:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002a46:	4b22      	ldr	r3, [pc, #136]	@ (8002ad0 <MX_GPIO_Init+0xd8>)
 8002a48:	695a      	ldr	r2, [r3, #20]
 8002a4a:	4b21      	ldr	r3, [pc, #132]	@ (8002ad0 <MX_GPIO_Init+0xd8>)
 8002a4c:	2180      	movs	r1, #128	@ 0x80
 8002a4e:	0289      	lsls	r1, r1, #10
 8002a50:	430a      	orrs	r2, r1
 8002a52:	615a      	str	r2, [r3, #20]
 8002a54:	4b1e      	ldr	r3, [pc, #120]	@ (8002ad0 <MX_GPIO_Init+0xd8>)
 8002a56:	695a      	ldr	r2, [r3, #20]
 8002a58:	2380      	movs	r3, #128	@ 0x80
 8002a5a:	029b      	lsls	r3, r3, #10
 8002a5c:	4013      	ands	r3, r2
 8002a5e:	603b      	str	r3, [r7, #0]
 8002a60:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 8002a62:	2390      	movs	r3, #144	@ 0x90
 8002a64:	05db      	lsls	r3, r3, #23
 8002a66:	2200      	movs	r2, #0
 8002a68:	2120      	movs	r1, #32
 8002a6a:	0018      	movs	r0, r3
 8002a6c:	f000 fcee 	bl	800344c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8002a70:	193b      	adds	r3, r7, r4
 8002a72:	2280      	movs	r2, #128	@ 0x80
 8002a74:	0192      	lsls	r2, r2, #6
 8002a76:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8002a78:	193b      	adds	r3, r7, r4
 8002a7a:	4a16      	ldr	r2, [pc, #88]	@ (8002ad4 <MX_GPIO_Init+0xdc>)
 8002a7c:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a7e:	193b      	adds	r3, r7, r4
 8002a80:	2200      	movs	r2, #0
 8002a82:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8002a84:	193b      	adds	r3, r7, r4
 8002a86:	4a14      	ldr	r2, [pc, #80]	@ (8002ad8 <MX_GPIO_Init+0xe0>)
 8002a88:	0019      	movs	r1, r3
 8002a8a:	0010      	movs	r0, r2
 8002a8c:	f000 fb6e 	bl	800316c <HAL_GPIO_Init>

  /*Configure GPIO pin : LD2_Pin */
  GPIO_InitStruct.Pin = LD2_Pin;
 8002a90:	0021      	movs	r1, r4
 8002a92:	187b      	adds	r3, r7, r1
 8002a94:	2220      	movs	r2, #32
 8002a96:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002a98:	187b      	adds	r3, r7, r1
 8002a9a:	2201      	movs	r2, #1
 8002a9c:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a9e:	187b      	adds	r3, r7, r1
 8002aa0:	2200      	movs	r2, #0
 8002aa2:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002aa4:	187b      	adds	r3, r7, r1
 8002aa6:	2200      	movs	r2, #0
 8002aa8:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 8002aaa:	187a      	adds	r2, r7, r1
 8002aac:	2390      	movs	r3, #144	@ 0x90
 8002aae:	05db      	lsls	r3, r3, #23
 8002ab0:	0011      	movs	r1, r2
 8002ab2:	0018      	movs	r0, r3
 8002ab4:	f000 fb5a 	bl	800316c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI4_15_IRQn, 0, 0);
 8002ab8:	2200      	movs	r2, #0
 8002aba:	2100      	movs	r1, #0
 8002abc:	2007      	movs	r0, #7
 8002abe:	f000 fadd 	bl	800307c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 8002ac2:	2007      	movs	r0, #7
 8002ac4:	f000 faef 	bl	80030a6 <HAL_NVIC_EnableIRQ>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 8002ac8:	46c0      	nop			@ (mov r8, r8)
 8002aca:	46bd      	mov	sp, r7
 8002acc:	b009      	add	sp, #36	@ 0x24
 8002ace:	bd90      	pop	{r4, r7, pc}
 8002ad0:	40021000 	.word	0x40021000
 8002ad4:	10210000 	.word	0x10210000
 8002ad8:	48000800 	.word	0x48000800

08002adc <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002adc:	b580      	push	{r7, lr}
 8002ade:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002ae0:	b672      	cpsid	i
}
 8002ae2:	46c0      	nop			@ (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002ae4:	46c0      	nop			@ (mov r8, r8)
 8002ae6:	e7fd      	b.n	8002ae4 <Error_Handler+0x8>

08002ae8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002ae8:	b580      	push	{r7, lr}
 8002aea:	b082      	sub	sp, #8
 8002aec:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002aee:	4b0f      	ldr	r3, [pc, #60]	@ (8002b2c <HAL_MspInit+0x44>)
 8002af0:	699a      	ldr	r2, [r3, #24]
 8002af2:	4b0e      	ldr	r3, [pc, #56]	@ (8002b2c <HAL_MspInit+0x44>)
 8002af4:	2101      	movs	r1, #1
 8002af6:	430a      	orrs	r2, r1
 8002af8:	619a      	str	r2, [r3, #24]
 8002afa:	4b0c      	ldr	r3, [pc, #48]	@ (8002b2c <HAL_MspInit+0x44>)
 8002afc:	699b      	ldr	r3, [r3, #24]
 8002afe:	2201      	movs	r2, #1
 8002b00:	4013      	ands	r3, r2
 8002b02:	607b      	str	r3, [r7, #4]
 8002b04:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002b06:	4b09      	ldr	r3, [pc, #36]	@ (8002b2c <HAL_MspInit+0x44>)
 8002b08:	69da      	ldr	r2, [r3, #28]
 8002b0a:	4b08      	ldr	r3, [pc, #32]	@ (8002b2c <HAL_MspInit+0x44>)
 8002b0c:	2180      	movs	r1, #128	@ 0x80
 8002b0e:	0549      	lsls	r1, r1, #21
 8002b10:	430a      	orrs	r2, r1
 8002b12:	61da      	str	r2, [r3, #28]
 8002b14:	4b05      	ldr	r3, [pc, #20]	@ (8002b2c <HAL_MspInit+0x44>)
 8002b16:	69da      	ldr	r2, [r3, #28]
 8002b18:	2380      	movs	r3, #128	@ 0x80
 8002b1a:	055b      	lsls	r3, r3, #21
 8002b1c:	4013      	ands	r3, r2
 8002b1e:	603b      	str	r3, [r7, #0]
 8002b20:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002b22:	46c0      	nop			@ (mov r8, r8)
 8002b24:	46bd      	mov	sp, r7
 8002b26:	b002      	add	sp, #8
 8002b28:	bd80      	pop	{r7, pc}
 8002b2a:	46c0      	nop			@ (mov r8, r8)
 8002b2c:	40021000 	.word	0x40021000

08002b30 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002b30:	b590      	push	{r4, r7, lr}
 8002b32:	b08b      	sub	sp, #44	@ 0x2c
 8002b34:	af00      	add	r7, sp, #0
 8002b36:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002b38:	2414      	movs	r4, #20
 8002b3a:	193b      	adds	r3, r7, r4
 8002b3c:	0018      	movs	r0, r3
 8002b3e:	2314      	movs	r3, #20
 8002b40:	001a      	movs	r2, r3
 8002b42:	2100      	movs	r1, #0
 8002b44:	f003 f8f4 	bl	8005d30 <memset>
  if(huart->Instance==USART2)
 8002b48:	687b      	ldr	r3, [r7, #4]
 8002b4a:	681b      	ldr	r3, [r3, #0]
 8002b4c:	4a20      	ldr	r2, [pc, #128]	@ (8002bd0 <HAL_UART_MspInit+0xa0>)
 8002b4e:	4293      	cmp	r3, r2
 8002b50:	d13a      	bne.n	8002bc8 <HAL_UART_MspInit+0x98>
  {
    /* USER CODE BEGIN USART2_MspInit 0 */

    /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8002b52:	4b20      	ldr	r3, [pc, #128]	@ (8002bd4 <HAL_UART_MspInit+0xa4>)
 8002b54:	69da      	ldr	r2, [r3, #28]
 8002b56:	4b1f      	ldr	r3, [pc, #124]	@ (8002bd4 <HAL_UART_MspInit+0xa4>)
 8002b58:	2180      	movs	r1, #128	@ 0x80
 8002b5a:	0289      	lsls	r1, r1, #10
 8002b5c:	430a      	orrs	r2, r1
 8002b5e:	61da      	str	r2, [r3, #28]
 8002b60:	4b1c      	ldr	r3, [pc, #112]	@ (8002bd4 <HAL_UART_MspInit+0xa4>)
 8002b62:	69da      	ldr	r2, [r3, #28]
 8002b64:	2380      	movs	r3, #128	@ 0x80
 8002b66:	029b      	lsls	r3, r3, #10
 8002b68:	4013      	ands	r3, r2
 8002b6a:	613b      	str	r3, [r7, #16]
 8002b6c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002b6e:	4b19      	ldr	r3, [pc, #100]	@ (8002bd4 <HAL_UART_MspInit+0xa4>)
 8002b70:	695a      	ldr	r2, [r3, #20]
 8002b72:	4b18      	ldr	r3, [pc, #96]	@ (8002bd4 <HAL_UART_MspInit+0xa4>)
 8002b74:	2180      	movs	r1, #128	@ 0x80
 8002b76:	0289      	lsls	r1, r1, #10
 8002b78:	430a      	orrs	r2, r1
 8002b7a:	615a      	str	r2, [r3, #20]
 8002b7c:	4b15      	ldr	r3, [pc, #84]	@ (8002bd4 <HAL_UART_MspInit+0xa4>)
 8002b7e:	695a      	ldr	r2, [r3, #20]
 8002b80:	2380      	movs	r3, #128	@ 0x80
 8002b82:	029b      	lsls	r3, r3, #10
 8002b84:	4013      	ands	r3, r2
 8002b86:	60fb      	str	r3, [r7, #12]
 8002b88:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 8002b8a:	0021      	movs	r1, r4
 8002b8c:	187b      	adds	r3, r7, r1
 8002b8e:	220c      	movs	r2, #12
 8002b90:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b92:	187b      	adds	r3, r7, r1
 8002b94:	2202      	movs	r2, #2
 8002b96:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b98:	187b      	adds	r3, r7, r1
 8002b9a:	2200      	movs	r2, #0
 8002b9c:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002b9e:	187b      	adds	r3, r7, r1
 8002ba0:	2200      	movs	r2, #0
 8002ba2:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 8002ba4:	187b      	adds	r3, r7, r1
 8002ba6:	2201      	movs	r2, #1
 8002ba8:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002baa:	187a      	adds	r2, r7, r1
 8002bac:	2390      	movs	r3, #144	@ 0x90
 8002bae:	05db      	lsls	r3, r3, #23
 8002bb0:	0011      	movs	r1, r2
 8002bb2:	0018      	movs	r0, r3
 8002bb4:	f000 fada 	bl	800316c <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8002bb8:	2200      	movs	r2, #0
 8002bba:	2100      	movs	r1, #0
 8002bbc:	201c      	movs	r0, #28
 8002bbe:	f000 fa5d 	bl	800307c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8002bc2:	201c      	movs	r0, #28
 8002bc4:	f000 fa6f 	bl	80030a6 <HAL_NVIC_EnableIRQ>

    /* USER CODE END USART2_MspInit 1 */

  }

}
 8002bc8:	46c0      	nop			@ (mov r8, r8)
 8002bca:	46bd      	mov	sp, r7
 8002bcc:	b00b      	add	sp, #44	@ 0x2c
 8002bce:	bd90      	pop	{r4, r7, pc}
 8002bd0:	40004400 	.word	0x40004400
 8002bd4:	40021000 	.word	0x40021000

08002bd8 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002bd8:	b580      	push	{r7, lr}
 8002bda:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002bdc:	46c0      	nop			@ (mov r8, r8)
 8002bde:	e7fd      	b.n	8002bdc <NMI_Handler+0x4>

08002be0 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002be0:	b580      	push	{r7, lr}
 8002be2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002be4:	46c0      	nop			@ (mov r8, r8)
 8002be6:	e7fd      	b.n	8002be4 <HardFault_Handler+0x4>

08002be8 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002be8:	b580      	push	{r7, lr}
 8002bea:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8002bec:	46c0      	nop			@ (mov r8, r8)
 8002bee:	46bd      	mov	sp, r7
 8002bf0:	bd80      	pop	{r7, pc}

08002bf2 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002bf2:	b580      	push	{r7, lr}
 8002bf4:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002bf6:	46c0      	nop			@ (mov r8, r8)
 8002bf8:	46bd      	mov	sp, r7
 8002bfa:	bd80      	pop	{r7, pc}

08002bfc <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002bfc:	b580      	push	{r7, lr}
 8002bfe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002c00:	f000 f950 	bl	8002ea4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002c04:	46c0      	nop			@ (mov r8, r8)
 8002c06:	46bd      	mov	sp, r7
 8002c08:	bd80      	pop	{r7, pc}

08002c0a <EXTI4_15_IRQHandler>:

/**
  * @brief This function handles EXTI line 4 to 15 interrupts.
  */
void EXTI4_15_IRQHandler(void)
{
 8002c0a:	b580      	push	{r7, lr}
 8002c0c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI4_15_IRQn 0 */

  /* USER CODE END EXTI4_15_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(B1_Pin);
 8002c0e:	2380      	movs	r3, #128	@ 0x80
 8002c10:	019b      	lsls	r3, r3, #6
 8002c12:	0018      	movs	r0, r3
 8002c14:	f000 fc52 	bl	80034bc <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_15_IRQn 1 */

  /* USER CODE END EXTI4_15_IRQn 1 */
}
 8002c18:	46c0      	nop			@ (mov r8, r8)
 8002c1a:	46bd      	mov	sp, r7
 8002c1c:	bd80      	pop	{r7, pc}
	...

08002c20 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8002c20:	b580      	push	{r7, lr}
 8002c22:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8002c24:	4b03      	ldr	r3, [pc, #12]	@ (8002c34 <USART2_IRQHandler+0x14>)
 8002c26:	0018      	movs	r0, r3
 8002c28:	f001 fb12 	bl	8004250 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8002c2c:	46c0      	nop			@ (mov r8, r8)
 8002c2e:	46bd      	mov	sp, r7
 8002c30:	bd80      	pop	{r7, pc}
 8002c32:	46c0      	nop			@ (mov r8, r8)
 8002c34:	200001f4 	.word	0x200001f4

08002c38 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002c38:	b580      	push	{r7, lr}
 8002c3a:	af00      	add	r7, sp, #0
  return 1;
 8002c3c:	2301      	movs	r3, #1
}
 8002c3e:	0018      	movs	r0, r3
 8002c40:	46bd      	mov	sp, r7
 8002c42:	bd80      	pop	{r7, pc}

08002c44 <_kill>:

int _kill(int pid, int sig)
{
 8002c44:	b580      	push	{r7, lr}
 8002c46:	b082      	sub	sp, #8
 8002c48:	af00      	add	r7, sp, #0
 8002c4a:	6078      	str	r0, [r7, #4]
 8002c4c:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8002c4e:	f003 f8c9 	bl	8005de4 <__errno>
 8002c52:	0003      	movs	r3, r0
 8002c54:	2216      	movs	r2, #22
 8002c56:	601a      	str	r2, [r3, #0]
  return -1;
 8002c58:	2301      	movs	r3, #1
 8002c5a:	425b      	negs	r3, r3
}
 8002c5c:	0018      	movs	r0, r3
 8002c5e:	46bd      	mov	sp, r7
 8002c60:	b002      	add	sp, #8
 8002c62:	bd80      	pop	{r7, pc}

08002c64 <_exit>:

void _exit (int status)
{
 8002c64:	b580      	push	{r7, lr}
 8002c66:	b082      	sub	sp, #8
 8002c68:	af00      	add	r7, sp, #0
 8002c6a:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002c6c:	2301      	movs	r3, #1
 8002c6e:	425a      	negs	r2, r3
 8002c70:	687b      	ldr	r3, [r7, #4]
 8002c72:	0011      	movs	r1, r2
 8002c74:	0018      	movs	r0, r3
 8002c76:	f7ff ffe5 	bl	8002c44 <_kill>
  while (1) {}    /* Make sure we hang here */
 8002c7a:	46c0      	nop			@ (mov r8, r8)
 8002c7c:	e7fd      	b.n	8002c7a <_exit+0x16>

08002c7e <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002c7e:	b580      	push	{r7, lr}
 8002c80:	b086      	sub	sp, #24
 8002c82:	af00      	add	r7, sp, #0
 8002c84:	60f8      	str	r0, [r7, #12]
 8002c86:	60b9      	str	r1, [r7, #8]
 8002c88:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c8a:	2300      	movs	r3, #0
 8002c8c:	617b      	str	r3, [r7, #20]
 8002c8e:	e00a      	b.n	8002ca6 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002c90:	f7ff fd12 	bl	80026b8 <__io_getchar>
 8002c94:	0001      	movs	r1, r0
 8002c96:	68bb      	ldr	r3, [r7, #8]
 8002c98:	1c5a      	adds	r2, r3, #1
 8002c9a:	60ba      	str	r2, [r7, #8]
 8002c9c:	b2ca      	uxtb	r2, r1
 8002c9e:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002ca0:	697b      	ldr	r3, [r7, #20]
 8002ca2:	3301      	adds	r3, #1
 8002ca4:	617b      	str	r3, [r7, #20]
 8002ca6:	697a      	ldr	r2, [r7, #20]
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	429a      	cmp	r2, r3
 8002cac:	dbf0      	blt.n	8002c90 <_read+0x12>
  }

  return len;
 8002cae:	687b      	ldr	r3, [r7, #4]
}
 8002cb0:	0018      	movs	r0, r3
 8002cb2:	46bd      	mov	sp, r7
 8002cb4:	b006      	add	sp, #24
 8002cb6:	bd80      	pop	{r7, pc}

08002cb8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002cb8:	b580      	push	{r7, lr}
 8002cba:	b086      	sub	sp, #24
 8002cbc:	af00      	add	r7, sp, #0
 8002cbe:	60f8      	str	r0, [r7, #12]
 8002cc0:	60b9      	str	r1, [r7, #8]
 8002cc2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002cc4:	2300      	movs	r3, #0
 8002cc6:	617b      	str	r3, [r7, #20]
 8002cc8:	e009      	b.n	8002cde <_write+0x26>
  {
    __io_putchar(*ptr++);
 8002cca:	68bb      	ldr	r3, [r7, #8]
 8002ccc:	1c5a      	adds	r2, r3, #1
 8002cce:	60ba      	str	r2, [r7, #8]
 8002cd0:	781b      	ldrb	r3, [r3, #0]
 8002cd2:	0018      	movs	r0, r3
 8002cd4:	f7ff fcde 	bl	8002694 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002cd8:	697b      	ldr	r3, [r7, #20]
 8002cda:	3301      	adds	r3, #1
 8002cdc:	617b      	str	r3, [r7, #20]
 8002cde:	697a      	ldr	r2, [r7, #20]
 8002ce0:	687b      	ldr	r3, [r7, #4]
 8002ce2:	429a      	cmp	r2, r3
 8002ce4:	dbf1      	blt.n	8002cca <_write+0x12>
  }
  return len;
 8002ce6:	687b      	ldr	r3, [r7, #4]
}
 8002ce8:	0018      	movs	r0, r3
 8002cea:	46bd      	mov	sp, r7
 8002cec:	b006      	add	sp, #24
 8002cee:	bd80      	pop	{r7, pc}

08002cf0 <_close>:

int _close(int file)
{
 8002cf0:	b580      	push	{r7, lr}
 8002cf2:	b082      	sub	sp, #8
 8002cf4:	af00      	add	r7, sp, #0
 8002cf6:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8002cf8:	2301      	movs	r3, #1
 8002cfa:	425b      	negs	r3, r3
}
 8002cfc:	0018      	movs	r0, r3
 8002cfe:	46bd      	mov	sp, r7
 8002d00:	b002      	add	sp, #8
 8002d02:	bd80      	pop	{r7, pc}

08002d04 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002d04:	b580      	push	{r7, lr}
 8002d06:	b082      	sub	sp, #8
 8002d08:	af00      	add	r7, sp, #0
 8002d0a:	6078      	str	r0, [r7, #4]
 8002d0c:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002d0e:	683b      	ldr	r3, [r7, #0]
 8002d10:	2280      	movs	r2, #128	@ 0x80
 8002d12:	0192      	lsls	r2, r2, #6
 8002d14:	605a      	str	r2, [r3, #4]
  return 0;
 8002d16:	2300      	movs	r3, #0
}
 8002d18:	0018      	movs	r0, r3
 8002d1a:	46bd      	mov	sp, r7
 8002d1c:	b002      	add	sp, #8
 8002d1e:	bd80      	pop	{r7, pc}

08002d20 <_isatty>:

int _isatty(int file)
{
 8002d20:	b580      	push	{r7, lr}
 8002d22:	b082      	sub	sp, #8
 8002d24:	af00      	add	r7, sp, #0
 8002d26:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002d28:	2301      	movs	r3, #1
}
 8002d2a:	0018      	movs	r0, r3
 8002d2c:	46bd      	mov	sp, r7
 8002d2e:	b002      	add	sp, #8
 8002d30:	bd80      	pop	{r7, pc}

08002d32 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002d32:	b580      	push	{r7, lr}
 8002d34:	b084      	sub	sp, #16
 8002d36:	af00      	add	r7, sp, #0
 8002d38:	60f8      	str	r0, [r7, #12]
 8002d3a:	60b9      	str	r1, [r7, #8]
 8002d3c:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002d3e:	2300      	movs	r3, #0
}
 8002d40:	0018      	movs	r0, r3
 8002d42:	46bd      	mov	sp, r7
 8002d44:	b004      	add	sp, #16
 8002d46:	bd80      	pop	{r7, pc}

08002d48 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002d48:	b580      	push	{r7, lr}
 8002d4a:	b086      	sub	sp, #24
 8002d4c:	af00      	add	r7, sp, #0
 8002d4e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002d50:	4a14      	ldr	r2, [pc, #80]	@ (8002da4 <_sbrk+0x5c>)
 8002d52:	4b15      	ldr	r3, [pc, #84]	@ (8002da8 <_sbrk+0x60>)
 8002d54:	1ad3      	subs	r3, r2, r3
 8002d56:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002d58:	697b      	ldr	r3, [r7, #20]
 8002d5a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002d5c:	4b13      	ldr	r3, [pc, #76]	@ (8002dac <_sbrk+0x64>)
 8002d5e:	681b      	ldr	r3, [r3, #0]
 8002d60:	2b00      	cmp	r3, #0
 8002d62:	d102      	bne.n	8002d6a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002d64:	4b11      	ldr	r3, [pc, #68]	@ (8002dac <_sbrk+0x64>)
 8002d66:	4a12      	ldr	r2, [pc, #72]	@ (8002db0 <_sbrk+0x68>)
 8002d68:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002d6a:	4b10      	ldr	r3, [pc, #64]	@ (8002dac <_sbrk+0x64>)
 8002d6c:	681a      	ldr	r2, [r3, #0]
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	18d3      	adds	r3, r2, r3
 8002d72:	693a      	ldr	r2, [r7, #16]
 8002d74:	429a      	cmp	r2, r3
 8002d76:	d207      	bcs.n	8002d88 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002d78:	f003 f834 	bl	8005de4 <__errno>
 8002d7c:	0003      	movs	r3, r0
 8002d7e:	220c      	movs	r2, #12
 8002d80:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002d82:	2301      	movs	r3, #1
 8002d84:	425b      	negs	r3, r3
 8002d86:	e009      	b.n	8002d9c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002d88:	4b08      	ldr	r3, [pc, #32]	@ (8002dac <_sbrk+0x64>)
 8002d8a:	681b      	ldr	r3, [r3, #0]
 8002d8c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002d8e:	4b07      	ldr	r3, [pc, #28]	@ (8002dac <_sbrk+0x64>)
 8002d90:	681a      	ldr	r2, [r3, #0]
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	18d2      	adds	r2, r2, r3
 8002d96:	4b05      	ldr	r3, [pc, #20]	@ (8002dac <_sbrk+0x64>)
 8002d98:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8002d9a:	68fb      	ldr	r3, [r7, #12]
}
 8002d9c:	0018      	movs	r0, r3
 8002d9e:	46bd      	mov	sp, r7
 8002da0:	b006      	add	sp, #24
 8002da2:	bd80      	pop	{r7, pc}
 8002da4:	20002000 	.word	0x20002000
 8002da8:	00000400 	.word	0x00000400
 8002dac:	200002a8 	.word	0x200002a8
 8002db0:	20000400 	.word	0x20000400

08002db4 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002db4:	b580      	push	{r7, lr}
 8002db6:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8002db8:	46c0      	nop			@ (mov r8, r8)
 8002dba:	46bd      	mov	sp, r7
 8002dbc:	bd80      	pop	{r7, pc}
	...

08002dc0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002dc0:	480d      	ldr	r0, [pc, #52]	@ (8002df8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8002dc2:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002dc4:	480d      	ldr	r0, [pc, #52]	@ (8002dfc <LoopForever+0x6>)
  ldr r1, =_edata
 8002dc6:	490e      	ldr	r1, [pc, #56]	@ (8002e00 <LoopForever+0xa>)
  ldr r2, =_sidata
 8002dc8:	4a0e      	ldr	r2, [pc, #56]	@ (8002e04 <LoopForever+0xe>)
  movs r3, #0
 8002dca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002dcc:	e002      	b.n	8002dd4 <LoopCopyDataInit>

08002dce <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002dce:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002dd0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002dd2:	3304      	adds	r3, #4

08002dd4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002dd4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002dd6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002dd8:	d3f9      	bcc.n	8002dce <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002dda:	4a0b      	ldr	r2, [pc, #44]	@ (8002e08 <LoopForever+0x12>)
  ldr r4, =_ebss
 8002ddc:	4c0b      	ldr	r4, [pc, #44]	@ (8002e0c <LoopForever+0x16>)
  movs r3, #0
 8002dde:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002de0:	e001      	b.n	8002de6 <LoopFillZerobss>

08002de2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002de2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002de4:	3204      	adds	r2, #4

08002de6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002de6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002de8:	d3fb      	bcc.n	8002de2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8002dea:	f7ff ffe3 	bl	8002db4 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 8002dee:	f002 ffff 	bl	8005df0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8002df2:	f7ff fce5 	bl	80027c0 <main>

08002df6 <LoopForever>:

LoopForever:
    b LoopForever
 8002df6:	e7fe      	b.n	8002df6 <LoopForever>
  ldr   r0, =_estack
 8002df8:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 8002dfc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002e00:	200001d8 	.word	0x200001d8
  ldr r2, =_sidata
 8002e04:	0800a71c 	.word	0x0800a71c
  ldr r2, =_sbss
 8002e08:	200001d8 	.word	0x200001d8
  ldr r4, =_ebss
 8002e0c:	200003fc 	.word	0x200003fc

08002e10 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002e10:	e7fe      	b.n	8002e10 <ADC1_IRQHandler>
	...

08002e14 <HAL_Init>:
  *       In the default implementation,Systick is used as source of time base.
  *       The tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002e14:	b580      	push	{r7, lr}
 8002e16:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch */ 
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002e18:	4b07      	ldr	r3, [pc, #28]	@ (8002e38 <HAL_Init+0x24>)
 8002e1a:	681a      	ldr	r2, [r3, #0]
 8002e1c:	4b06      	ldr	r3, [pc, #24]	@ (8002e38 <HAL_Init+0x24>)
 8002e1e:	2110      	movs	r1, #16
 8002e20:	430a      	orrs	r2, r1
 8002e22:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */

  HAL_InitTick(TICK_INT_PRIORITY);
 8002e24:	2000      	movs	r0, #0
 8002e26:	f000 f809 	bl	8002e3c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8002e2a:	f7ff fe5d 	bl	8002ae8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8002e2e:	2300      	movs	r3, #0
}
 8002e30:	0018      	movs	r0, r3
 8002e32:	46bd      	mov	sp, r7
 8002e34:	bd80      	pop	{r7, pc}
 8002e36:	46c0      	nop			@ (mov r8, r8)
 8002e38:	40022000 	.word	0x40022000

08002e3c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002e3c:	b590      	push	{r4, r7, lr}
 8002e3e:	b083      	sub	sp, #12
 8002e40:	af00      	add	r7, sp, #0
 8002e42:	6078      	str	r0, [r7, #4]
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002e44:	4b14      	ldr	r3, [pc, #80]	@ (8002e98 <HAL_InitTick+0x5c>)
 8002e46:	681c      	ldr	r4, [r3, #0]
 8002e48:	4b14      	ldr	r3, [pc, #80]	@ (8002e9c <HAL_InitTick+0x60>)
 8002e4a:	781b      	ldrb	r3, [r3, #0]
 8002e4c:	0019      	movs	r1, r3
 8002e4e:	23fa      	movs	r3, #250	@ 0xfa
 8002e50:	0098      	lsls	r0, r3, #2
 8002e52:	f7fd f975 	bl	8000140 <__udivsi3>
 8002e56:	0003      	movs	r3, r0
 8002e58:	0019      	movs	r1, r3
 8002e5a:	0020      	movs	r0, r4
 8002e5c:	f7fd f970 	bl	8000140 <__udivsi3>
 8002e60:	0003      	movs	r3, r0
 8002e62:	0018      	movs	r0, r3
 8002e64:	f000 f92f 	bl	80030c6 <HAL_SYSTICK_Config>
 8002e68:	1e03      	subs	r3, r0, #0
 8002e6a:	d001      	beq.n	8002e70 <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 8002e6c:	2301      	movs	r3, #1
 8002e6e:	e00f      	b.n	8002e90 <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002e70:	687b      	ldr	r3, [r7, #4]
 8002e72:	2b03      	cmp	r3, #3
 8002e74:	d80b      	bhi.n	8002e8e <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002e76:	6879      	ldr	r1, [r7, #4]
 8002e78:	2301      	movs	r3, #1
 8002e7a:	425b      	negs	r3, r3
 8002e7c:	2200      	movs	r2, #0
 8002e7e:	0018      	movs	r0, r3
 8002e80:	f000 f8fc 	bl	800307c <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002e84:	4b06      	ldr	r3, [pc, #24]	@ (8002ea0 <HAL_InitTick+0x64>)
 8002e86:	687a      	ldr	r2, [r7, #4]
 8002e88:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
 8002e8a:	2300      	movs	r3, #0
 8002e8c:	e000      	b.n	8002e90 <HAL_InitTick+0x54>
    return HAL_ERROR;
 8002e8e:	2301      	movs	r3, #1
}
 8002e90:	0018      	movs	r0, r3
 8002e92:	46bd      	mov	sp, r7
 8002e94:	b003      	add	sp, #12
 8002e96:	bd90      	pop	{r4, r7, pc}
 8002e98:	20000004 	.word	0x20000004
 8002e9c:	2000000c 	.word	0x2000000c
 8002ea0:	20000008 	.word	0x20000008

08002ea4 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002ea4:	b580      	push	{r7, lr}
 8002ea6:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002ea8:	4b05      	ldr	r3, [pc, #20]	@ (8002ec0 <HAL_IncTick+0x1c>)
 8002eaa:	781b      	ldrb	r3, [r3, #0]
 8002eac:	001a      	movs	r2, r3
 8002eae:	4b05      	ldr	r3, [pc, #20]	@ (8002ec4 <HAL_IncTick+0x20>)
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	18d2      	adds	r2, r2, r3
 8002eb4:	4b03      	ldr	r3, [pc, #12]	@ (8002ec4 <HAL_IncTick+0x20>)
 8002eb6:	601a      	str	r2, [r3, #0]
}
 8002eb8:	46c0      	nop			@ (mov r8, r8)
 8002eba:	46bd      	mov	sp, r7
 8002ebc:	bd80      	pop	{r7, pc}
 8002ebe:	46c0      	nop			@ (mov r8, r8)
 8002ec0:	2000000c 	.word	0x2000000c
 8002ec4:	200002ac 	.word	0x200002ac

08002ec8 <HAL_GetTick>:
  * @note   This function is declared as __weak  to be overwritten  in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002ec8:	b580      	push	{r7, lr}
 8002eca:	af00      	add	r7, sp, #0
  return uwTick;
 8002ecc:	4b02      	ldr	r3, [pc, #8]	@ (8002ed8 <HAL_GetTick+0x10>)
 8002ece:	681b      	ldr	r3, [r3, #0]
}
 8002ed0:	0018      	movs	r0, r3
 8002ed2:	46bd      	mov	sp, r7
 8002ed4:	bd80      	pop	{r7, pc}
 8002ed6:	46c0      	nop			@ (mov r8, r8)
 8002ed8:	200002ac 	.word	0x200002ac

08002edc <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002edc:	b580      	push	{r7, lr}
 8002ede:	b084      	sub	sp, #16
 8002ee0:	af00      	add	r7, sp, #0
 8002ee2:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8002ee4:	f7ff fff0 	bl	8002ec8 <HAL_GetTick>
 8002ee8:	0003      	movs	r3, r0
 8002eea:	60bb      	str	r3, [r7, #8]
  uint32_t wait = Delay;
 8002eec:	687b      	ldr	r3, [r7, #4]
 8002eee:	60fb      	str	r3, [r7, #12]
  
  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002ef0:	68fb      	ldr	r3, [r7, #12]
 8002ef2:	3301      	adds	r3, #1
 8002ef4:	d005      	beq.n	8002f02 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8002ef6:	4b0a      	ldr	r3, [pc, #40]	@ (8002f20 <HAL_Delay+0x44>)
 8002ef8:	781b      	ldrb	r3, [r3, #0]
 8002efa:	001a      	movs	r2, r3
 8002efc:	68fb      	ldr	r3, [r7, #12]
 8002efe:	189b      	adds	r3, r3, r2
 8002f00:	60fb      	str	r3, [r7, #12]
  }
  
  while((HAL_GetTick() - tickstart) < wait)
 8002f02:	46c0      	nop			@ (mov r8, r8)
 8002f04:	f7ff ffe0 	bl	8002ec8 <HAL_GetTick>
 8002f08:	0002      	movs	r2, r0
 8002f0a:	68bb      	ldr	r3, [r7, #8]
 8002f0c:	1ad3      	subs	r3, r2, r3
 8002f0e:	68fa      	ldr	r2, [r7, #12]
 8002f10:	429a      	cmp	r2, r3
 8002f12:	d8f7      	bhi.n	8002f04 <HAL_Delay+0x28>
  {
  }
}
 8002f14:	46c0      	nop			@ (mov r8, r8)
 8002f16:	46c0      	nop			@ (mov r8, r8)
 8002f18:	46bd      	mov	sp, r7
 8002f1a:	b004      	add	sp, #16
 8002f1c:	bd80      	pop	{r7, pc}
 8002f1e:	46c0      	nop			@ (mov r8, r8)
 8002f20:	2000000c 	.word	0x2000000c

08002f24 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8002f24:	b580      	push	{r7, lr}
 8002f26:	b082      	sub	sp, #8
 8002f28:	af00      	add	r7, sp, #0
 8002f2a:	0002      	movs	r2, r0
 8002f2c:	1dfb      	adds	r3, r7, #7
 8002f2e:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002f30:	1dfb      	adds	r3, r7, #7
 8002f32:	781b      	ldrb	r3, [r3, #0]
 8002f34:	2b7f      	cmp	r3, #127	@ 0x7f
 8002f36:	d809      	bhi.n	8002f4c <__NVIC_EnableIRQ+0x28>
  {
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002f38:	1dfb      	adds	r3, r7, #7
 8002f3a:	781b      	ldrb	r3, [r3, #0]
 8002f3c:	001a      	movs	r2, r3
 8002f3e:	231f      	movs	r3, #31
 8002f40:	401a      	ands	r2, r3
 8002f42:	4b04      	ldr	r3, [pc, #16]	@ (8002f54 <__NVIC_EnableIRQ+0x30>)
 8002f44:	2101      	movs	r1, #1
 8002f46:	4091      	lsls	r1, r2
 8002f48:	000a      	movs	r2, r1
 8002f4a:	601a      	str	r2, [r3, #0]
  }
}
 8002f4c:	46c0      	nop			@ (mov r8, r8)
 8002f4e:	46bd      	mov	sp, r7
 8002f50:	b002      	add	sp, #8
 8002f52:	bd80      	pop	{r7, pc}
 8002f54:	e000e100 	.word	0xe000e100

08002f58 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8002f58:	b590      	push	{r4, r7, lr}
 8002f5a:	b083      	sub	sp, #12
 8002f5c:	af00      	add	r7, sp, #0
 8002f5e:	0002      	movs	r2, r0
 8002f60:	6039      	str	r1, [r7, #0]
 8002f62:	1dfb      	adds	r3, r7, #7
 8002f64:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002f66:	1dfb      	adds	r3, r7, #7
 8002f68:	781b      	ldrb	r3, [r3, #0]
 8002f6a:	2b7f      	cmp	r3, #127	@ 0x7f
 8002f6c:	d828      	bhi.n	8002fc0 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002f6e:	4a2f      	ldr	r2, [pc, #188]	@ (800302c <__NVIC_SetPriority+0xd4>)
 8002f70:	1dfb      	adds	r3, r7, #7
 8002f72:	781b      	ldrb	r3, [r3, #0]
 8002f74:	b25b      	sxtb	r3, r3
 8002f76:	089b      	lsrs	r3, r3, #2
 8002f78:	33c0      	adds	r3, #192	@ 0xc0
 8002f7a:	009b      	lsls	r3, r3, #2
 8002f7c:	589b      	ldr	r3, [r3, r2]
 8002f7e:	1dfa      	adds	r2, r7, #7
 8002f80:	7812      	ldrb	r2, [r2, #0]
 8002f82:	0011      	movs	r1, r2
 8002f84:	2203      	movs	r2, #3
 8002f86:	400a      	ands	r2, r1
 8002f88:	00d2      	lsls	r2, r2, #3
 8002f8a:	21ff      	movs	r1, #255	@ 0xff
 8002f8c:	4091      	lsls	r1, r2
 8002f8e:	000a      	movs	r2, r1
 8002f90:	43d2      	mvns	r2, r2
 8002f92:	401a      	ands	r2, r3
 8002f94:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002f96:	683b      	ldr	r3, [r7, #0]
 8002f98:	019b      	lsls	r3, r3, #6
 8002f9a:	22ff      	movs	r2, #255	@ 0xff
 8002f9c:	401a      	ands	r2, r3
 8002f9e:	1dfb      	adds	r3, r7, #7
 8002fa0:	781b      	ldrb	r3, [r3, #0]
 8002fa2:	0018      	movs	r0, r3
 8002fa4:	2303      	movs	r3, #3
 8002fa6:	4003      	ands	r3, r0
 8002fa8:	00db      	lsls	r3, r3, #3
 8002faa:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002fac:	481f      	ldr	r0, [pc, #124]	@ (800302c <__NVIC_SetPriority+0xd4>)
 8002fae:	1dfb      	adds	r3, r7, #7
 8002fb0:	781b      	ldrb	r3, [r3, #0]
 8002fb2:	b25b      	sxtb	r3, r3
 8002fb4:	089b      	lsrs	r3, r3, #2
 8002fb6:	430a      	orrs	r2, r1
 8002fb8:	33c0      	adds	r3, #192	@ 0xc0
 8002fba:	009b      	lsls	r3, r3, #2
 8002fbc:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8002fbe:	e031      	b.n	8003024 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002fc0:	4a1b      	ldr	r2, [pc, #108]	@ (8003030 <__NVIC_SetPriority+0xd8>)
 8002fc2:	1dfb      	adds	r3, r7, #7
 8002fc4:	781b      	ldrb	r3, [r3, #0]
 8002fc6:	0019      	movs	r1, r3
 8002fc8:	230f      	movs	r3, #15
 8002fca:	400b      	ands	r3, r1
 8002fcc:	3b08      	subs	r3, #8
 8002fce:	089b      	lsrs	r3, r3, #2
 8002fd0:	3306      	adds	r3, #6
 8002fd2:	009b      	lsls	r3, r3, #2
 8002fd4:	18d3      	adds	r3, r2, r3
 8002fd6:	3304      	adds	r3, #4
 8002fd8:	681b      	ldr	r3, [r3, #0]
 8002fda:	1dfa      	adds	r2, r7, #7
 8002fdc:	7812      	ldrb	r2, [r2, #0]
 8002fde:	0011      	movs	r1, r2
 8002fe0:	2203      	movs	r2, #3
 8002fe2:	400a      	ands	r2, r1
 8002fe4:	00d2      	lsls	r2, r2, #3
 8002fe6:	21ff      	movs	r1, #255	@ 0xff
 8002fe8:	4091      	lsls	r1, r2
 8002fea:	000a      	movs	r2, r1
 8002fec:	43d2      	mvns	r2, r2
 8002fee:	401a      	ands	r2, r3
 8002ff0:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002ff2:	683b      	ldr	r3, [r7, #0]
 8002ff4:	019b      	lsls	r3, r3, #6
 8002ff6:	22ff      	movs	r2, #255	@ 0xff
 8002ff8:	401a      	ands	r2, r3
 8002ffa:	1dfb      	adds	r3, r7, #7
 8002ffc:	781b      	ldrb	r3, [r3, #0]
 8002ffe:	0018      	movs	r0, r3
 8003000:	2303      	movs	r3, #3
 8003002:	4003      	ands	r3, r0
 8003004:	00db      	lsls	r3, r3, #3
 8003006:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003008:	4809      	ldr	r0, [pc, #36]	@ (8003030 <__NVIC_SetPriority+0xd8>)
 800300a:	1dfb      	adds	r3, r7, #7
 800300c:	781b      	ldrb	r3, [r3, #0]
 800300e:	001c      	movs	r4, r3
 8003010:	230f      	movs	r3, #15
 8003012:	4023      	ands	r3, r4
 8003014:	3b08      	subs	r3, #8
 8003016:	089b      	lsrs	r3, r3, #2
 8003018:	430a      	orrs	r2, r1
 800301a:	3306      	adds	r3, #6
 800301c:	009b      	lsls	r3, r3, #2
 800301e:	18c3      	adds	r3, r0, r3
 8003020:	3304      	adds	r3, #4
 8003022:	601a      	str	r2, [r3, #0]
}
 8003024:	46c0      	nop			@ (mov r8, r8)
 8003026:	46bd      	mov	sp, r7
 8003028:	b003      	add	sp, #12
 800302a:	bd90      	pop	{r4, r7, pc}
 800302c:	e000e100 	.word	0xe000e100
 8003030:	e000ed00 	.word	0xe000ed00

08003034 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8003034:	b580      	push	{r7, lr}
 8003036:	b082      	sub	sp, #8
 8003038:	af00      	add	r7, sp, #0
 800303a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800303c:	687b      	ldr	r3, [r7, #4]
 800303e:	1e5a      	subs	r2, r3, #1
 8003040:	2380      	movs	r3, #128	@ 0x80
 8003042:	045b      	lsls	r3, r3, #17
 8003044:	429a      	cmp	r2, r3
 8003046:	d301      	bcc.n	800304c <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 8003048:	2301      	movs	r3, #1
 800304a:	e010      	b.n	800306e <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800304c:	4b0a      	ldr	r3, [pc, #40]	@ (8003078 <SysTick_Config+0x44>)
 800304e:	687a      	ldr	r2, [r7, #4]
 8003050:	3a01      	subs	r2, #1
 8003052:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8003054:	2301      	movs	r3, #1
 8003056:	425b      	negs	r3, r3
 8003058:	2103      	movs	r1, #3
 800305a:	0018      	movs	r0, r3
 800305c:	f7ff ff7c 	bl	8002f58 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003060:	4b05      	ldr	r3, [pc, #20]	@ (8003078 <SysTick_Config+0x44>)
 8003062:	2200      	movs	r2, #0
 8003064:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003066:	4b04      	ldr	r3, [pc, #16]	@ (8003078 <SysTick_Config+0x44>)
 8003068:	2207      	movs	r2, #7
 800306a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 800306c:	2300      	movs	r3, #0
}
 800306e:	0018      	movs	r0, r3
 8003070:	46bd      	mov	sp, r7
 8003072:	b002      	add	sp, #8
 8003074:	bd80      	pop	{r7, pc}
 8003076:	46c0      	nop			@ (mov r8, r8)
 8003078:	e000e010 	.word	0xe000e010

0800307c <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800307c:	b580      	push	{r7, lr}
 800307e:	b084      	sub	sp, #16
 8003080:	af00      	add	r7, sp, #0
 8003082:	60b9      	str	r1, [r7, #8]
 8003084:	607a      	str	r2, [r7, #4]
 8003086:	210f      	movs	r1, #15
 8003088:	187b      	adds	r3, r7, r1
 800308a:	1c02      	adds	r2, r0, #0
 800308c:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 800308e:	68ba      	ldr	r2, [r7, #8]
 8003090:	187b      	adds	r3, r7, r1
 8003092:	781b      	ldrb	r3, [r3, #0]
 8003094:	b25b      	sxtb	r3, r3
 8003096:	0011      	movs	r1, r2
 8003098:	0018      	movs	r0, r3
 800309a:	f7ff ff5d 	bl	8002f58 <__NVIC_SetPriority>
}
 800309e:	46c0      	nop			@ (mov r8, r8)
 80030a0:	46bd      	mov	sp, r7
 80030a2:	b004      	add	sp, #16
 80030a4:	bd80      	pop	{r7, pc}

080030a6 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f0xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80030a6:	b580      	push	{r7, lr}
 80030a8:	b082      	sub	sp, #8
 80030aa:	af00      	add	r7, sp, #0
 80030ac:	0002      	movs	r2, r0
 80030ae:	1dfb      	adds	r3, r7, #7
 80030b0:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80030b2:	1dfb      	adds	r3, r7, #7
 80030b4:	781b      	ldrb	r3, [r3, #0]
 80030b6:	b25b      	sxtb	r3, r3
 80030b8:	0018      	movs	r0, r3
 80030ba:	f7ff ff33 	bl	8002f24 <__NVIC_EnableIRQ>
}
 80030be:	46c0      	nop			@ (mov r8, r8)
 80030c0:	46bd      	mov	sp, r7
 80030c2:	b002      	add	sp, #8
 80030c4:	bd80      	pop	{r7, pc}

080030c6 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80030c6:	b580      	push	{r7, lr}
 80030c8:	b082      	sub	sp, #8
 80030ca:	af00      	add	r7, sp, #0
 80030cc:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80030ce:	687b      	ldr	r3, [r7, #4]
 80030d0:	0018      	movs	r0, r3
 80030d2:	f7ff ffaf 	bl	8003034 <SysTick_Config>
 80030d6:	0003      	movs	r3, r0
}
 80030d8:	0018      	movs	r0, r3
 80030da:	46bd      	mov	sp, r7
 80030dc:	b002      	add	sp, #8
 80030de:	bd80      	pop	{r7, pc}

080030e0 <HAL_DMA_Abort_IT>:
  * @param  hdma  pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{  
 80030e0:	b580      	push	{r7, lr}
 80030e2:	b084      	sub	sp, #16
 80030e4:	af00      	add	r7, sp, #0
 80030e6:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80030e8:	210f      	movs	r1, #15
 80030ea:	187b      	adds	r3, r7, r1
 80030ec:	2200      	movs	r2, #0
 80030ee:	701a      	strb	r2, [r3, #0]
  
  if(HAL_DMA_STATE_BUSY != hdma->State)
 80030f0:	687b      	ldr	r3, [r7, #4]
 80030f2:	2221      	movs	r2, #33	@ 0x21
 80030f4:	5c9b      	ldrb	r3, [r3, r2]
 80030f6:	b2db      	uxtb	r3, r3
 80030f8:	2b02      	cmp	r3, #2
 80030fa:	d006      	beq.n	800310a <HAL_DMA_Abort_IT+0x2a>
  {
    /* no transfer ongoing */
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	2204      	movs	r2, #4
 8003100:	639a      	str	r2, [r3, #56]	@ 0x38
        
    status = HAL_ERROR;
 8003102:	187b      	adds	r3, r7, r1
 8003104:	2201      	movs	r2, #1
 8003106:	701a      	strb	r2, [r3, #0]
 8003108:	e028      	b.n	800315c <HAL_DMA_Abort_IT+0x7c>
  }
  else
  { 
  
    /* Disable DMA IT */
    hdma->Instance->CCR &= ~(DMA_IT_TC | DMA_IT_HT | DMA_IT_TE);
 800310a:	687b      	ldr	r3, [r7, #4]
 800310c:	681b      	ldr	r3, [r3, #0]
 800310e:	681a      	ldr	r2, [r3, #0]
 8003110:	687b      	ldr	r3, [r7, #4]
 8003112:	681b      	ldr	r3, [r3, #0]
 8003114:	210e      	movs	r1, #14
 8003116:	438a      	bics	r2, r1
 8003118:	601a      	str	r2, [r3, #0]
    
    /* Disable the channel */
    hdma->Instance->CCR &= ~DMA_CCR_EN;
 800311a:	687b      	ldr	r3, [r7, #4]
 800311c:	681b      	ldr	r3, [r3, #0]
 800311e:	681a      	ldr	r2, [r3, #0]
 8003120:	687b      	ldr	r3, [r7, #4]
 8003122:	681b      	ldr	r3, [r3, #0]
 8003124:	2101      	movs	r1, #1
 8003126:	438a      	bics	r2, r1
 8003128:	601a      	str	r2, [r3, #0]
    
    /* Clear all flags */
    hdma->DmaBaseAddress->IFCR = DMA_FLAG_GL1 << hdma->ChannelIndex;
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003132:	2101      	movs	r1, #1
 8003134:	4091      	lsls	r1, r2
 8003136:	000a      	movs	r2, r1
 8003138:	605a      	str	r2, [r3, #4]
    
    /* Change the DMA state */
    hdma->State = HAL_DMA_STATE_READY;
 800313a:	687b      	ldr	r3, [r7, #4]
 800313c:	2221      	movs	r2, #33	@ 0x21
 800313e:	2101      	movs	r1, #1
 8003140:	5499      	strb	r1, [r3, r2]
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8003142:	687b      	ldr	r3, [r7, #4]
 8003144:	2220      	movs	r2, #32
 8003146:	2100      	movs	r1, #0
 8003148:	5499      	strb	r1, [r3, r2]
    
    /* Call User Abort callback */ 
    if(hdma->XferAbortCallback != NULL)
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800314e:	2b00      	cmp	r3, #0
 8003150:	d004      	beq.n	800315c <HAL_DMA_Abort_IT+0x7c>
    {
      hdma->XferAbortCallback(hdma);
 8003152:	687b      	ldr	r3, [r7, #4]
 8003154:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003156:	687a      	ldr	r2, [r7, #4]
 8003158:	0010      	movs	r0, r2
 800315a:	4798      	blx	r3
    } 
  }
  return status;
 800315c:	230f      	movs	r3, #15
 800315e:	18fb      	adds	r3, r7, r3
 8003160:	781b      	ldrb	r3, [r3, #0]
}
 8003162:	0018      	movs	r0, r3
 8003164:	46bd      	mov	sp, r7
 8003166:	b004      	add	sp, #16
 8003168:	bd80      	pop	{r7, pc}
	...

0800316c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{ 
 800316c:	b580      	push	{r7, lr}
 800316e:	b086      	sub	sp, #24
 8003170:	af00      	add	r7, sp, #0
 8003172:	6078      	str	r0, [r7, #4]
 8003174:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 8003176:	2300      	movs	r3, #0
 8003178:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 800317a:	e14f      	b.n	800341c <HAL_GPIO_Init+0x2b0>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 800317c:	683b      	ldr	r3, [r7, #0]
 800317e:	681b      	ldr	r3, [r3, #0]
 8003180:	2101      	movs	r1, #1
 8003182:	697a      	ldr	r2, [r7, #20]
 8003184:	4091      	lsls	r1, r2
 8003186:	000a      	movs	r2, r1
 8003188:	4013      	ands	r3, r2
 800318a:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 800318c:	68fb      	ldr	r3, [r7, #12]
 800318e:	2b00      	cmp	r3, #0
 8003190:	d100      	bne.n	8003194 <HAL_GPIO_Init+0x28>
 8003192:	e140      	b.n	8003416 <HAL_GPIO_Init+0x2aa>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003194:	683b      	ldr	r3, [r7, #0]
 8003196:	685b      	ldr	r3, [r3, #4]
 8003198:	2b02      	cmp	r3, #2
 800319a:	d003      	beq.n	80031a4 <HAL_GPIO_Init+0x38>
 800319c:	683b      	ldr	r3, [r7, #0]
 800319e:	685b      	ldr	r3, [r3, #4]
 80031a0:	2b12      	cmp	r3, #18
 80031a2:	d123      	bne.n	80031ec <HAL_GPIO_Init+0x80>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 80031a4:	697b      	ldr	r3, [r7, #20]
 80031a6:	08da      	lsrs	r2, r3, #3
 80031a8:	687b      	ldr	r3, [r7, #4]
 80031aa:	3208      	adds	r2, #8
 80031ac:	0092      	lsls	r2, r2, #2
 80031ae:	58d3      	ldr	r3, [r2, r3]
 80031b0:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 80031b2:	697b      	ldr	r3, [r7, #20]
 80031b4:	2207      	movs	r2, #7
 80031b6:	4013      	ands	r3, r2
 80031b8:	009b      	lsls	r3, r3, #2
 80031ba:	220f      	movs	r2, #15
 80031bc:	409a      	lsls	r2, r3
 80031be:	0013      	movs	r3, r2
 80031c0:	43da      	mvns	r2, r3
 80031c2:	693b      	ldr	r3, [r7, #16]
 80031c4:	4013      	ands	r3, r2
 80031c6:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 80031c8:	683b      	ldr	r3, [r7, #0]
 80031ca:	691a      	ldr	r2, [r3, #16]
 80031cc:	697b      	ldr	r3, [r7, #20]
 80031ce:	2107      	movs	r1, #7
 80031d0:	400b      	ands	r3, r1
 80031d2:	009b      	lsls	r3, r3, #2
 80031d4:	409a      	lsls	r2, r3
 80031d6:	0013      	movs	r3, r2
 80031d8:	693a      	ldr	r2, [r7, #16]
 80031da:	4313      	orrs	r3, r2
 80031dc:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 80031de:	697b      	ldr	r3, [r7, #20]
 80031e0:	08da      	lsrs	r2, r3, #3
 80031e2:	687b      	ldr	r3, [r7, #4]
 80031e4:	3208      	adds	r2, #8
 80031e6:	0092      	lsls	r2, r2, #2
 80031e8:	6939      	ldr	r1, [r7, #16]
 80031ea:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80031ec:	687b      	ldr	r3, [r7, #4]
 80031ee:	681b      	ldr	r3, [r3, #0]
 80031f0:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 80031f2:	697b      	ldr	r3, [r7, #20]
 80031f4:	005b      	lsls	r3, r3, #1
 80031f6:	2203      	movs	r2, #3
 80031f8:	409a      	lsls	r2, r3
 80031fa:	0013      	movs	r3, r2
 80031fc:	43da      	mvns	r2, r3
 80031fe:	693b      	ldr	r3, [r7, #16]
 8003200:	4013      	ands	r3, r2
 8003202:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8003204:	683b      	ldr	r3, [r7, #0]
 8003206:	685b      	ldr	r3, [r3, #4]
 8003208:	2203      	movs	r2, #3
 800320a:	401a      	ands	r2, r3
 800320c:	697b      	ldr	r3, [r7, #20]
 800320e:	005b      	lsls	r3, r3, #1
 8003210:	409a      	lsls	r2, r3
 8003212:	0013      	movs	r3, r2
 8003214:	693a      	ldr	r2, [r7, #16]
 8003216:	4313      	orrs	r3, r2
 8003218:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 800321a:	687b      	ldr	r3, [r7, #4]
 800321c:	693a      	ldr	r2, [r7, #16]
 800321e:	601a      	str	r2, [r3, #0]

      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003220:	683b      	ldr	r3, [r7, #0]
 8003222:	685b      	ldr	r3, [r3, #4]
 8003224:	2b01      	cmp	r3, #1
 8003226:	d00b      	beq.n	8003240 <HAL_GPIO_Init+0xd4>
 8003228:	683b      	ldr	r3, [r7, #0]
 800322a:	685b      	ldr	r3, [r3, #4]
 800322c:	2b02      	cmp	r3, #2
 800322e:	d007      	beq.n	8003240 <HAL_GPIO_Init+0xd4>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003230:	683b      	ldr	r3, [r7, #0]
 8003232:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003234:	2b11      	cmp	r3, #17
 8003236:	d003      	beq.n	8003240 <HAL_GPIO_Init+0xd4>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003238:	683b      	ldr	r3, [r7, #0]
 800323a:	685b      	ldr	r3, [r3, #4]
 800323c:	2b12      	cmp	r3, #18
 800323e:	d130      	bne.n	80032a2 <HAL_GPIO_Init+0x136>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8003240:	687b      	ldr	r3, [r7, #4]
 8003242:	689b      	ldr	r3, [r3, #8]
 8003244:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 8003246:	697b      	ldr	r3, [r7, #20]
 8003248:	005b      	lsls	r3, r3, #1
 800324a:	2203      	movs	r2, #3
 800324c:	409a      	lsls	r2, r3
 800324e:	0013      	movs	r3, r2
 8003250:	43da      	mvns	r2, r3
 8003252:	693b      	ldr	r3, [r7, #16]
 8003254:	4013      	ands	r3, r2
 8003256:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 8003258:	683b      	ldr	r3, [r7, #0]
 800325a:	68da      	ldr	r2, [r3, #12]
 800325c:	697b      	ldr	r3, [r7, #20]
 800325e:	005b      	lsls	r3, r3, #1
 8003260:	409a      	lsls	r2, r3
 8003262:	0013      	movs	r3, r2
 8003264:	693a      	ldr	r2, [r7, #16]
 8003266:	4313      	orrs	r3, r2
 8003268:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 800326a:	687b      	ldr	r3, [r7, #4]
 800326c:	693a      	ldr	r2, [r7, #16]
 800326e:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	685b      	ldr	r3, [r3, #4]
 8003274:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003276:	2201      	movs	r2, #1
 8003278:	697b      	ldr	r3, [r7, #20]
 800327a:	409a      	lsls	r2, r3
 800327c:	0013      	movs	r3, r2
 800327e:	43da      	mvns	r2, r3
 8003280:	693b      	ldr	r3, [r7, #16]
 8003282:	4013      	ands	r3, r2
 8003284:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4u) << position);
 8003286:	683b      	ldr	r3, [r7, #0]
 8003288:	685b      	ldr	r3, [r3, #4]
 800328a:	091b      	lsrs	r3, r3, #4
 800328c:	2201      	movs	r2, #1
 800328e:	401a      	ands	r2, r3
 8003290:	697b      	ldr	r3, [r7, #20]
 8003292:	409a      	lsls	r2, r3
 8003294:	0013      	movs	r3, r2
 8003296:	693a      	ldr	r2, [r7, #16]
 8003298:	4313      	orrs	r3, r2
 800329a:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 800329c:	687b      	ldr	r3, [r7, #4]
 800329e:	693a      	ldr	r2, [r7, #16]
 80032a0:	605a      	str	r2, [r3, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 80032a2:	687b      	ldr	r3, [r7, #4]
 80032a4:	68db      	ldr	r3, [r3, #12]
 80032a6:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 80032a8:	697b      	ldr	r3, [r7, #20]
 80032aa:	005b      	lsls	r3, r3, #1
 80032ac:	2203      	movs	r2, #3
 80032ae:	409a      	lsls	r2, r3
 80032b0:	0013      	movs	r3, r2
 80032b2:	43da      	mvns	r2, r3
 80032b4:	693b      	ldr	r3, [r7, #16]
 80032b6:	4013      	ands	r3, r2
 80032b8:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Pull) << (position * 2u));
 80032ba:	683b      	ldr	r3, [r7, #0]
 80032bc:	689a      	ldr	r2, [r3, #8]
 80032be:	697b      	ldr	r3, [r7, #20]
 80032c0:	005b      	lsls	r3, r3, #1
 80032c2:	409a      	lsls	r2, r3
 80032c4:	0013      	movs	r3, r2
 80032c6:	693a      	ldr	r2, [r7, #16]
 80032c8:	4313      	orrs	r3, r2
 80032ca:	613b      	str	r3, [r7, #16]
      GPIOx->PUPDR = temp;
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	693a      	ldr	r2, [r7, #16]
 80032d0:	60da      	str	r2, [r3, #12]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80032d2:	683b      	ldr	r3, [r7, #0]
 80032d4:	685a      	ldr	r2, [r3, #4]
 80032d6:	2380      	movs	r3, #128	@ 0x80
 80032d8:	055b      	lsls	r3, r3, #21
 80032da:	4013      	ands	r3, r2
 80032dc:	d100      	bne.n	80032e0 <HAL_GPIO_Init+0x174>
 80032de:	e09a      	b.n	8003416 <HAL_GPIO_Init+0x2aa>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80032e0:	4b54      	ldr	r3, [pc, #336]	@ (8003434 <HAL_GPIO_Init+0x2c8>)
 80032e2:	699a      	ldr	r2, [r3, #24]
 80032e4:	4b53      	ldr	r3, [pc, #332]	@ (8003434 <HAL_GPIO_Init+0x2c8>)
 80032e6:	2101      	movs	r1, #1
 80032e8:	430a      	orrs	r2, r1
 80032ea:	619a      	str	r2, [r3, #24]
 80032ec:	4b51      	ldr	r3, [pc, #324]	@ (8003434 <HAL_GPIO_Init+0x2c8>)
 80032ee:	699b      	ldr	r3, [r3, #24]
 80032f0:	2201      	movs	r2, #1
 80032f2:	4013      	ands	r3, r2
 80032f4:	60bb      	str	r3, [r7, #8]
 80032f6:	68bb      	ldr	r3, [r7, #8]

        temp = SYSCFG->EXTICR[position >> 2u];
 80032f8:	4a4f      	ldr	r2, [pc, #316]	@ (8003438 <HAL_GPIO_Init+0x2cc>)
 80032fa:	697b      	ldr	r3, [r7, #20]
 80032fc:	089b      	lsrs	r3, r3, #2
 80032fe:	3302      	adds	r3, #2
 8003300:	009b      	lsls	r3, r3, #2
 8003302:	589b      	ldr	r3, [r3, r2]
 8003304:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8003306:	697b      	ldr	r3, [r7, #20]
 8003308:	2203      	movs	r2, #3
 800330a:	4013      	ands	r3, r2
 800330c:	009b      	lsls	r3, r3, #2
 800330e:	220f      	movs	r2, #15
 8003310:	409a      	lsls	r2, r3
 8003312:	0013      	movs	r3, r2
 8003314:	43da      	mvns	r2, r3
 8003316:	693b      	ldr	r3, [r7, #16]
 8003318:	4013      	ands	r3, r2
 800331a:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 800331c:	687a      	ldr	r2, [r7, #4]
 800331e:	2390      	movs	r3, #144	@ 0x90
 8003320:	05db      	lsls	r3, r3, #23
 8003322:	429a      	cmp	r2, r3
 8003324:	d013      	beq.n	800334e <HAL_GPIO_Init+0x1e2>
 8003326:	687b      	ldr	r3, [r7, #4]
 8003328:	4a44      	ldr	r2, [pc, #272]	@ (800343c <HAL_GPIO_Init+0x2d0>)
 800332a:	4293      	cmp	r3, r2
 800332c:	d00d      	beq.n	800334a <HAL_GPIO_Init+0x1de>
 800332e:	687b      	ldr	r3, [r7, #4]
 8003330:	4a43      	ldr	r2, [pc, #268]	@ (8003440 <HAL_GPIO_Init+0x2d4>)
 8003332:	4293      	cmp	r3, r2
 8003334:	d007      	beq.n	8003346 <HAL_GPIO_Init+0x1da>
 8003336:	687b      	ldr	r3, [r7, #4]
 8003338:	4a42      	ldr	r2, [pc, #264]	@ (8003444 <HAL_GPIO_Init+0x2d8>)
 800333a:	4293      	cmp	r3, r2
 800333c:	d101      	bne.n	8003342 <HAL_GPIO_Init+0x1d6>
 800333e:	2303      	movs	r3, #3
 8003340:	e006      	b.n	8003350 <HAL_GPIO_Init+0x1e4>
 8003342:	2305      	movs	r3, #5
 8003344:	e004      	b.n	8003350 <HAL_GPIO_Init+0x1e4>
 8003346:	2302      	movs	r3, #2
 8003348:	e002      	b.n	8003350 <HAL_GPIO_Init+0x1e4>
 800334a:	2301      	movs	r3, #1
 800334c:	e000      	b.n	8003350 <HAL_GPIO_Init+0x1e4>
 800334e:	2300      	movs	r3, #0
 8003350:	697a      	ldr	r2, [r7, #20]
 8003352:	2103      	movs	r1, #3
 8003354:	400a      	ands	r2, r1
 8003356:	0092      	lsls	r2, r2, #2
 8003358:	4093      	lsls	r3, r2
 800335a:	693a      	ldr	r2, [r7, #16]
 800335c:	4313      	orrs	r3, r2
 800335e:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 8003360:	4935      	ldr	r1, [pc, #212]	@ (8003438 <HAL_GPIO_Init+0x2cc>)
 8003362:	697b      	ldr	r3, [r7, #20]
 8003364:	089b      	lsrs	r3, r3, #2
 8003366:	3302      	adds	r3, #2
 8003368:	009b      	lsls	r3, r3, #2
 800336a:	693a      	ldr	r2, [r7, #16]
 800336c:	505a      	str	r2, [r3, r1]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800336e:	4b36      	ldr	r3, [pc, #216]	@ (8003448 <HAL_GPIO_Init+0x2dc>)
 8003370:	681b      	ldr	r3, [r3, #0]
 8003372:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8003374:	68fb      	ldr	r3, [r7, #12]
 8003376:	43da      	mvns	r2, r3
 8003378:	693b      	ldr	r3, [r7, #16]
 800337a:	4013      	ands	r3, r2
 800337c:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 800337e:	683b      	ldr	r3, [r7, #0]
 8003380:	685a      	ldr	r2, [r3, #4]
 8003382:	2380      	movs	r3, #128	@ 0x80
 8003384:	025b      	lsls	r3, r3, #9
 8003386:	4013      	ands	r3, r2
 8003388:	d003      	beq.n	8003392 <HAL_GPIO_Init+0x226>
        {
          temp |= iocurrent;
 800338a:	693a      	ldr	r2, [r7, #16]
 800338c:	68fb      	ldr	r3, [r7, #12]
 800338e:	4313      	orrs	r3, r2
 8003390:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 8003392:	4b2d      	ldr	r3, [pc, #180]	@ (8003448 <HAL_GPIO_Init+0x2dc>)
 8003394:	693a      	ldr	r2, [r7, #16]
 8003396:	601a      	str	r2, [r3, #0]

        temp = EXTI->EMR;
 8003398:	4b2b      	ldr	r3, [pc, #172]	@ (8003448 <HAL_GPIO_Init+0x2dc>)
 800339a:	685b      	ldr	r3, [r3, #4]
 800339c:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 800339e:	68fb      	ldr	r3, [r7, #12]
 80033a0:	43da      	mvns	r2, r3
 80033a2:	693b      	ldr	r3, [r7, #16]
 80033a4:	4013      	ands	r3, r2
 80033a6:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80033a8:	683b      	ldr	r3, [r7, #0]
 80033aa:	685a      	ldr	r2, [r3, #4]
 80033ac:	2380      	movs	r3, #128	@ 0x80
 80033ae:	029b      	lsls	r3, r3, #10
 80033b0:	4013      	ands	r3, r2
 80033b2:	d003      	beq.n	80033bc <HAL_GPIO_Init+0x250>
        {
          temp |= iocurrent;
 80033b4:	693a      	ldr	r2, [r7, #16]
 80033b6:	68fb      	ldr	r3, [r7, #12]
 80033b8:	4313      	orrs	r3, r2
 80033ba:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 80033bc:	4b22      	ldr	r3, [pc, #136]	@ (8003448 <HAL_GPIO_Init+0x2dc>)
 80033be:	693a      	ldr	r2, [r7, #16]
 80033c0:	605a      	str	r2, [r3, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80033c2:	4b21      	ldr	r3, [pc, #132]	@ (8003448 <HAL_GPIO_Init+0x2dc>)
 80033c4:	689b      	ldr	r3, [r3, #8]
 80033c6:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 80033c8:	68fb      	ldr	r3, [r7, #12]
 80033ca:	43da      	mvns	r2, r3
 80033cc:	693b      	ldr	r3, [r7, #16]
 80033ce:	4013      	ands	r3, r2
 80033d0:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80033d2:	683b      	ldr	r3, [r7, #0]
 80033d4:	685a      	ldr	r2, [r3, #4]
 80033d6:	2380      	movs	r3, #128	@ 0x80
 80033d8:	035b      	lsls	r3, r3, #13
 80033da:	4013      	ands	r3, r2
 80033dc:	d003      	beq.n	80033e6 <HAL_GPIO_Init+0x27a>
        {
          temp |= iocurrent;
 80033de:	693a      	ldr	r2, [r7, #16]
 80033e0:	68fb      	ldr	r3, [r7, #12]
 80033e2:	4313      	orrs	r3, r2
 80033e4:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 80033e6:	4b18      	ldr	r3, [pc, #96]	@ (8003448 <HAL_GPIO_Init+0x2dc>)
 80033e8:	693a      	ldr	r2, [r7, #16]
 80033ea:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 80033ec:	4b16      	ldr	r3, [pc, #88]	@ (8003448 <HAL_GPIO_Init+0x2dc>)
 80033ee:	68db      	ldr	r3, [r3, #12]
 80033f0:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 80033f2:	68fb      	ldr	r3, [r7, #12]
 80033f4:	43da      	mvns	r2, r3
 80033f6:	693b      	ldr	r3, [r7, #16]
 80033f8:	4013      	ands	r3, r2
 80033fa:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80033fc:	683b      	ldr	r3, [r7, #0]
 80033fe:	685a      	ldr	r2, [r3, #4]
 8003400:	2380      	movs	r3, #128	@ 0x80
 8003402:	039b      	lsls	r3, r3, #14
 8003404:	4013      	ands	r3, r2
 8003406:	d003      	beq.n	8003410 <HAL_GPIO_Init+0x2a4>
        {
          temp |= iocurrent;
 8003408:	693a      	ldr	r2, [r7, #16]
 800340a:	68fb      	ldr	r3, [r7, #12]
 800340c:	4313      	orrs	r3, r2
 800340e:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 8003410:	4b0d      	ldr	r3, [pc, #52]	@ (8003448 <HAL_GPIO_Init+0x2dc>)
 8003412:	693a      	ldr	r2, [r7, #16]
 8003414:	60da      	str	r2, [r3, #12]
      }
    }

    position++;
 8003416:	697b      	ldr	r3, [r7, #20]
 8003418:	3301      	adds	r3, #1
 800341a:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 800341c:	683b      	ldr	r3, [r7, #0]
 800341e:	681a      	ldr	r2, [r3, #0]
 8003420:	697b      	ldr	r3, [r7, #20]
 8003422:	40da      	lsrs	r2, r3
 8003424:	1e13      	subs	r3, r2, #0
 8003426:	d000      	beq.n	800342a <HAL_GPIO_Init+0x2be>
 8003428:	e6a8      	b.n	800317c <HAL_GPIO_Init+0x10>
  } 
}
 800342a:	46c0      	nop			@ (mov r8, r8)
 800342c:	46c0      	nop			@ (mov r8, r8)
 800342e:	46bd      	mov	sp, r7
 8003430:	b006      	add	sp, #24
 8003432:	bd80      	pop	{r7, pc}
 8003434:	40021000 	.word	0x40021000
 8003438:	40010000 	.word	0x40010000
 800343c:	48000400 	.word	0x48000400
 8003440:	48000800 	.word	0x48000800
 8003444:	48000c00 	.word	0x48000c00
 8003448:	40010400 	.word	0x40010400

0800344c <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 800344c:	b580      	push	{r7, lr}
 800344e:	b082      	sub	sp, #8
 8003450:	af00      	add	r7, sp, #0
 8003452:	6078      	str	r0, [r7, #4]
 8003454:	0008      	movs	r0, r1
 8003456:	0011      	movs	r1, r2
 8003458:	1cbb      	adds	r3, r7, #2
 800345a:	1c02      	adds	r2, r0, #0
 800345c:	801a      	strh	r2, [r3, #0]
 800345e:	1c7b      	adds	r3, r7, #1
 8003460:	1c0a      	adds	r2, r1, #0
 8003462:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8003464:	1c7b      	adds	r3, r7, #1
 8003466:	781b      	ldrb	r3, [r3, #0]
 8003468:	2b00      	cmp	r3, #0
 800346a:	d004      	beq.n	8003476 <HAL_GPIO_WritePin+0x2a>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 800346c:	1cbb      	adds	r3, r7, #2
 800346e:	881a      	ldrh	r2, [r3, #0]
 8003470:	687b      	ldr	r3, [r7, #4]
 8003472:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 8003474:	e003      	b.n	800347e <HAL_GPIO_WritePin+0x32>
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 8003476:	1cbb      	adds	r3, r7, #2
 8003478:	881a      	ldrh	r2, [r3, #0]
 800347a:	687b      	ldr	r3, [r7, #4]
 800347c:	629a      	str	r2, [r3, #40]	@ 0x28
}
 800347e:	46c0      	nop			@ (mov r8, r8)
 8003480:	46bd      	mov	sp, r7
 8003482:	b002      	add	sp, #8
 8003484:	bd80      	pop	{r7, pc}

08003486 <HAL_GPIO_TogglePin>:
  * @param  GPIOx where x can be (A..F) to select the GPIO peripheral for STM32F0 family
  * @param  GPIO_Pin specifies the pin to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8003486:	b580      	push	{r7, lr}
 8003488:	b082      	sub	sp, #8
 800348a:	af00      	add	r7, sp, #0
 800348c:	6078      	str	r0, [r7, #4]
 800348e:	000a      	movs	r2, r1
 8003490:	1cbb      	adds	r3, r7, #2
 8003492:	801a      	strh	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->ODR & GPIO_Pin) != 0X00u)
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	695b      	ldr	r3, [r3, #20]
 8003498:	1cba      	adds	r2, r7, #2
 800349a:	8812      	ldrh	r2, [r2, #0]
 800349c:	4013      	ands	r3, r2
 800349e:	d005      	beq.n	80034ac <HAL_GPIO_TogglePin+0x26>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 80034a0:	1cbb      	adds	r3, r7, #2
 80034a2:	881b      	ldrh	r3, [r3, #0]
 80034a4:	041a      	lsls	r2, r3, #16
 80034a6:	687b      	ldr	r3, [r7, #4]
 80034a8:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
  }
}
 80034aa:	e003      	b.n	80034b4 <HAL_GPIO_TogglePin+0x2e>
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 80034ac:	1cbb      	adds	r3, r7, #2
 80034ae:	881a      	ldrh	r2, [r3, #0]
 80034b0:	687b      	ldr	r3, [r7, #4]
 80034b2:	619a      	str	r2, [r3, #24]
}
 80034b4:	46c0      	nop			@ (mov r8, r8)
 80034b6:	46bd      	mov	sp, r7
 80034b8:	b002      	add	sp, #8
 80034ba:	bd80      	pop	{r7, pc}

080034bc <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  Handle EXTI interrupt request.
  * @param  GPIO_Pin Specifies the port pin connected to corresponding EXTI line.
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 80034bc:	b580      	push	{r7, lr}
 80034be:	b082      	sub	sp, #8
 80034c0:	af00      	add	r7, sp, #0
 80034c2:	0002      	movs	r2, r0
 80034c4:	1dbb      	adds	r3, r7, #6
 80034c6:	801a      	strh	r2, [r3, #0]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != 0x00u)
 80034c8:	4b09      	ldr	r3, [pc, #36]	@ (80034f0 <HAL_GPIO_EXTI_IRQHandler+0x34>)
 80034ca:	695b      	ldr	r3, [r3, #20]
 80034cc:	1dba      	adds	r2, r7, #6
 80034ce:	8812      	ldrh	r2, [r2, #0]
 80034d0:	4013      	ands	r3, r2
 80034d2:	d008      	beq.n	80034e6 <HAL_GPIO_EXTI_IRQHandler+0x2a>
  { 
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80034d4:	4b06      	ldr	r3, [pc, #24]	@ (80034f0 <HAL_GPIO_EXTI_IRQHandler+0x34>)
 80034d6:	1dba      	adds	r2, r7, #6
 80034d8:	8812      	ldrh	r2, [r2, #0]
 80034da:	615a      	str	r2, [r3, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80034dc:	1dbb      	adds	r3, r7, #6
 80034de:	881b      	ldrh	r3, [r3, #0]
 80034e0:	0018      	movs	r0, r3
 80034e2:	f7ff f909 	bl	80026f8 <HAL_GPIO_EXTI_Callback>
  }
}
 80034e6:	46c0      	nop			@ (mov r8, r8)
 80034e8:	46bd      	mov	sp, r7
 80034ea:	b002      	add	sp, #8
 80034ec:	bd80      	pop	{r7, pc}
 80034ee:	46c0      	nop			@ (mov r8, r8)
 80034f0:	40010400 	.word	0x40010400

080034f4 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80034f4:	b580      	push	{r7, lr}
 80034f6:	b088      	sub	sp, #32
 80034f8:	af00      	add	r7, sp, #0
 80034fa:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80034fc:	687b      	ldr	r3, [r7, #4]
 80034fe:	2b00      	cmp	r3, #0
 8003500:	d101      	bne.n	8003506 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8003502:	2301      	movs	r3, #1
 8003504:	e301      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8003506:	687b      	ldr	r3, [r7, #4]
 8003508:	681b      	ldr	r3, [r3, #0]
 800350a:	2201      	movs	r2, #1
 800350c:	4013      	ands	r3, r2
 800350e:	d100      	bne.n	8003512 <HAL_RCC_OscConfig+0x1e>
 8003510:	e08d      	b.n	800362e <HAL_RCC_OscConfig+0x13a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 8003512:	4bc3      	ldr	r3, [pc, #780]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 8003514:	685b      	ldr	r3, [r3, #4]
 8003516:	220c      	movs	r2, #12
 8003518:	4013      	ands	r3, r2
 800351a:	2b04      	cmp	r3, #4
 800351c:	d00e      	beq.n	800353c <HAL_RCC_OscConfig+0x48>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 800351e:	4bc0      	ldr	r3, [pc, #768]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 8003520:	685b      	ldr	r3, [r3, #4]
 8003522:	220c      	movs	r2, #12
 8003524:	4013      	ands	r3, r2
 8003526:	2b08      	cmp	r3, #8
 8003528:	d116      	bne.n	8003558 <HAL_RCC_OscConfig+0x64>
 800352a:	4bbd      	ldr	r3, [pc, #756]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 800352c:	685a      	ldr	r2, [r3, #4]
 800352e:	2380      	movs	r3, #128	@ 0x80
 8003530:	025b      	lsls	r3, r3, #9
 8003532:	401a      	ands	r2, r3
 8003534:	2380      	movs	r3, #128	@ 0x80
 8003536:	025b      	lsls	r3, r3, #9
 8003538:	429a      	cmp	r2, r3
 800353a:	d10d      	bne.n	8003558 <HAL_RCC_OscConfig+0x64>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800353c:	4bb8      	ldr	r3, [pc, #736]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 800353e:	681a      	ldr	r2, [r3, #0]
 8003540:	2380      	movs	r3, #128	@ 0x80
 8003542:	029b      	lsls	r3, r3, #10
 8003544:	4013      	ands	r3, r2
 8003546:	d100      	bne.n	800354a <HAL_RCC_OscConfig+0x56>
 8003548:	e070      	b.n	800362c <HAL_RCC_OscConfig+0x138>
 800354a:	687b      	ldr	r3, [r7, #4]
 800354c:	685b      	ldr	r3, [r3, #4]
 800354e:	2b00      	cmp	r3, #0
 8003550:	d000      	beq.n	8003554 <HAL_RCC_OscConfig+0x60>
 8003552:	e06b      	b.n	800362c <HAL_RCC_OscConfig+0x138>
      {
        return HAL_ERROR;
 8003554:	2301      	movs	r3, #1
 8003556:	e2d8      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8003558:	687b      	ldr	r3, [r7, #4]
 800355a:	685b      	ldr	r3, [r3, #4]
 800355c:	2b01      	cmp	r3, #1
 800355e:	d107      	bne.n	8003570 <HAL_RCC_OscConfig+0x7c>
 8003560:	4baf      	ldr	r3, [pc, #700]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 8003562:	681a      	ldr	r2, [r3, #0]
 8003564:	4bae      	ldr	r3, [pc, #696]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 8003566:	2180      	movs	r1, #128	@ 0x80
 8003568:	0249      	lsls	r1, r1, #9
 800356a:	430a      	orrs	r2, r1
 800356c:	601a      	str	r2, [r3, #0]
 800356e:	e02f      	b.n	80035d0 <HAL_RCC_OscConfig+0xdc>
 8003570:	687b      	ldr	r3, [r7, #4]
 8003572:	685b      	ldr	r3, [r3, #4]
 8003574:	2b00      	cmp	r3, #0
 8003576:	d10c      	bne.n	8003592 <HAL_RCC_OscConfig+0x9e>
 8003578:	4ba9      	ldr	r3, [pc, #676]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 800357a:	681a      	ldr	r2, [r3, #0]
 800357c:	4ba8      	ldr	r3, [pc, #672]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 800357e:	49a9      	ldr	r1, [pc, #676]	@ (8003824 <HAL_RCC_OscConfig+0x330>)
 8003580:	400a      	ands	r2, r1
 8003582:	601a      	str	r2, [r3, #0]
 8003584:	4ba6      	ldr	r3, [pc, #664]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 8003586:	681a      	ldr	r2, [r3, #0]
 8003588:	4ba5      	ldr	r3, [pc, #660]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 800358a:	49a7      	ldr	r1, [pc, #668]	@ (8003828 <HAL_RCC_OscConfig+0x334>)
 800358c:	400a      	ands	r2, r1
 800358e:	601a      	str	r2, [r3, #0]
 8003590:	e01e      	b.n	80035d0 <HAL_RCC_OscConfig+0xdc>
 8003592:	687b      	ldr	r3, [r7, #4]
 8003594:	685b      	ldr	r3, [r3, #4]
 8003596:	2b05      	cmp	r3, #5
 8003598:	d10e      	bne.n	80035b8 <HAL_RCC_OscConfig+0xc4>
 800359a:	4ba1      	ldr	r3, [pc, #644]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 800359c:	681a      	ldr	r2, [r3, #0]
 800359e:	4ba0      	ldr	r3, [pc, #640]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 80035a0:	2180      	movs	r1, #128	@ 0x80
 80035a2:	02c9      	lsls	r1, r1, #11
 80035a4:	430a      	orrs	r2, r1
 80035a6:	601a      	str	r2, [r3, #0]
 80035a8:	4b9d      	ldr	r3, [pc, #628]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 80035aa:	681a      	ldr	r2, [r3, #0]
 80035ac:	4b9c      	ldr	r3, [pc, #624]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 80035ae:	2180      	movs	r1, #128	@ 0x80
 80035b0:	0249      	lsls	r1, r1, #9
 80035b2:	430a      	orrs	r2, r1
 80035b4:	601a      	str	r2, [r3, #0]
 80035b6:	e00b      	b.n	80035d0 <HAL_RCC_OscConfig+0xdc>
 80035b8:	4b99      	ldr	r3, [pc, #612]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 80035ba:	681a      	ldr	r2, [r3, #0]
 80035bc:	4b98      	ldr	r3, [pc, #608]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 80035be:	4999      	ldr	r1, [pc, #612]	@ (8003824 <HAL_RCC_OscConfig+0x330>)
 80035c0:	400a      	ands	r2, r1
 80035c2:	601a      	str	r2, [r3, #0]
 80035c4:	4b96      	ldr	r3, [pc, #600]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 80035c6:	681a      	ldr	r2, [r3, #0]
 80035c8:	4b95      	ldr	r3, [pc, #596]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 80035ca:	4997      	ldr	r1, [pc, #604]	@ (8003828 <HAL_RCC_OscConfig+0x334>)
 80035cc:	400a      	ands	r2, r1
 80035ce:	601a      	str	r2, [r3, #0]
      

       /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80035d0:	687b      	ldr	r3, [r7, #4]
 80035d2:	685b      	ldr	r3, [r3, #4]
 80035d4:	2b00      	cmp	r3, #0
 80035d6:	d014      	beq.n	8003602 <HAL_RCC_OscConfig+0x10e>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80035d8:	f7ff fc76 	bl	8002ec8 <HAL_GetTick>
 80035dc:	0003      	movs	r3, r0
 80035de:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80035e0:	e008      	b.n	80035f4 <HAL_RCC_OscConfig+0x100>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80035e2:	f7ff fc71 	bl	8002ec8 <HAL_GetTick>
 80035e6:	0002      	movs	r2, r0
 80035e8:	69bb      	ldr	r3, [r7, #24]
 80035ea:	1ad3      	subs	r3, r2, r3
 80035ec:	2b64      	cmp	r3, #100	@ 0x64
 80035ee:	d901      	bls.n	80035f4 <HAL_RCC_OscConfig+0x100>
          {
            return HAL_TIMEOUT;
 80035f0:	2303      	movs	r3, #3
 80035f2:	e28a      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80035f4:	4b8a      	ldr	r3, [pc, #552]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 80035f6:	681a      	ldr	r2, [r3, #0]
 80035f8:	2380      	movs	r3, #128	@ 0x80
 80035fa:	029b      	lsls	r3, r3, #10
 80035fc:	4013      	ands	r3, r2
 80035fe:	d0f0      	beq.n	80035e2 <HAL_RCC_OscConfig+0xee>
 8003600:	e015      	b.n	800362e <HAL_RCC_OscConfig+0x13a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003602:	f7ff fc61 	bl	8002ec8 <HAL_GetTick>
 8003606:	0003      	movs	r3, r0
 8003608:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800360a:	e008      	b.n	800361e <HAL_RCC_OscConfig+0x12a>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800360c:	f7ff fc5c 	bl	8002ec8 <HAL_GetTick>
 8003610:	0002      	movs	r2, r0
 8003612:	69bb      	ldr	r3, [r7, #24]
 8003614:	1ad3      	subs	r3, r2, r3
 8003616:	2b64      	cmp	r3, #100	@ 0x64
 8003618:	d901      	bls.n	800361e <HAL_RCC_OscConfig+0x12a>
          {
            return HAL_TIMEOUT;
 800361a:	2303      	movs	r3, #3
 800361c:	e275      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800361e:	4b80      	ldr	r3, [pc, #512]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 8003620:	681a      	ldr	r2, [r3, #0]
 8003622:	2380      	movs	r3, #128	@ 0x80
 8003624:	029b      	lsls	r3, r3, #10
 8003626:	4013      	ands	r3, r2
 8003628:	d1f0      	bne.n	800360c <HAL_RCC_OscConfig+0x118>
 800362a:	e000      	b.n	800362e <HAL_RCC_OscConfig+0x13a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800362c:	46c0      	nop			@ (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	681b      	ldr	r3, [r3, #0]
 8003632:	2202      	movs	r2, #2
 8003634:	4013      	ands	r3, r2
 8003636:	d100      	bne.n	800363a <HAL_RCC_OscConfig+0x146>
 8003638:	e069      	b.n	800370e <HAL_RCC_OscConfig+0x21a>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 800363a:	4b79      	ldr	r3, [pc, #484]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 800363c:	685b      	ldr	r3, [r3, #4]
 800363e:	220c      	movs	r2, #12
 8003640:	4013      	ands	r3, r2
 8003642:	d00b      	beq.n	800365c <HAL_RCC_OscConfig+0x168>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 8003644:	4b76      	ldr	r3, [pc, #472]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 8003646:	685b      	ldr	r3, [r3, #4]
 8003648:	220c      	movs	r2, #12
 800364a:	4013      	ands	r3, r2
 800364c:	2b08      	cmp	r3, #8
 800364e:	d11c      	bne.n	800368a <HAL_RCC_OscConfig+0x196>
 8003650:	4b73      	ldr	r3, [pc, #460]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 8003652:	685a      	ldr	r2, [r3, #4]
 8003654:	2380      	movs	r3, #128	@ 0x80
 8003656:	025b      	lsls	r3, r3, #9
 8003658:	4013      	ands	r3, r2
 800365a:	d116      	bne.n	800368a <HAL_RCC_OscConfig+0x196>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800365c:	4b70      	ldr	r3, [pc, #448]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 800365e:	681b      	ldr	r3, [r3, #0]
 8003660:	2202      	movs	r2, #2
 8003662:	4013      	ands	r3, r2
 8003664:	d005      	beq.n	8003672 <HAL_RCC_OscConfig+0x17e>
 8003666:	687b      	ldr	r3, [r7, #4]
 8003668:	68db      	ldr	r3, [r3, #12]
 800366a:	2b01      	cmp	r3, #1
 800366c:	d001      	beq.n	8003672 <HAL_RCC_OscConfig+0x17e>
      {
        return HAL_ERROR;
 800366e:	2301      	movs	r3, #1
 8003670:	e24b      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8003672:	4b6b      	ldr	r3, [pc, #428]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 8003674:	681b      	ldr	r3, [r3, #0]
 8003676:	22f8      	movs	r2, #248	@ 0xf8
 8003678:	4393      	bics	r3, r2
 800367a:	0019      	movs	r1, r3
 800367c:	687b      	ldr	r3, [r7, #4]
 800367e:	691b      	ldr	r3, [r3, #16]
 8003680:	00da      	lsls	r2, r3, #3
 8003682:	4b67      	ldr	r3, [pc, #412]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 8003684:	430a      	orrs	r2, r1
 8003686:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8003688:	e041      	b.n	800370e <HAL_RCC_OscConfig+0x21a>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	68db      	ldr	r3, [r3, #12]
 800368e:	2b00      	cmp	r3, #0
 8003690:	d024      	beq.n	80036dc <HAL_RCC_OscConfig+0x1e8>
      {
       /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8003692:	4b63      	ldr	r3, [pc, #396]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 8003694:	681a      	ldr	r2, [r3, #0]
 8003696:	4b62      	ldr	r3, [pc, #392]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 8003698:	2101      	movs	r1, #1
 800369a:	430a      	orrs	r2, r1
 800369c:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800369e:	f7ff fc13 	bl	8002ec8 <HAL_GetTick>
 80036a2:	0003      	movs	r3, r0
 80036a4:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80036a6:	e008      	b.n	80036ba <HAL_RCC_OscConfig+0x1c6>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80036a8:	f7ff fc0e 	bl	8002ec8 <HAL_GetTick>
 80036ac:	0002      	movs	r2, r0
 80036ae:	69bb      	ldr	r3, [r7, #24]
 80036b0:	1ad3      	subs	r3, r2, r3
 80036b2:	2b02      	cmp	r3, #2
 80036b4:	d901      	bls.n	80036ba <HAL_RCC_OscConfig+0x1c6>
          {
            return HAL_TIMEOUT;
 80036b6:	2303      	movs	r3, #3
 80036b8:	e227      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80036ba:	4b59      	ldr	r3, [pc, #356]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 80036bc:	681b      	ldr	r3, [r3, #0]
 80036be:	2202      	movs	r2, #2
 80036c0:	4013      	ands	r3, r2
 80036c2:	d0f1      	beq.n	80036a8 <HAL_RCC_OscConfig+0x1b4>
          }
        }
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80036c4:	4b56      	ldr	r3, [pc, #344]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	22f8      	movs	r2, #248	@ 0xf8
 80036ca:	4393      	bics	r3, r2
 80036cc:	0019      	movs	r1, r3
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	691b      	ldr	r3, [r3, #16]
 80036d2:	00da      	lsls	r2, r3, #3
 80036d4:	4b52      	ldr	r3, [pc, #328]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 80036d6:	430a      	orrs	r2, r1
 80036d8:	601a      	str	r2, [r3, #0]
 80036da:	e018      	b.n	800370e <HAL_RCC_OscConfig+0x21a>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80036dc:	4b50      	ldr	r3, [pc, #320]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 80036de:	681a      	ldr	r2, [r3, #0]
 80036e0:	4b4f      	ldr	r3, [pc, #316]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 80036e2:	2101      	movs	r1, #1
 80036e4:	438a      	bics	r2, r1
 80036e6:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80036e8:	f7ff fbee 	bl	8002ec8 <HAL_GetTick>
 80036ec:	0003      	movs	r3, r0
 80036ee:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80036f0:	e008      	b.n	8003704 <HAL_RCC_OscConfig+0x210>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80036f2:	f7ff fbe9 	bl	8002ec8 <HAL_GetTick>
 80036f6:	0002      	movs	r2, r0
 80036f8:	69bb      	ldr	r3, [r7, #24]
 80036fa:	1ad3      	subs	r3, r2, r3
 80036fc:	2b02      	cmp	r3, #2
 80036fe:	d901      	bls.n	8003704 <HAL_RCC_OscConfig+0x210>
          {
            return HAL_TIMEOUT;
 8003700:	2303      	movs	r3, #3
 8003702:	e202      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8003704:	4b46      	ldr	r3, [pc, #280]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 8003706:	681b      	ldr	r3, [r3, #0]
 8003708:	2202      	movs	r2, #2
 800370a:	4013      	ands	r3, r2
 800370c:	d1f1      	bne.n	80036f2 <HAL_RCC_OscConfig+0x1fe>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800370e:	687b      	ldr	r3, [r7, #4]
 8003710:	681b      	ldr	r3, [r3, #0]
 8003712:	2208      	movs	r2, #8
 8003714:	4013      	ands	r3, r2
 8003716:	d036      	beq.n	8003786 <HAL_RCC_OscConfig+0x292>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
    
    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8003718:	687b      	ldr	r3, [r7, #4]
 800371a:	69db      	ldr	r3, [r3, #28]
 800371c:	2b00      	cmp	r3, #0
 800371e:	d019      	beq.n	8003754 <HAL_RCC_OscConfig+0x260>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8003720:	4b3f      	ldr	r3, [pc, #252]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 8003722:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8003724:	4b3e      	ldr	r3, [pc, #248]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 8003726:	2101      	movs	r1, #1
 8003728:	430a      	orrs	r2, r1
 800372a:	625a      	str	r2, [r3, #36]	@ 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800372c:	f7ff fbcc 	bl	8002ec8 <HAL_GetTick>
 8003730:	0003      	movs	r3, r0
 8003732:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8003734:	e008      	b.n	8003748 <HAL_RCC_OscConfig+0x254>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8003736:	f7ff fbc7 	bl	8002ec8 <HAL_GetTick>
 800373a:	0002      	movs	r2, r0
 800373c:	69bb      	ldr	r3, [r7, #24]
 800373e:	1ad3      	subs	r3, r2, r3
 8003740:	2b02      	cmp	r3, #2
 8003742:	d901      	bls.n	8003748 <HAL_RCC_OscConfig+0x254>
        {
          return HAL_TIMEOUT;
 8003744:	2303      	movs	r3, #3
 8003746:	e1e0      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8003748:	4b35      	ldr	r3, [pc, #212]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 800374a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800374c:	2202      	movs	r2, #2
 800374e:	4013      	ands	r3, r2
 8003750:	d0f1      	beq.n	8003736 <HAL_RCC_OscConfig+0x242>
 8003752:	e018      	b.n	8003786 <HAL_RCC_OscConfig+0x292>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8003754:	4b32      	ldr	r3, [pc, #200]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 8003756:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8003758:	4b31      	ldr	r3, [pc, #196]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 800375a:	2101      	movs	r1, #1
 800375c:	438a      	bics	r2, r1
 800375e:	625a      	str	r2, [r3, #36]	@ 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003760:	f7ff fbb2 	bl	8002ec8 <HAL_GetTick>
 8003764:	0003      	movs	r3, r0
 8003766:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8003768:	e008      	b.n	800377c <HAL_RCC_OscConfig+0x288>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800376a:	f7ff fbad 	bl	8002ec8 <HAL_GetTick>
 800376e:	0002      	movs	r2, r0
 8003770:	69bb      	ldr	r3, [r7, #24]
 8003772:	1ad3      	subs	r3, r2, r3
 8003774:	2b02      	cmp	r3, #2
 8003776:	d901      	bls.n	800377c <HAL_RCC_OscConfig+0x288>
        {
          return HAL_TIMEOUT;
 8003778:	2303      	movs	r3, #3
 800377a:	e1c6      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800377c:	4b28      	ldr	r3, [pc, #160]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 800377e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003780:	2202      	movs	r2, #2
 8003782:	4013      	ands	r3, r2
 8003784:	d1f1      	bne.n	800376a <HAL_RCC_OscConfig+0x276>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8003786:	687b      	ldr	r3, [r7, #4]
 8003788:	681b      	ldr	r3, [r3, #0]
 800378a:	2204      	movs	r2, #4
 800378c:	4013      	ands	r3, r2
 800378e:	d100      	bne.n	8003792 <HAL_RCC_OscConfig+0x29e>
 8003790:	e0b4      	b.n	80038fc <HAL_RCC_OscConfig+0x408>
  {
    FlagStatus       pwrclkchanged = RESET;
 8003792:	201f      	movs	r0, #31
 8003794:	183b      	adds	r3, r7, r0
 8003796:	2200      	movs	r2, #0
 8003798:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800379a:	4b21      	ldr	r3, [pc, #132]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 800379c:	69da      	ldr	r2, [r3, #28]
 800379e:	2380      	movs	r3, #128	@ 0x80
 80037a0:	055b      	lsls	r3, r3, #21
 80037a2:	4013      	ands	r3, r2
 80037a4:	d110      	bne.n	80037c8 <HAL_RCC_OscConfig+0x2d4>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80037a6:	4b1e      	ldr	r3, [pc, #120]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 80037a8:	69da      	ldr	r2, [r3, #28]
 80037aa:	4b1d      	ldr	r3, [pc, #116]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 80037ac:	2180      	movs	r1, #128	@ 0x80
 80037ae:	0549      	lsls	r1, r1, #21
 80037b0:	430a      	orrs	r2, r1
 80037b2:	61da      	str	r2, [r3, #28]
 80037b4:	4b1a      	ldr	r3, [pc, #104]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 80037b6:	69da      	ldr	r2, [r3, #28]
 80037b8:	2380      	movs	r3, #128	@ 0x80
 80037ba:	055b      	lsls	r3, r3, #21
 80037bc:	4013      	ands	r3, r2
 80037be:	60fb      	str	r3, [r7, #12]
 80037c0:	68fb      	ldr	r3, [r7, #12]
      pwrclkchanged = SET;
 80037c2:	183b      	adds	r3, r7, r0
 80037c4:	2201      	movs	r2, #1
 80037c6:	701a      	strb	r2, [r3, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80037c8:	4b18      	ldr	r3, [pc, #96]	@ (800382c <HAL_RCC_OscConfig+0x338>)
 80037ca:	681a      	ldr	r2, [r3, #0]
 80037cc:	2380      	movs	r3, #128	@ 0x80
 80037ce:	005b      	lsls	r3, r3, #1
 80037d0:	4013      	ands	r3, r2
 80037d2:	d11a      	bne.n	800380a <HAL_RCC_OscConfig+0x316>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80037d4:	4b15      	ldr	r3, [pc, #84]	@ (800382c <HAL_RCC_OscConfig+0x338>)
 80037d6:	681a      	ldr	r2, [r3, #0]
 80037d8:	4b14      	ldr	r3, [pc, #80]	@ (800382c <HAL_RCC_OscConfig+0x338>)
 80037da:	2180      	movs	r1, #128	@ 0x80
 80037dc:	0049      	lsls	r1, r1, #1
 80037de:	430a      	orrs	r2, r1
 80037e0:	601a      	str	r2, [r3, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 80037e2:	f7ff fb71 	bl	8002ec8 <HAL_GetTick>
 80037e6:	0003      	movs	r3, r0
 80037e8:	61bb      	str	r3, [r7, #24]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80037ea:	e008      	b.n	80037fe <HAL_RCC_OscConfig+0x30a>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80037ec:	f7ff fb6c 	bl	8002ec8 <HAL_GetTick>
 80037f0:	0002      	movs	r2, r0
 80037f2:	69bb      	ldr	r3, [r7, #24]
 80037f4:	1ad3      	subs	r3, r2, r3
 80037f6:	2b64      	cmp	r3, #100	@ 0x64
 80037f8:	d901      	bls.n	80037fe <HAL_RCC_OscConfig+0x30a>
        {
          return HAL_TIMEOUT;
 80037fa:	2303      	movs	r3, #3
 80037fc:	e185      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80037fe:	4b0b      	ldr	r3, [pc, #44]	@ (800382c <HAL_RCC_OscConfig+0x338>)
 8003800:	681a      	ldr	r2, [r3, #0]
 8003802:	2380      	movs	r3, #128	@ 0x80
 8003804:	005b      	lsls	r3, r3, #1
 8003806:	4013      	ands	r3, r2
 8003808:	d0f0      	beq.n	80037ec <HAL_RCC_OscConfig+0x2f8>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800380a:	687b      	ldr	r3, [r7, #4]
 800380c:	689b      	ldr	r3, [r3, #8]
 800380e:	2b01      	cmp	r3, #1
 8003810:	d10e      	bne.n	8003830 <HAL_RCC_OscConfig+0x33c>
 8003812:	4b03      	ldr	r3, [pc, #12]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 8003814:	6a1a      	ldr	r2, [r3, #32]
 8003816:	4b02      	ldr	r3, [pc, #8]	@ (8003820 <HAL_RCC_OscConfig+0x32c>)
 8003818:	2101      	movs	r1, #1
 800381a:	430a      	orrs	r2, r1
 800381c:	621a      	str	r2, [r3, #32]
 800381e:	e035      	b.n	800388c <HAL_RCC_OscConfig+0x398>
 8003820:	40021000 	.word	0x40021000
 8003824:	fffeffff 	.word	0xfffeffff
 8003828:	fffbffff 	.word	0xfffbffff
 800382c:	40007000 	.word	0x40007000
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	689b      	ldr	r3, [r3, #8]
 8003834:	2b00      	cmp	r3, #0
 8003836:	d10c      	bne.n	8003852 <HAL_RCC_OscConfig+0x35e>
 8003838:	4bb6      	ldr	r3, [pc, #728]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 800383a:	6a1a      	ldr	r2, [r3, #32]
 800383c:	4bb5      	ldr	r3, [pc, #724]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 800383e:	2101      	movs	r1, #1
 8003840:	438a      	bics	r2, r1
 8003842:	621a      	str	r2, [r3, #32]
 8003844:	4bb3      	ldr	r3, [pc, #716]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003846:	6a1a      	ldr	r2, [r3, #32]
 8003848:	4bb2      	ldr	r3, [pc, #712]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 800384a:	2104      	movs	r1, #4
 800384c:	438a      	bics	r2, r1
 800384e:	621a      	str	r2, [r3, #32]
 8003850:	e01c      	b.n	800388c <HAL_RCC_OscConfig+0x398>
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	689b      	ldr	r3, [r3, #8]
 8003856:	2b05      	cmp	r3, #5
 8003858:	d10c      	bne.n	8003874 <HAL_RCC_OscConfig+0x380>
 800385a:	4bae      	ldr	r3, [pc, #696]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 800385c:	6a1a      	ldr	r2, [r3, #32]
 800385e:	4bad      	ldr	r3, [pc, #692]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003860:	2104      	movs	r1, #4
 8003862:	430a      	orrs	r2, r1
 8003864:	621a      	str	r2, [r3, #32]
 8003866:	4bab      	ldr	r3, [pc, #684]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003868:	6a1a      	ldr	r2, [r3, #32]
 800386a:	4baa      	ldr	r3, [pc, #680]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 800386c:	2101      	movs	r1, #1
 800386e:	430a      	orrs	r2, r1
 8003870:	621a      	str	r2, [r3, #32]
 8003872:	e00b      	b.n	800388c <HAL_RCC_OscConfig+0x398>
 8003874:	4ba7      	ldr	r3, [pc, #668]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003876:	6a1a      	ldr	r2, [r3, #32]
 8003878:	4ba6      	ldr	r3, [pc, #664]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 800387a:	2101      	movs	r1, #1
 800387c:	438a      	bics	r2, r1
 800387e:	621a      	str	r2, [r3, #32]
 8003880:	4ba4      	ldr	r3, [pc, #656]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003882:	6a1a      	ldr	r2, [r3, #32]
 8003884:	4ba3      	ldr	r3, [pc, #652]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003886:	2104      	movs	r1, #4
 8003888:	438a      	bics	r2, r1
 800388a:	621a      	str	r2, [r3, #32]
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 800388c:	687b      	ldr	r3, [r7, #4]
 800388e:	689b      	ldr	r3, [r3, #8]
 8003890:	2b00      	cmp	r3, #0
 8003892:	d014      	beq.n	80038be <HAL_RCC_OscConfig+0x3ca>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003894:	f7ff fb18 	bl	8002ec8 <HAL_GetTick>
 8003898:	0003      	movs	r3, r0
 800389a:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800389c:	e009      	b.n	80038b2 <HAL_RCC_OscConfig+0x3be>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800389e:	f7ff fb13 	bl	8002ec8 <HAL_GetTick>
 80038a2:	0002      	movs	r2, r0
 80038a4:	69bb      	ldr	r3, [r7, #24]
 80038a6:	1ad3      	subs	r3, r2, r3
 80038a8:	4a9b      	ldr	r2, [pc, #620]	@ (8003b18 <HAL_RCC_OscConfig+0x624>)
 80038aa:	4293      	cmp	r3, r2
 80038ac:	d901      	bls.n	80038b2 <HAL_RCC_OscConfig+0x3be>
        {
          return HAL_TIMEOUT;
 80038ae:	2303      	movs	r3, #3
 80038b0:	e12b      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80038b2:	4b98      	ldr	r3, [pc, #608]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 80038b4:	6a1b      	ldr	r3, [r3, #32]
 80038b6:	2202      	movs	r2, #2
 80038b8:	4013      	ands	r3, r2
 80038ba:	d0f0      	beq.n	800389e <HAL_RCC_OscConfig+0x3aa>
 80038bc:	e013      	b.n	80038e6 <HAL_RCC_OscConfig+0x3f2>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80038be:	f7ff fb03 	bl	8002ec8 <HAL_GetTick>
 80038c2:	0003      	movs	r3, r0
 80038c4:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80038c6:	e009      	b.n	80038dc <HAL_RCC_OscConfig+0x3e8>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80038c8:	f7ff fafe 	bl	8002ec8 <HAL_GetTick>
 80038cc:	0002      	movs	r2, r0
 80038ce:	69bb      	ldr	r3, [r7, #24]
 80038d0:	1ad3      	subs	r3, r2, r3
 80038d2:	4a91      	ldr	r2, [pc, #580]	@ (8003b18 <HAL_RCC_OscConfig+0x624>)
 80038d4:	4293      	cmp	r3, r2
 80038d6:	d901      	bls.n	80038dc <HAL_RCC_OscConfig+0x3e8>
        {
          return HAL_TIMEOUT;
 80038d8:	2303      	movs	r3, #3
 80038da:	e116      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80038dc:	4b8d      	ldr	r3, [pc, #564]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 80038de:	6a1b      	ldr	r3, [r3, #32]
 80038e0:	2202      	movs	r2, #2
 80038e2:	4013      	ands	r3, r2
 80038e4:	d1f0      	bne.n	80038c8 <HAL_RCC_OscConfig+0x3d4>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 80038e6:	231f      	movs	r3, #31
 80038e8:	18fb      	adds	r3, r7, r3
 80038ea:	781b      	ldrb	r3, [r3, #0]
 80038ec:	2b01      	cmp	r3, #1
 80038ee:	d105      	bne.n	80038fc <HAL_RCC_OscConfig+0x408>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80038f0:	4b88      	ldr	r3, [pc, #544]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 80038f2:	69da      	ldr	r2, [r3, #28]
 80038f4:	4b87      	ldr	r3, [pc, #540]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 80038f6:	4989      	ldr	r1, [pc, #548]	@ (8003b1c <HAL_RCC_OscConfig+0x628>)
 80038f8:	400a      	ands	r2, r1
 80038fa:	61da      	str	r2, [r3, #28]
    }
  }

  /*----------------------------- HSI14 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 80038fc:	687b      	ldr	r3, [r7, #4]
 80038fe:	681b      	ldr	r3, [r3, #0]
 8003900:	2210      	movs	r2, #16
 8003902:	4013      	ands	r3, r2
 8003904:	d063      	beq.n	80039ce <HAL_RCC_OscConfig+0x4da>
    /* Check the parameters */
    assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));

    /* Check the HSI14 State */
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 8003906:	687b      	ldr	r3, [r7, #4]
 8003908:	695b      	ldr	r3, [r3, #20]
 800390a:	2b01      	cmp	r3, #1
 800390c:	d12a      	bne.n	8003964 <HAL_RCC_OscConfig+0x470>
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 800390e:	4b81      	ldr	r3, [pc, #516]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003910:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003912:	4b80      	ldr	r3, [pc, #512]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003914:	2104      	movs	r1, #4
 8003916:	430a      	orrs	r2, r1
 8003918:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Enable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_ENABLE();
 800391a:	4b7e      	ldr	r3, [pc, #504]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 800391c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800391e:	4b7d      	ldr	r3, [pc, #500]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003920:	2101      	movs	r1, #1
 8003922:	430a      	orrs	r2, r1
 8003924:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003926:	f7ff facf 	bl	8002ec8 <HAL_GetTick>
 800392a:	0003      	movs	r3, r0
 800392c:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 800392e:	e008      	b.n	8003942 <HAL_RCC_OscConfig+0x44e>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8003930:	f7ff faca 	bl	8002ec8 <HAL_GetTick>
 8003934:	0002      	movs	r2, r0
 8003936:	69bb      	ldr	r3, [r7, #24]
 8003938:	1ad3      	subs	r3, r2, r3
 800393a:	2b02      	cmp	r3, #2
 800393c:	d901      	bls.n	8003942 <HAL_RCC_OscConfig+0x44e>
        {
          return HAL_TIMEOUT;
 800393e:	2303      	movs	r3, #3
 8003940:	e0e3      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8003942:	4b74      	ldr	r3, [pc, #464]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003944:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003946:	2202      	movs	r2, #2
 8003948:	4013      	ands	r3, r2
 800394a:	d0f1      	beq.n	8003930 <HAL_RCC_OscConfig+0x43c>
        }      
      } 

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 800394c:	4b71      	ldr	r3, [pc, #452]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 800394e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003950:	22f8      	movs	r2, #248	@ 0xf8
 8003952:	4393      	bics	r3, r2
 8003954:	0019      	movs	r1, r3
 8003956:	687b      	ldr	r3, [r7, #4]
 8003958:	699b      	ldr	r3, [r3, #24]
 800395a:	00da      	lsls	r2, r3, #3
 800395c:	4b6d      	ldr	r3, [pc, #436]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 800395e:	430a      	orrs	r2, r1
 8003960:	635a      	str	r2, [r3, #52]	@ 0x34
 8003962:	e034      	b.n	80039ce <HAL_RCC_OscConfig+0x4da>
    }
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	695b      	ldr	r3, [r3, #20]
 8003968:	3305      	adds	r3, #5
 800396a:	d111      	bne.n	8003990 <HAL_RCC_OscConfig+0x49c>
    {
      /* Enable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_ENABLE();
 800396c:	4b69      	ldr	r3, [pc, #420]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 800396e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003970:	4b68      	ldr	r3, [pc, #416]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003972:	2104      	movs	r1, #4
 8003974:	438a      	bics	r2, r1
 8003976:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8003978:	4b66      	ldr	r3, [pc, #408]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 800397a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800397c:	22f8      	movs	r2, #248	@ 0xf8
 800397e:	4393      	bics	r3, r2
 8003980:	0019      	movs	r1, r3
 8003982:	687b      	ldr	r3, [r7, #4]
 8003984:	699b      	ldr	r3, [r3, #24]
 8003986:	00da      	lsls	r2, r3, #3
 8003988:	4b62      	ldr	r3, [pc, #392]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 800398a:	430a      	orrs	r2, r1
 800398c:	635a      	str	r2, [r3, #52]	@ 0x34
 800398e:	e01e      	b.n	80039ce <HAL_RCC_OscConfig+0x4da>
    }
    else
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8003990:	4b60      	ldr	r3, [pc, #384]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003992:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003994:	4b5f      	ldr	r3, [pc, #380]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003996:	2104      	movs	r1, #4
 8003998:	430a      	orrs	r2, r1
 800399a:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Disable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_DISABLE();
 800399c:	4b5d      	ldr	r3, [pc, #372]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 800399e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80039a0:	4b5c      	ldr	r3, [pc, #368]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 80039a2:	2101      	movs	r1, #1
 80039a4:	438a      	bics	r2, r1
 80039a6:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80039a8:	f7ff fa8e 	bl	8002ec8 <HAL_GetTick>
 80039ac:	0003      	movs	r3, r0
 80039ae:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 80039b0:	e008      	b.n	80039c4 <HAL_RCC_OscConfig+0x4d0>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 80039b2:	f7ff fa89 	bl	8002ec8 <HAL_GetTick>
 80039b6:	0002      	movs	r2, r0
 80039b8:	69bb      	ldr	r3, [r7, #24]
 80039ba:	1ad3      	subs	r3, r2, r3
 80039bc:	2b02      	cmp	r3, #2
 80039be:	d901      	bls.n	80039c4 <HAL_RCC_OscConfig+0x4d0>
        {
          return HAL_TIMEOUT;
 80039c0:	2303      	movs	r3, #3
 80039c2:	e0a2      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 80039c4:	4b53      	ldr	r3, [pc, #332]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 80039c6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80039c8:	2202      	movs	r2, #2
 80039ca:	4013      	ands	r3, r2
 80039cc:	d1f1      	bne.n	80039b2 <HAL_RCC_OscConfig+0x4be>
#endif /* RCC_HSI48_SUPPORT */
       
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	6a1b      	ldr	r3, [r3, #32]
 80039d2:	2b00      	cmp	r3, #0
 80039d4:	d100      	bne.n	80039d8 <HAL_RCC_OscConfig+0x4e4>
 80039d6:	e097      	b.n	8003b08 <HAL_RCC_OscConfig+0x614>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80039d8:	4b4e      	ldr	r3, [pc, #312]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 80039da:	685b      	ldr	r3, [r3, #4]
 80039dc:	220c      	movs	r2, #12
 80039de:	4013      	ands	r3, r2
 80039e0:	2b08      	cmp	r3, #8
 80039e2:	d100      	bne.n	80039e6 <HAL_RCC_OscConfig+0x4f2>
 80039e4:	e06b      	b.n	8003abe <HAL_RCC_OscConfig+0x5ca>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	6a1b      	ldr	r3, [r3, #32]
 80039ea:	2b02      	cmp	r3, #2
 80039ec:	d14c      	bne.n	8003a88 <HAL_RCC_OscConfig+0x594>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
  
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80039ee:	4b49      	ldr	r3, [pc, #292]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 80039f0:	681a      	ldr	r2, [r3, #0]
 80039f2:	4b48      	ldr	r3, [pc, #288]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 80039f4:	494a      	ldr	r1, [pc, #296]	@ (8003b20 <HAL_RCC_OscConfig+0x62c>)
 80039f6:	400a      	ands	r2, r1
 80039f8:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80039fa:	f7ff fa65 	bl	8002ec8 <HAL_GetTick>
 80039fe:	0003      	movs	r3, r0
 8003a00:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003a02:	e008      	b.n	8003a16 <HAL_RCC_OscConfig+0x522>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003a04:	f7ff fa60 	bl	8002ec8 <HAL_GetTick>
 8003a08:	0002      	movs	r2, r0
 8003a0a:	69bb      	ldr	r3, [r7, #24]
 8003a0c:	1ad3      	subs	r3, r2, r3
 8003a0e:	2b02      	cmp	r3, #2
 8003a10:	d901      	bls.n	8003a16 <HAL_RCC_OscConfig+0x522>
          {
            return HAL_TIMEOUT;
 8003a12:	2303      	movs	r3, #3
 8003a14:	e079      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003a16:	4b3f      	ldr	r3, [pc, #252]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003a18:	681a      	ldr	r2, [r3, #0]
 8003a1a:	2380      	movs	r3, #128	@ 0x80
 8003a1c:	049b      	lsls	r3, r3, #18
 8003a1e:	4013      	ands	r3, r2
 8003a20:	d1f0      	bne.n	8003a04 <HAL_RCC_OscConfig+0x510>
          }
        }

        /* Configure the main PLL clock source, predivider and multiplication factor. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8003a22:	4b3c      	ldr	r3, [pc, #240]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003a24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003a26:	220f      	movs	r2, #15
 8003a28:	4393      	bics	r3, r2
 8003a2a:	0019      	movs	r1, r3
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003a30:	4b38      	ldr	r3, [pc, #224]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003a32:	430a      	orrs	r2, r1
 8003a34:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003a36:	4b37      	ldr	r3, [pc, #220]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003a38:	685b      	ldr	r3, [r3, #4]
 8003a3a:	4a3a      	ldr	r2, [pc, #232]	@ (8003b24 <HAL_RCC_OscConfig+0x630>)
 8003a3c:	4013      	ands	r3, r2
 8003a3e:	0019      	movs	r1, r3
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003a48:	431a      	orrs	r2, r3
 8003a4a:	4b32      	ldr	r3, [pc, #200]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003a4c:	430a      	orrs	r2, r1
 8003a4e:	605a      	str	r2, [r3, #4]
                             RCC_OscInitStruct->PLL.PREDIV,
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8003a50:	4b30      	ldr	r3, [pc, #192]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003a52:	681a      	ldr	r2, [r3, #0]
 8003a54:	4b2f      	ldr	r3, [pc, #188]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003a56:	2180      	movs	r1, #128	@ 0x80
 8003a58:	0449      	lsls	r1, r1, #17
 8003a5a:	430a      	orrs	r2, r1
 8003a5c:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003a5e:	f7ff fa33 	bl	8002ec8 <HAL_GetTick>
 8003a62:	0003      	movs	r3, r0
 8003a64:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8003a66:	e008      	b.n	8003a7a <HAL_RCC_OscConfig+0x586>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003a68:	f7ff fa2e 	bl	8002ec8 <HAL_GetTick>
 8003a6c:	0002      	movs	r2, r0
 8003a6e:	69bb      	ldr	r3, [r7, #24]
 8003a70:	1ad3      	subs	r3, r2, r3
 8003a72:	2b02      	cmp	r3, #2
 8003a74:	d901      	bls.n	8003a7a <HAL_RCC_OscConfig+0x586>
          {
            return HAL_TIMEOUT;
 8003a76:	2303      	movs	r3, #3
 8003a78:	e047      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8003a7a:	4b26      	ldr	r3, [pc, #152]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003a7c:	681a      	ldr	r2, [r3, #0]
 8003a7e:	2380      	movs	r3, #128	@ 0x80
 8003a80:	049b      	lsls	r3, r3, #18
 8003a82:	4013      	ands	r3, r2
 8003a84:	d0f0      	beq.n	8003a68 <HAL_RCC_OscConfig+0x574>
 8003a86:	e03f      	b.n	8003b08 <HAL_RCC_OscConfig+0x614>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8003a88:	4b22      	ldr	r3, [pc, #136]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003a8a:	681a      	ldr	r2, [r3, #0]
 8003a8c:	4b21      	ldr	r3, [pc, #132]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003a8e:	4924      	ldr	r1, [pc, #144]	@ (8003b20 <HAL_RCC_OscConfig+0x62c>)
 8003a90:	400a      	ands	r2, r1
 8003a92:	601a      	str	r2, [r3, #0]
 
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003a94:	f7ff fa18 	bl	8002ec8 <HAL_GetTick>
 8003a98:	0003      	movs	r3, r0
 8003a9a:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003a9c:	e008      	b.n	8003ab0 <HAL_RCC_OscConfig+0x5bc>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003a9e:	f7ff fa13 	bl	8002ec8 <HAL_GetTick>
 8003aa2:	0002      	movs	r2, r0
 8003aa4:	69bb      	ldr	r3, [r7, #24]
 8003aa6:	1ad3      	subs	r3, r2, r3
 8003aa8:	2b02      	cmp	r3, #2
 8003aaa:	d901      	bls.n	8003ab0 <HAL_RCC_OscConfig+0x5bc>
          {
            return HAL_TIMEOUT;
 8003aac:	2303      	movs	r3, #3
 8003aae:	e02c      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003ab0:	4b18      	ldr	r3, [pc, #96]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003ab2:	681a      	ldr	r2, [r3, #0]
 8003ab4:	2380      	movs	r3, #128	@ 0x80
 8003ab6:	049b      	lsls	r3, r3, #18
 8003ab8:	4013      	ands	r3, r2
 8003aba:	d1f0      	bne.n	8003a9e <HAL_RCC_OscConfig+0x5aa>
 8003abc:	e024      	b.n	8003b08 <HAL_RCC_OscConfig+0x614>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8003abe:	687b      	ldr	r3, [r7, #4]
 8003ac0:	6a1b      	ldr	r3, [r3, #32]
 8003ac2:	2b01      	cmp	r3, #1
 8003ac4:	d101      	bne.n	8003aca <HAL_RCC_OscConfig+0x5d6>
      {
        return HAL_ERROR;
 8003ac6:	2301      	movs	r3, #1
 8003ac8:	e01f      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config  = RCC->CFGR;
 8003aca:	4b12      	ldr	r3, [pc, #72]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003acc:	685b      	ldr	r3, [r3, #4]
 8003ace:	617b      	str	r3, [r7, #20]
        pll_config2 = RCC->CFGR2;
 8003ad0:	4b10      	ldr	r3, [pc, #64]	@ (8003b14 <HAL_RCC_OscConfig+0x620>)
 8003ad2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003ad4:	613b      	str	r3, [r7, #16]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003ad6:	697a      	ldr	r2, [r7, #20]
 8003ad8:	2380      	movs	r3, #128	@ 0x80
 8003ada:	025b      	lsls	r3, r3, #9
 8003adc:	401a      	ands	r2, r3
 8003ade:	687b      	ldr	r3, [r7, #4]
 8003ae0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ae2:	429a      	cmp	r2, r3
 8003ae4:	d10e      	bne.n	8003b04 <HAL_RCC_OscConfig+0x610>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8003ae6:	693b      	ldr	r3, [r7, #16]
 8003ae8:	220f      	movs	r2, #15
 8003aea:	401a      	ands	r2, r3
 8003aec:	687b      	ldr	r3, [r7, #4]
 8003aee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003af0:	429a      	cmp	r2, r3
 8003af2:	d107      	bne.n	8003b04 <HAL_RCC_OscConfig+0x610>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 8003af4:	697a      	ldr	r2, [r7, #20]
 8003af6:	23f0      	movs	r3, #240	@ 0xf0
 8003af8:	039b      	lsls	r3, r3, #14
 8003afa:	401a      	ands	r2, r3
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8003b00:	429a      	cmp	r2, r3
 8003b02:	d001      	beq.n	8003b08 <HAL_RCC_OscConfig+0x614>
        {
          return HAL_ERROR;
 8003b04:	2301      	movs	r3, #1
 8003b06:	e000      	b.n	8003b0a <HAL_RCC_OscConfig+0x616>
        }
      }
    }
  }

  return HAL_OK;
 8003b08:	2300      	movs	r3, #0
}
 8003b0a:	0018      	movs	r0, r3
 8003b0c:	46bd      	mov	sp, r7
 8003b0e:	b008      	add	sp, #32
 8003b10:	bd80      	pop	{r7, pc}
 8003b12:	46c0      	nop			@ (mov r8, r8)
 8003b14:	40021000 	.word	0x40021000
 8003b18:	00001388 	.word	0x00001388
 8003b1c:	efffffff 	.word	0xefffffff
 8003b20:	feffffff 	.word	0xfeffffff
 8003b24:	ffc2ffff 	.word	0xffc2ffff

08003b28 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8003b28:	b580      	push	{r7, lr}
 8003b2a:	b084      	sub	sp, #16
 8003b2c:	af00      	add	r7, sp, #0
 8003b2e:	6078      	str	r0, [r7, #4]
 8003b30:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8003b32:	687b      	ldr	r3, [r7, #4]
 8003b34:	2b00      	cmp	r3, #0
 8003b36:	d101      	bne.n	8003b3c <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8003b38:	2301      	movs	r3, #1
 8003b3a:	e0b3      	b.n	8003ca4 <HAL_RCC_ClockConfig+0x17c>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
  must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8003b3c:	4b5b      	ldr	r3, [pc, #364]	@ (8003cac <HAL_RCC_ClockConfig+0x184>)
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	2201      	movs	r2, #1
 8003b42:	4013      	ands	r3, r2
 8003b44:	683a      	ldr	r2, [r7, #0]
 8003b46:	429a      	cmp	r2, r3
 8003b48:	d911      	bls.n	8003b6e <HAL_RCC_ClockConfig+0x46>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003b4a:	4b58      	ldr	r3, [pc, #352]	@ (8003cac <HAL_RCC_ClockConfig+0x184>)
 8003b4c:	681b      	ldr	r3, [r3, #0]
 8003b4e:	2201      	movs	r2, #1
 8003b50:	4393      	bics	r3, r2
 8003b52:	0019      	movs	r1, r3
 8003b54:	4b55      	ldr	r3, [pc, #340]	@ (8003cac <HAL_RCC_ClockConfig+0x184>)
 8003b56:	683a      	ldr	r2, [r7, #0]
 8003b58:	430a      	orrs	r2, r1
 8003b5a:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003b5c:	4b53      	ldr	r3, [pc, #332]	@ (8003cac <HAL_RCC_ClockConfig+0x184>)
 8003b5e:	681b      	ldr	r3, [r3, #0]
 8003b60:	2201      	movs	r2, #1
 8003b62:	4013      	ands	r3, r2
 8003b64:	683a      	ldr	r2, [r7, #0]
 8003b66:	429a      	cmp	r2, r3
 8003b68:	d001      	beq.n	8003b6e <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 8003b6a:	2301      	movs	r3, #1
 8003b6c:	e09a      	b.n	8003ca4 <HAL_RCC_ClockConfig+0x17c>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8003b6e:	687b      	ldr	r3, [r7, #4]
 8003b70:	681b      	ldr	r3, [r3, #0]
 8003b72:	2202      	movs	r2, #2
 8003b74:	4013      	ands	r3, r2
 8003b76:	d015      	beq.n	8003ba4 <HAL_RCC_ClockConfig+0x7c>
  {
    /* Set the highest APB divider in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003b78:	687b      	ldr	r3, [r7, #4]
 8003b7a:	681b      	ldr	r3, [r3, #0]
 8003b7c:	2204      	movs	r2, #4
 8003b7e:	4013      	ands	r3, r2
 8003b80:	d006      	beq.n	8003b90 <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8003b82:	4b4b      	ldr	r3, [pc, #300]	@ (8003cb0 <HAL_RCC_ClockConfig+0x188>)
 8003b84:	685a      	ldr	r2, [r3, #4]
 8003b86:	4b4a      	ldr	r3, [pc, #296]	@ (8003cb0 <HAL_RCC_ClockConfig+0x188>)
 8003b88:	21e0      	movs	r1, #224	@ 0xe0
 8003b8a:	00c9      	lsls	r1, r1, #3
 8003b8c:	430a      	orrs	r2, r1
 8003b8e:	605a      	str	r2, [r3, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8003b90:	4b47      	ldr	r3, [pc, #284]	@ (8003cb0 <HAL_RCC_ClockConfig+0x188>)
 8003b92:	685b      	ldr	r3, [r3, #4]
 8003b94:	22f0      	movs	r2, #240	@ 0xf0
 8003b96:	4393      	bics	r3, r2
 8003b98:	0019      	movs	r1, r3
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	689a      	ldr	r2, [r3, #8]
 8003b9e:	4b44      	ldr	r3, [pc, #272]	@ (8003cb0 <HAL_RCC_ClockConfig+0x188>)
 8003ba0:	430a      	orrs	r2, r1
 8003ba2:	605a      	str	r2, [r3, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	681b      	ldr	r3, [r3, #0]
 8003ba8:	2201      	movs	r2, #1
 8003baa:	4013      	ands	r3, r2
 8003bac:	d040      	beq.n	8003c30 <HAL_RCC_ClockConfig+0x108>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
    
    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003bae:	687b      	ldr	r3, [r7, #4]
 8003bb0:	685b      	ldr	r3, [r3, #4]
 8003bb2:	2b01      	cmp	r3, #1
 8003bb4:	d107      	bne.n	8003bc6 <HAL_RCC_ClockConfig+0x9e>
    {
      /* Check the HSE ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003bb6:	4b3e      	ldr	r3, [pc, #248]	@ (8003cb0 <HAL_RCC_ClockConfig+0x188>)
 8003bb8:	681a      	ldr	r2, [r3, #0]
 8003bba:	2380      	movs	r3, #128	@ 0x80
 8003bbc:	029b      	lsls	r3, r3, #10
 8003bbe:	4013      	ands	r3, r2
 8003bc0:	d114      	bne.n	8003bec <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8003bc2:	2301      	movs	r3, #1
 8003bc4:	e06e      	b.n	8003ca4 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	685b      	ldr	r3, [r3, #4]
 8003bca:	2b02      	cmp	r3, #2
 8003bcc:	d107      	bne.n	8003bde <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the PLL ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8003bce:	4b38      	ldr	r3, [pc, #224]	@ (8003cb0 <HAL_RCC_ClockConfig+0x188>)
 8003bd0:	681a      	ldr	r2, [r3, #0]
 8003bd2:	2380      	movs	r3, #128	@ 0x80
 8003bd4:	049b      	lsls	r3, r3, #18
 8003bd6:	4013      	ands	r3, r2
 8003bd8:	d108      	bne.n	8003bec <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8003bda:	2301      	movs	r3, #1
 8003bdc:	e062      	b.n	8003ca4 <HAL_RCC_ClockConfig+0x17c>
#endif /* RCC_CFGR_SWS_HSI48 */
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003bde:	4b34      	ldr	r3, [pc, #208]	@ (8003cb0 <HAL_RCC_ClockConfig+0x188>)
 8003be0:	681b      	ldr	r3, [r3, #0]
 8003be2:	2202      	movs	r2, #2
 8003be4:	4013      	ands	r3, r2
 8003be6:	d101      	bne.n	8003bec <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8003be8:	2301      	movs	r3, #1
 8003bea:	e05b      	b.n	8003ca4 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8003bec:	4b30      	ldr	r3, [pc, #192]	@ (8003cb0 <HAL_RCC_ClockConfig+0x188>)
 8003bee:	685b      	ldr	r3, [r3, #4]
 8003bf0:	2203      	movs	r2, #3
 8003bf2:	4393      	bics	r3, r2
 8003bf4:	0019      	movs	r1, r3
 8003bf6:	687b      	ldr	r3, [r7, #4]
 8003bf8:	685a      	ldr	r2, [r3, #4]
 8003bfa:	4b2d      	ldr	r3, [pc, #180]	@ (8003cb0 <HAL_RCC_ClockConfig+0x188>)
 8003bfc:	430a      	orrs	r2, r1
 8003bfe:	605a      	str	r2, [r3, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8003c00:	f7ff f962 	bl	8002ec8 <HAL_GetTick>
 8003c04:	0003      	movs	r3, r0
 8003c06:	60fb      	str	r3, [r7, #12]
    
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003c08:	e009      	b.n	8003c1e <HAL_RCC_ClockConfig+0xf6>
    {
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003c0a:	f7ff f95d 	bl	8002ec8 <HAL_GetTick>
 8003c0e:	0002      	movs	r2, r0
 8003c10:	68fb      	ldr	r3, [r7, #12]
 8003c12:	1ad3      	subs	r3, r2, r3
 8003c14:	4a27      	ldr	r2, [pc, #156]	@ (8003cb4 <HAL_RCC_ClockConfig+0x18c>)
 8003c16:	4293      	cmp	r3, r2
 8003c18:	d901      	bls.n	8003c1e <HAL_RCC_ClockConfig+0xf6>
      {
        return HAL_TIMEOUT;
 8003c1a:	2303      	movs	r3, #3
 8003c1c:	e042      	b.n	8003ca4 <HAL_RCC_ClockConfig+0x17c>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003c1e:	4b24      	ldr	r3, [pc, #144]	@ (8003cb0 <HAL_RCC_ClockConfig+0x188>)
 8003c20:	685b      	ldr	r3, [r3, #4]
 8003c22:	220c      	movs	r2, #12
 8003c24:	401a      	ands	r2, r3
 8003c26:	687b      	ldr	r3, [r7, #4]
 8003c28:	685b      	ldr	r3, [r3, #4]
 8003c2a:	009b      	lsls	r3, r3, #2
 8003c2c:	429a      	cmp	r2, r3
 8003c2e:	d1ec      	bne.n	8003c0a <HAL_RCC_ClockConfig+0xe2>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8003c30:	4b1e      	ldr	r3, [pc, #120]	@ (8003cac <HAL_RCC_ClockConfig+0x184>)
 8003c32:	681b      	ldr	r3, [r3, #0]
 8003c34:	2201      	movs	r2, #1
 8003c36:	4013      	ands	r3, r2
 8003c38:	683a      	ldr	r2, [r7, #0]
 8003c3a:	429a      	cmp	r2, r3
 8003c3c:	d211      	bcs.n	8003c62 <HAL_RCC_ClockConfig+0x13a>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003c3e:	4b1b      	ldr	r3, [pc, #108]	@ (8003cac <HAL_RCC_ClockConfig+0x184>)
 8003c40:	681b      	ldr	r3, [r3, #0]
 8003c42:	2201      	movs	r2, #1
 8003c44:	4393      	bics	r3, r2
 8003c46:	0019      	movs	r1, r3
 8003c48:	4b18      	ldr	r3, [pc, #96]	@ (8003cac <HAL_RCC_ClockConfig+0x184>)
 8003c4a:	683a      	ldr	r2, [r7, #0]
 8003c4c:	430a      	orrs	r2, r1
 8003c4e:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003c50:	4b16      	ldr	r3, [pc, #88]	@ (8003cac <HAL_RCC_ClockConfig+0x184>)
 8003c52:	681b      	ldr	r3, [r3, #0]
 8003c54:	2201      	movs	r2, #1
 8003c56:	4013      	ands	r3, r2
 8003c58:	683a      	ldr	r2, [r7, #0]
 8003c5a:	429a      	cmp	r2, r3
 8003c5c:	d001      	beq.n	8003c62 <HAL_RCC_ClockConfig+0x13a>
    {
      return HAL_ERROR;
 8003c5e:	2301      	movs	r3, #1
 8003c60:	e020      	b.n	8003ca4 <HAL_RCC_ClockConfig+0x17c>
    }
  }    

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003c62:	687b      	ldr	r3, [r7, #4]
 8003c64:	681b      	ldr	r3, [r3, #0]
 8003c66:	2204      	movs	r2, #4
 8003c68:	4013      	ands	r3, r2
 8003c6a:	d009      	beq.n	8003c80 <HAL_RCC_ClockConfig+0x158>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8003c6c:	4b10      	ldr	r3, [pc, #64]	@ (8003cb0 <HAL_RCC_ClockConfig+0x188>)
 8003c6e:	685b      	ldr	r3, [r3, #4]
 8003c70:	4a11      	ldr	r2, [pc, #68]	@ (8003cb8 <HAL_RCC_ClockConfig+0x190>)
 8003c72:	4013      	ands	r3, r2
 8003c74:	0019      	movs	r1, r3
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	68da      	ldr	r2, [r3, #12]
 8003c7a:	4b0d      	ldr	r3, [pc, #52]	@ (8003cb0 <HAL_RCC_ClockConfig+0x188>)
 8003c7c:	430a      	orrs	r2, r1
 8003c7e:	605a      	str	r2, [r3, #4]
  }
  
  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 8003c80:	f000 f820 	bl	8003cc4 <HAL_RCC_GetSysClockFreq>
 8003c84:	0001      	movs	r1, r0
 8003c86:	4b0a      	ldr	r3, [pc, #40]	@ (8003cb0 <HAL_RCC_ClockConfig+0x188>)
 8003c88:	685b      	ldr	r3, [r3, #4]
 8003c8a:	091b      	lsrs	r3, r3, #4
 8003c8c:	220f      	movs	r2, #15
 8003c8e:	4013      	ands	r3, r2
 8003c90:	4a0a      	ldr	r2, [pc, #40]	@ (8003cbc <HAL_RCC_ClockConfig+0x194>)
 8003c92:	5cd3      	ldrb	r3, [r2, r3]
 8003c94:	000a      	movs	r2, r1
 8003c96:	40da      	lsrs	r2, r3
 8003c98:	4b09      	ldr	r3, [pc, #36]	@ (8003cc0 <HAL_RCC_ClockConfig+0x198>)
 8003c9a:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);
 8003c9c:	2000      	movs	r0, #0
 8003c9e:	f7ff f8cd 	bl	8002e3c <HAL_InitTick>
  
  return HAL_OK;
 8003ca2:	2300      	movs	r3, #0
}
 8003ca4:	0018      	movs	r0, r3
 8003ca6:	46bd      	mov	sp, r7
 8003ca8:	b004      	add	sp, #16
 8003caa:	bd80      	pop	{r7, pc}
 8003cac:	40022000 	.word	0x40022000
 8003cb0:	40021000 	.word	0x40021000
 8003cb4:	00001388 	.word	0x00001388
 8003cb8:	fffff8ff 	.word	0xfffff8ff
 8003cbc:	0800a2bc 	.word	0x0800a2bc
 8003cc0:	20000004 	.word	0x20000004

08003cc4 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *         
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8003cc4:	b590      	push	{r4, r7, lr}
 8003cc6:	b08f      	sub	sp, #60	@ 0x3c
 8003cc8:	af00      	add	r7, sp, #0
  const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 8003cca:	2314      	movs	r3, #20
 8003ccc:	18fb      	adds	r3, r7, r3
 8003cce:	4a2b      	ldr	r2, [pc, #172]	@ (8003d7c <HAL_RCC_GetSysClockFreq+0xb8>)
 8003cd0:	ca13      	ldmia	r2!, {r0, r1, r4}
 8003cd2:	c313      	stmia	r3!, {r0, r1, r4}
 8003cd4:	6812      	ldr	r2, [r2, #0]
 8003cd6:	601a      	str	r2, [r3, #0]
                                         10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
  const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 8003cd8:	1d3b      	adds	r3, r7, #4
 8003cda:	4a29      	ldr	r2, [pc, #164]	@ (8003d80 <HAL_RCC_GetSysClockFreq+0xbc>)
 8003cdc:	ca13      	ldmia	r2!, {r0, r1, r4}
 8003cde:	c313      	stmia	r3!, {r0, r1, r4}
 8003ce0:	6812      	ldr	r2, [r2, #0]
 8003ce2:	601a      	str	r2, [r3, #0]
                                           9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};

  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 8003ce4:	2300      	movs	r3, #0
 8003ce6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003ce8:	2300      	movs	r3, #0
 8003cea:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003cec:	2300      	movs	r3, #0
 8003cee:	637b      	str	r3, [r7, #52]	@ 0x34
 8003cf0:	2300      	movs	r3, #0
 8003cf2:	627b      	str	r3, [r7, #36]	@ 0x24
  uint32_t sysclockfreq = 0U;
 8003cf4:	2300      	movs	r3, #0
 8003cf6:	633b      	str	r3, [r7, #48]	@ 0x30
  
  tmpreg = RCC->CFGR;
 8003cf8:	4b22      	ldr	r3, [pc, #136]	@ (8003d84 <HAL_RCC_GetSysClockFreq+0xc0>)
 8003cfa:	685b      	ldr	r3, [r3, #4]
 8003cfc:	62fb      	str	r3, [r7, #44]	@ 0x2c
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8003cfe:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003d00:	220c      	movs	r2, #12
 8003d02:	4013      	ands	r3, r2
 8003d04:	2b04      	cmp	r3, #4
 8003d06:	d002      	beq.n	8003d0e <HAL_RCC_GetSysClockFreq+0x4a>
 8003d08:	2b08      	cmp	r3, #8
 8003d0a:	d003      	beq.n	8003d14 <HAL_RCC_GetSysClockFreq+0x50>
 8003d0c:	e02d      	b.n	8003d6a <HAL_RCC_GetSysClockFreq+0xa6>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8003d0e:	4b1e      	ldr	r3, [pc, #120]	@ (8003d88 <HAL_RCC_GetSysClockFreq+0xc4>)
 8003d10:	633b      	str	r3, [r7, #48]	@ 0x30
      break;
 8003d12:	e02d      	b.n	8003d70 <HAL_RCC_GetSysClockFreq+0xac>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 8003d14:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003d16:	0c9b      	lsrs	r3, r3, #18
 8003d18:	220f      	movs	r2, #15
 8003d1a:	4013      	ands	r3, r2
 8003d1c:	2214      	movs	r2, #20
 8003d1e:	18ba      	adds	r2, r7, r2
 8003d20:	5cd3      	ldrb	r3, [r2, r3]
 8003d22:	627b      	str	r3, [r7, #36]	@ 0x24
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8003d24:	4b17      	ldr	r3, [pc, #92]	@ (8003d84 <HAL_RCC_GetSysClockFreq+0xc0>)
 8003d26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003d28:	220f      	movs	r2, #15
 8003d2a:	4013      	ands	r3, r2
 8003d2c:	1d3a      	adds	r2, r7, #4
 8003d2e:	5cd3      	ldrb	r3, [r2, r3]
 8003d30:	62bb      	str	r3, [r7, #40]	@ 0x28
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 8003d32:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8003d34:	2380      	movs	r3, #128	@ 0x80
 8003d36:	025b      	lsls	r3, r3, #9
 8003d38:	4013      	ands	r3, r2
 8003d3a:	d009      	beq.n	8003d50 <HAL_RCC_GetSysClockFreq+0x8c>
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8003d3c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003d3e:	4812      	ldr	r0, [pc, #72]	@ (8003d88 <HAL_RCC_GetSysClockFreq+0xc4>)
 8003d40:	f7fc f9fe 	bl	8000140 <__udivsi3>
 8003d44:	0003      	movs	r3, r0
 8003d46:	001a      	movs	r2, r3
 8003d48:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003d4a:	4353      	muls	r3, r2
 8003d4c:	637b      	str	r3, [r7, #52]	@ 0x34
 8003d4e:	e009      	b.n	8003d64 <HAL_RCC_GetSysClockFreq+0xa0>
#if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx) || defined(STM32F030xC))
        /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
#else
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 8003d50:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8003d52:	000a      	movs	r2, r1
 8003d54:	0152      	lsls	r2, r2, #5
 8003d56:	1a52      	subs	r2, r2, r1
 8003d58:	0193      	lsls	r3, r2, #6
 8003d5a:	1a9b      	subs	r3, r3, r2
 8003d5c:	00db      	lsls	r3, r3, #3
 8003d5e:	185b      	adds	r3, r3, r1
 8003d60:	021b      	lsls	r3, r3, #8
 8003d62:	637b      	str	r3, [r7, #52]	@ 0x34
#endif
      }
      sysclockfreq = pllclk;
 8003d64:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003d66:	633b      	str	r3, [r7, #48]	@ 0x30
      break;
 8003d68:	e002      	b.n	8003d70 <HAL_RCC_GetSysClockFreq+0xac>
    }
#endif /* RCC_CFGR_SWS_HSI48 */
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 8003d6a:	4b07      	ldr	r3, [pc, #28]	@ (8003d88 <HAL_RCC_GetSysClockFreq+0xc4>)
 8003d6c:	633b      	str	r3, [r7, #48]	@ 0x30
      break;
 8003d6e:	46c0      	nop			@ (mov r8, r8)
    }
  }
  return sysclockfreq;
 8003d70:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
}
 8003d72:	0018      	movs	r0, r3
 8003d74:	46bd      	mov	sp, r7
 8003d76:	b00f      	add	sp, #60	@ 0x3c
 8003d78:	bd90      	pop	{r4, r7, pc}
 8003d7a:	46c0      	nop			@ (mov r8, r8)
 8003d7c:	0800a250 	.word	0x0800a250
 8003d80:	0800a260 	.word	0x0800a260
 8003d84:	40021000 	.word	0x40021000
 8003d88:	007a1200 	.word	0x007a1200

08003d8c <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8003d8c:	b580      	push	{r7, lr}
 8003d8e:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8003d90:	4b02      	ldr	r3, [pc, #8]	@ (8003d9c <HAL_RCC_GetHCLKFreq+0x10>)
 8003d92:	681b      	ldr	r3, [r3, #0]
}
 8003d94:	0018      	movs	r0, r3
 8003d96:	46bd      	mov	sp, r7
 8003d98:	bd80      	pop	{r7, pc}
 8003d9a:	46c0      	nop			@ (mov r8, r8)
 8003d9c:	20000004 	.word	0x20000004

08003da0 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8003da0:	b580      	push	{r7, lr}
 8003da2:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNUMBER]);
 8003da4:	f7ff fff2 	bl	8003d8c <HAL_RCC_GetHCLKFreq>
 8003da8:	0001      	movs	r1, r0
 8003daa:	4b06      	ldr	r3, [pc, #24]	@ (8003dc4 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003dac:	685b      	ldr	r3, [r3, #4]
 8003dae:	0a1b      	lsrs	r3, r3, #8
 8003db0:	2207      	movs	r2, #7
 8003db2:	4013      	ands	r3, r2
 8003db4:	4a04      	ldr	r2, [pc, #16]	@ (8003dc8 <HAL_RCC_GetPCLK1Freq+0x28>)
 8003db6:	5cd3      	ldrb	r3, [r2, r3]
 8003db8:	40d9      	lsrs	r1, r3
 8003dba:	000b      	movs	r3, r1
}    
 8003dbc:	0018      	movs	r0, r3
 8003dbe:	46bd      	mov	sp, r7
 8003dc0:	bd80      	pop	{r7, pc}
 8003dc2:	46c0      	nop			@ (mov r8, r8)
 8003dc4:	40021000 	.word	0x40021000
 8003dc8:	0800a2cc 	.word	0x0800a2cc

08003dcc <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8003dcc:	b580      	push	{r7, lr}
 8003dce:	b082      	sub	sp, #8
 8003dd0:	af00      	add	r7, sp, #0
 8003dd2:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8003dd4:	687b      	ldr	r3, [r7, #4]
 8003dd6:	2b00      	cmp	r3, #0
 8003dd8:	d101      	bne.n	8003dde <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8003dda:	2301      	movs	r3, #1
 8003ddc:	e044      	b.n	8003e68 <HAL_UART_Init+0x9c>
  {
    /* Check the parameters */
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 8003dde:	687b      	ldr	r3, [r7, #4]
 8003de0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003de2:	2b00      	cmp	r3, #0
 8003de4:	d107      	bne.n	8003df6 <HAL_UART_Init+0x2a>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8003de6:	687b      	ldr	r3, [r7, #4]
 8003de8:	2270      	movs	r2, #112	@ 0x70
 8003dea:	2100      	movs	r1, #0
 8003dec:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8003dee:	687b      	ldr	r3, [r7, #4]
 8003df0:	0018      	movs	r0, r3
 8003df2:	f7fe fe9d 	bl	8002b30 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8003df6:	687b      	ldr	r3, [r7, #4]
 8003df8:	2224      	movs	r2, #36	@ 0x24
 8003dfa:	675a      	str	r2, [r3, #116]	@ 0x74

  __HAL_UART_DISABLE(huart);
 8003dfc:	687b      	ldr	r3, [r7, #4]
 8003dfe:	681b      	ldr	r3, [r3, #0]
 8003e00:	681a      	ldr	r2, [r3, #0]
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	681b      	ldr	r3, [r3, #0]
 8003e06:	2101      	movs	r1, #1
 8003e08:	438a      	bics	r2, r1
 8003e0a:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 8003e0c:	687b      	ldr	r3, [r7, #4]
 8003e0e:	0018      	movs	r0, r3
 8003e10:	f000 fb4e 	bl	80044b0 <UART_SetConfig>
 8003e14:	0003      	movs	r3, r0
 8003e16:	2b01      	cmp	r3, #1
 8003e18:	d101      	bne.n	8003e1e <HAL_UART_Init+0x52>
  {
    return HAL_ERROR;
 8003e1a:	2301      	movs	r3, #1
 8003e1c:	e024      	b.n	8003e68 <HAL_UART_Init+0x9c>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8003e1e:	687b      	ldr	r3, [r7, #4]
 8003e20:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003e22:	2b00      	cmp	r3, #0
 8003e24:	d003      	beq.n	8003e2e <HAL_UART_Init+0x62>
  {
    UART_AdvFeatureConfig(huart);
 8003e26:	687b      	ldr	r3, [r7, #4]
 8003e28:	0018      	movs	r0, r3
 8003e2a:	f000 fcc9 	bl	80047c0 <UART_AdvFeatureConfig>
  - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
  - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 register.*/
#if defined (USART_CR2_LINEN)
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
#else
  CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	681b      	ldr	r3, [r3, #0]
 8003e32:	685a      	ldr	r2, [r3, #4]
 8003e34:	687b      	ldr	r3, [r7, #4]
 8003e36:	681b      	ldr	r3, [r3, #0]
 8003e38:	490d      	ldr	r1, [pc, #52]	@ (8003e70 <HAL_UART_Init+0xa4>)
 8003e3a:	400a      	ands	r2, r1
 8003e3c:	605a      	str	r2, [r3, #4]
#endif /* USART_CR3_IREN */
#else
#if defined (USART_CR3_IREN)
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
#else
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 8003e3e:	687b      	ldr	r3, [r7, #4]
 8003e40:	681b      	ldr	r3, [r3, #0]
 8003e42:	689a      	ldr	r2, [r3, #8]
 8003e44:	687b      	ldr	r3, [r7, #4]
 8003e46:	681b      	ldr	r3, [r3, #0]
 8003e48:	2108      	movs	r1, #8
 8003e4a:	438a      	bics	r2, r1
 8003e4c:	609a      	str	r2, [r3, #8]
#endif /* USART_CR3_IREN*/
#endif /* USART_CR3_SCEN */

  __HAL_UART_ENABLE(huart);
 8003e4e:	687b      	ldr	r3, [r7, #4]
 8003e50:	681b      	ldr	r3, [r3, #0]
 8003e52:	681a      	ldr	r2, [r3, #0]
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	681b      	ldr	r3, [r3, #0]
 8003e58:	2101      	movs	r1, #1
 8003e5a:	430a      	orrs	r2, r1
 8003e5c:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 8003e5e:	687b      	ldr	r3, [r7, #4]
 8003e60:	0018      	movs	r0, r3
 8003e62:	f000 fd61 	bl	8004928 <UART_CheckIdleState>
 8003e66:	0003      	movs	r3, r0
}
 8003e68:	0018      	movs	r0, r3
 8003e6a:	46bd      	mov	sp, r7
 8003e6c:	b002      	add	sp, #8
 8003e6e:	bd80      	pop	{r7, pc}
 8003e70:	fffff7ff 	.word	0xfffff7ff

08003e74 <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8003e74:	b580      	push	{r7, lr}
 8003e76:	b08a      	sub	sp, #40	@ 0x28
 8003e78:	af02      	add	r7, sp, #8
 8003e7a:	60f8      	str	r0, [r7, #12]
 8003e7c:	60b9      	str	r1, [r7, #8]
 8003e7e:	603b      	str	r3, [r7, #0]
 8003e80:	1dbb      	adds	r3, r7, #6
 8003e82:	801a      	strh	r2, [r3, #0]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8003e84:	68fb      	ldr	r3, [r7, #12]
 8003e86:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003e88:	2b20      	cmp	r3, #32
 8003e8a:	d000      	beq.n	8003e8e <HAL_UART_Transmit+0x1a>
 8003e8c:	e094      	b.n	8003fb8 <HAL_UART_Transmit+0x144>
  {
    if ((pData == NULL) || (Size == 0U))
 8003e8e:	68bb      	ldr	r3, [r7, #8]
 8003e90:	2b00      	cmp	r3, #0
 8003e92:	d003      	beq.n	8003e9c <HAL_UART_Transmit+0x28>
 8003e94:	1dbb      	adds	r3, r7, #6
 8003e96:	881b      	ldrh	r3, [r3, #0]
 8003e98:	2b00      	cmp	r3, #0
 8003e9a:	d101      	bne.n	8003ea0 <HAL_UART_Transmit+0x2c>
    {
      return  HAL_ERROR;
 8003e9c:	2301      	movs	r3, #1
 8003e9e:	e08c      	b.n	8003fba <HAL_UART_Transmit+0x146>
    }

    /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
       should be aligned on a u16 frontier, as data to be filled into TDR will be
       handled through a u16 cast. */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003ea0:	68fb      	ldr	r3, [r7, #12]
 8003ea2:	689a      	ldr	r2, [r3, #8]
 8003ea4:	2380      	movs	r3, #128	@ 0x80
 8003ea6:	015b      	lsls	r3, r3, #5
 8003ea8:	429a      	cmp	r2, r3
 8003eaa:	d109      	bne.n	8003ec0 <HAL_UART_Transmit+0x4c>
 8003eac:	68fb      	ldr	r3, [r7, #12]
 8003eae:	691b      	ldr	r3, [r3, #16]
 8003eb0:	2b00      	cmp	r3, #0
 8003eb2:	d105      	bne.n	8003ec0 <HAL_UART_Transmit+0x4c>
    {
      if ((((uint32_t)pData) & 1U) != 0U)
 8003eb4:	68bb      	ldr	r3, [r7, #8]
 8003eb6:	2201      	movs	r2, #1
 8003eb8:	4013      	ands	r3, r2
 8003eba:	d001      	beq.n	8003ec0 <HAL_UART_Transmit+0x4c>
      {
        return  HAL_ERROR;
 8003ebc:	2301      	movs	r3, #1
 8003ebe:	e07c      	b.n	8003fba <HAL_UART_Transmit+0x146>
      }
    }

    __HAL_LOCK(huart);
 8003ec0:	68fb      	ldr	r3, [r7, #12]
 8003ec2:	2270      	movs	r2, #112	@ 0x70
 8003ec4:	5c9b      	ldrb	r3, [r3, r2]
 8003ec6:	2b01      	cmp	r3, #1
 8003ec8:	d101      	bne.n	8003ece <HAL_UART_Transmit+0x5a>
 8003eca:	2302      	movs	r3, #2
 8003ecc:	e075      	b.n	8003fba <HAL_UART_Transmit+0x146>
 8003ece:	68fb      	ldr	r3, [r7, #12]
 8003ed0:	2270      	movs	r2, #112	@ 0x70
 8003ed2:	2101      	movs	r1, #1
 8003ed4:	5499      	strb	r1, [r3, r2]

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003ed6:	68fb      	ldr	r3, [r7, #12]
 8003ed8:	2200      	movs	r2, #0
 8003eda:	67da      	str	r2, [r3, #124]	@ 0x7c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8003edc:	68fb      	ldr	r3, [r7, #12]
 8003ede:	2221      	movs	r2, #33	@ 0x21
 8003ee0:	675a      	str	r2, [r3, #116]	@ 0x74

    /* Init tickstart for timeout managment*/
    tickstart = HAL_GetTick();
 8003ee2:	f7fe fff1 	bl	8002ec8 <HAL_GetTick>
 8003ee6:	0003      	movs	r3, r0
 8003ee8:	617b      	str	r3, [r7, #20]

    huart->TxXferSize  = Size;
 8003eea:	68fb      	ldr	r3, [r7, #12]
 8003eec:	1dba      	adds	r2, r7, #6
 8003eee:	2150      	movs	r1, #80	@ 0x50
 8003ef0:	8812      	ldrh	r2, [r2, #0]
 8003ef2:	525a      	strh	r2, [r3, r1]
    huart->TxXferCount = Size;
 8003ef4:	68fb      	ldr	r3, [r7, #12]
 8003ef6:	1dba      	adds	r2, r7, #6
 8003ef8:	2152      	movs	r1, #82	@ 0x52
 8003efa:	8812      	ldrh	r2, [r2, #0]
 8003efc:	525a      	strh	r2, [r3, r1]

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003efe:	68fb      	ldr	r3, [r7, #12]
 8003f00:	689a      	ldr	r2, [r3, #8]
 8003f02:	2380      	movs	r3, #128	@ 0x80
 8003f04:	015b      	lsls	r3, r3, #5
 8003f06:	429a      	cmp	r2, r3
 8003f08:	d108      	bne.n	8003f1c <HAL_UART_Transmit+0xa8>
 8003f0a:	68fb      	ldr	r3, [r7, #12]
 8003f0c:	691b      	ldr	r3, [r3, #16]
 8003f0e:	2b00      	cmp	r3, #0
 8003f10:	d104      	bne.n	8003f1c <HAL_UART_Transmit+0xa8>
    {
      pdata8bits  = NULL;
 8003f12:	2300      	movs	r3, #0
 8003f14:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 8003f16:	68bb      	ldr	r3, [r7, #8]
 8003f18:	61bb      	str	r3, [r7, #24]
 8003f1a:	e003      	b.n	8003f24 <HAL_UART_Transmit+0xb0>
    }
    else
    {
      pdata8bits  = pData;
 8003f1c:	68bb      	ldr	r3, [r7, #8]
 8003f1e:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8003f20:	2300      	movs	r3, #0
 8003f22:	61bb      	str	r3, [r7, #24]
    }

    while (huart->TxXferCount > 0U)
 8003f24:	e02c      	b.n	8003f80 <HAL_UART_Transmit+0x10c>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8003f26:	697a      	ldr	r2, [r7, #20]
 8003f28:	68f8      	ldr	r0, [r7, #12]
 8003f2a:	683b      	ldr	r3, [r7, #0]
 8003f2c:	9300      	str	r3, [sp, #0]
 8003f2e:	0013      	movs	r3, r2
 8003f30:	2200      	movs	r2, #0
 8003f32:	2180      	movs	r1, #128	@ 0x80
 8003f34:	f000 fd3c 	bl	80049b0 <UART_WaitOnFlagUntilTimeout>
 8003f38:	1e03      	subs	r3, r0, #0
 8003f3a:	d001      	beq.n	8003f40 <HAL_UART_Transmit+0xcc>
      {
        return HAL_TIMEOUT;
 8003f3c:	2303      	movs	r3, #3
 8003f3e:	e03c      	b.n	8003fba <HAL_UART_Transmit+0x146>
      }
      if (pdata8bits == NULL)
 8003f40:	69fb      	ldr	r3, [r7, #28]
 8003f42:	2b00      	cmp	r3, #0
 8003f44:	d10b      	bne.n	8003f5e <HAL_UART_Transmit+0xea>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8003f46:	69bb      	ldr	r3, [r7, #24]
 8003f48:	881a      	ldrh	r2, [r3, #0]
 8003f4a:	68fb      	ldr	r3, [r7, #12]
 8003f4c:	681b      	ldr	r3, [r3, #0]
 8003f4e:	05d2      	lsls	r2, r2, #23
 8003f50:	0dd2      	lsrs	r2, r2, #23
 8003f52:	b292      	uxth	r2, r2
 8003f54:	851a      	strh	r2, [r3, #40]	@ 0x28
        pdata16bits++;
 8003f56:	69bb      	ldr	r3, [r7, #24]
 8003f58:	3302      	adds	r3, #2
 8003f5a:	61bb      	str	r3, [r7, #24]
 8003f5c:	e007      	b.n	8003f6e <HAL_UART_Transmit+0xfa>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8003f5e:	69fb      	ldr	r3, [r7, #28]
 8003f60:	781a      	ldrb	r2, [r3, #0]
 8003f62:	68fb      	ldr	r3, [r7, #12]
 8003f64:	681b      	ldr	r3, [r3, #0]
 8003f66:	851a      	strh	r2, [r3, #40]	@ 0x28
        pdata8bits++;
 8003f68:	69fb      	ldr	r3, [r7, #28]
 8003f6a:	3301      	adds	r3, #1
 8003f6c:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 8003f6e:	68fb      	ldr	r3, [r7, #12]
 8003f70:	2252      	movs	r2, #82	@ 0x52
 8003f72:	5a9b      	ldrh	r3, [r3, r2]
 8003f74:	b29b      	uxth	r3, r3
 8003f76:	3b01      	subs	r3, #1
 8003f78:	b299      	uxth	r1, r3
 8003f7a:	68fb      	ldr	r3, [r7, #12]
 8003f7c:	2252      	movs	r2, #82	@ 0x52
 8003f7e:	5299      	strh	r1, [r3, r2]
    while (huart->TxXferCount > 0U)
 8003f80:	68fb      	ldr	r3, [r7, #12]
 8003f82:	2252      	movs	r2, #82	@ 0x52
 8003f84:	5a9b      	ldrh	r3, [r3, r2]
 8003f86:	b29b      	uxth	r3, r3
 8003f88:	2b00      	cmp	r3, #0
 8003f8a:	d1cc      	bne.n	8003f26 <HAL_UART_Transmit+0xb2>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8003f8c:	697a      	ldr	r2, [r7, #20]
 8003f8e:	68f8      	ldr	r0, [r7, #12]
 8003f90:	683b      	ldr	r3, [r7, #0]
 8003f92:	9300      	str	r3, [sp, #0]
 8003f94:	0013      	movs	r3, r2
 8003f96:	2200      	movs	r2, #0
 8003f98:	2140      	movs	r1, #64	@ 0x40
 8003f9a:	f000 fd09 	bl	80049b0 <UART_WaitOnFlagUntilTimeout>
 8003f9e:	1e03      	subs	r3, r0, #0
 8003fa0:	d001      	beq.n	8003fa6 <HAL_UART_Transmit+0x132>
    {
      return HAL_TIMEOUT;
 8003fa2:	2303      	movs	r3, #3
 8003fa4:	e009      	b.n	8003fba <HAL_UART_Transmit+0x146>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8003fa6:	68fb      	ldr	r3, [r7, #12]
 8003fa8:	2220      	movs	r2, #32
 8003faa:	675a      	str	r2, [r3, #116]	@ 0x74

    __HAL_UNLOCK(huart);
 8003fac:	68fb      	ldr	r3, [r7, #12]
 8003fae:	2270      	movs	r2, #112	@ 0x70
 8003fb0:	2100      	movs	r1, #0
 8003fb2:	5499      	strb	r1, [r3, r2]

    return HAL_OK;
 8003fb4:	2300      	movs	r3, #0
 8003fb6:	e000      	b.n	8003fba <HAL_UART_Transmit+0x146>
  }
  else
  {
    return HAL_BUSY;
 8003fb8:	2302      	movs	r3, #2
  }
}
 8003fba:	0018      	movs	r0, r3
 8003fbc:	46bd      	mov	sp, r7
 8003fbe:	b008      	add	sp, #32
 8003fc0:	bd80      	pop	{r7, pc}
	...

08003fc4 <HAL_UART_Receive>:
  * @param Size    Amount of data elements (u8 or u16) to be received.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8003fc4:	b580      	push	{r7, lr}
 8003fc6:	b08a      	sub	sp, #40	@ 0x28
 8003fc8:	af02      	add	r7, sp, #8
 8003fca:	60f8      	str	r0, [r7, #12]
 8003fcc:	60b9      	str	r1, [r7, #8]
 8003fce:	603b      	str	r3, [r7, #0]
 8003fd0:	1dbb      	adds	r3, r7, #6
 8003fd2:	801a      	strh	r2, [r3, #0]
  uint16_t *pdata16bits;
  uint16_t uhMask;
  uint32_t tickstart;

  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8003fd4:	68fb      	ldr	r3, [r7, #12]
 8003fd6:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8003fd8:	2b20      	cmp	r3, #32
 8003fda:	d000      	beq.n	8003fde <HAL_UART_Receive+0x1a>
 8003fdc:	e0c2      	b.n	8004164 <HAL_UART_Receive+0x1a0>
  {
    if ((pData == NULL) || (Size == 0U))
 8003fde:	68bb      	ldr	r3, [r7, #8]
 8003fe0:	2b00      	cmp	r3, #0
 8003fe2:	d003      	beq.n	8003fec <HAL_UART_Receive+0x28>
 8003fe4:	1dbb      	adds	r3, r7, #6
 8003fe6:	881b      	ldrh	r3, [r3, #0]
 8003fe8:	2b00      	cmp	r3, #0
 8003fea:	d101      	bne.n	8003ff0 <HAL_UART_Receive+0x2c>
    {
      return  HAL_ERROR;
 8003fec:	2301      	movs	r3, #1
 8003fee:	e0ba      	b.n	8004166 <HAL_UART_Receive+0x1a2>
    }

    /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
       should be aligned on a u16 frontier, as data to be received from RDR will be
       handled through a u16 cast. */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003ff0:	68fb      	ldr	r3, [r7, #12]
 8003ff2:	689a      	ldr	r2, [r3, #8]
 8003ff4:	2380      	movs	r3, #128	@ 0x80
 8003ff6:	015b      	lsls	r3, r3, #5
 8003ff8:	429a      	cmp	r2, r3
 8003ffa:	d109      	bne.n	8004010 <HAL_UART_Receive+0x4c>
 8003ffc:	68fb      	ldr	r3, [r7, #12]
 8003ffe:	691b      	ldr	r3, [r3, #16]
 8004000:	2b00      	cmp	r3, #0
 8004002:	d105      	bne.n	8004010 <HAL_UART_Receive+0x4c>
    {
      if ((((uint32_t)pData) & 1U) != 0U)
 8004004:	68bb      	ldr	r3, [r7, #8]
 8004006:	2201      	movs	r2, #1
 8004008:	4013      	ands	r3, r2
 800400a:	d001      	beq.n	8004010 <HAL_UART_Receive+0x4c>
      {
        return  HAL_ERROR;
 800400c:	2301      	movs	r3, #1
 800400e:	e0aa      	b.n	8004166 <HAL_UART_Receive+0x1a2>
      }
    }

    __HAL_LOCK(huart);
 8004010:	68fb      	ldr	r3, [r7, #12]
 8004012:	2270      	movs	r2, #112	@ 0x70
 8004014:	5c9b      	ldrb	r3, [r3, r2]
 8004016:	2b01      	cmp	r3, #1
 8004018:	d101      	bne.n	800401e <HAL_UART_Receive+0x5a>
 800401a:	2302      	movs	r3, #2
 800401c:	e0a3      	b.n	8004166 <HAL_UART_Receive+0x1a2>
 800401e:	68fb      	ldr	r3, [r7, #12]
 8004020:	2270      	movs	r2, #112	@ 0x70
 8004022:	2101      	movs	r1, #1
 8004024:	5499      	strb	r1, [r3, r2]

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8004026:	68fb      	ldr	r3, [r7, #12]
 8004028:	2200      	movs	r2, #0
 800402a:	67da      	str	r2, [r3, #124]	@ 0x7c
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 800402c:	68fb      	ldr	r3, [r7, #12]
 800402e:	2222      	movs	r2, #34	@ 0x22
 8004030:	679a      	str	r2, [r3, #120]	@ 0x78

    /* Init tickstart for timeout managment*/
    tickstart = HAL_GetTick();
 8004032:	f7fe ff49 	bl	8002ec8 <HAL_GetTick>
 8004036:	0003      	movs	r3, r0
 8004038:	617b      	str	r3, [r7, #20]

    huart->RxXferSize  = Size;
 800403a:	68fb      	ldr	r3, [r7, #12]
 800403c:	1dba      	adds	r2, r7, #6
 800403e:	2158      	movs	r1, #88	@ 0x58
 8004040:	8812      	ldrh	r2, [r2, #0]
 8004042:	525a      	strh	r2, [r3, r1]
    huart->RxXferCount = Size;
 8004044:	68fb      	ldr	r3, [r7, #12]
 8004046:	1dba      	adds	r2, r7, #6
 8004048:	215a      	movs	r1, #90	@ 0x5a
 800404a:	8812      	ldrh	r2, [r2, #0]
 800404c:	525a      	strh	r2, [r3, r1]

    /* Computation of UART mask to apply to RDR register */
    UART_MASK_COMPUTATION(huart);
 800404e:	68fb      	ldr	r3, [r7, #12]
 8004050:	689a      	ldr	r2, [r3, #8]
 8004052:	2380      	movs	r3, #128	@ 0x80
 8004054:	015b      	lsls	r3, r3, #5
 8004056:	429a      	cmp	r2, r3
 8004058:	d10d      	bne.n	8004076 <HAL_UART_Receive+0xb2>
 800405a:	68fb      	ldr	r3, [r7, #12]
 800405c:	691b      	ldr	r3, [r3, #16]
 800405e:	2b00      	cmp	r3, #0
 8004060:	d104      	bne.n	800406c <HAL_UART_Receive+0xa8>
 8004062:	68fb      	ldr	r3, [r7, #12]
 8004064:	225c      	movs	r2, #92	@ 0x5c
 8004066:	4942      	ldr	r1, [pc, #264]	@ (8004170 <HAL_UART_Receive+0x1ac>)
 8004068:	5299      	strh	r1, [r3, r2]
 800406a:	e01a      	b.n	80040a2 <HAL_UART_Receive+0xde>
 800406c:	68fb      	ldr	r3, [r7, #12]
 800406e:	225c      	movs	r2, #92	@ 0x5c
 8004070:	21ff      	movs	r1, #255	@ 0xff
 8004072:	5299      	strh	r1, [r3, r2]
 8004074:	e015      	b.n	80040a2 <HAL_UART_Receive+0xde>
 8004076:	68fb      	ldr	r3, [r7, #12]
 8004078:	689b      	ldr	r3, [r3, #8]
 800407a:	2b00      	cmp	r3, #0
 800407c:	d10d      	bne.n	800409a <HAL_UART_Receive+0xd6>
 800407e:	68fb      	ldr	r3, [r7, #12]
 8004080:	691b      	ldr	r3, [r3, #16]
 8004082:	2b00      	cmp	r3, #0
 8004084:	d104      	bne.n	8004090 <HAL_UART_Receive+0xcc>
 8004086:	68fb      	ldr	r3, [r7, #12]
 8004088:	225c      	movs	r2, #92	@ 0x5c
 800408a:	21ff      	movs	r1, #255	@ 0xff
 800408c:	5299      	strh	r1, [r3, r2]
 800408e:	e008      	b.n	80040a2 <HAL_UART_Receive+0xde>
 8004090:	68fb      	ldr	r3, [r7, #12]
 8004092:	225c      	movs	r2, #92	@ 0x5c
 8004094:	217f      	movs	r1, #127	@ 0x7f
 8004096:	5299      	strh	r1, [r3, r2]
 8004098:	e003      	b.n	80040a2 <HAL_UART_Receive+0xde>
 800409a:	68fb      	ldr	r3, [r7, #12]
 800409c:	225c      	movs	r2, #92	@ 0x5c
 800409e:	2100      	movs	r1, #0
 80040a0:	5299      	strh	r1, [r3, r2]
    uhMask = huart->Mask;
 80040a2:	2312      	movs	r3, #18
 80040a4:	18fb      	adds	r3, r7, r3
 80040a6:	68fa      	ldr	r2, [r7, #12]
 80040a8:	215c      	movs	r1, #92	@ 0x5c
 80040aa:	5a52      	ldrh	r2, [r2, r1]
 80040ac:	801a      	strh	r2, [r3, #0]

    /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80040ae:	68fb      	ldr	r3, [r7, #12]
 80040b0:	689a      	ldr	r2, [r3, #8]
 80040b2:	2380      	movs	r3, #128	@ 0x80
 80040b4:	015b      	lsls	r3, r3, #5
 80040b6:	429a      	cmp	r2, r3
 80040b8:	d108      	bne.n	80040cc <HAL_UART_Receive+0x108>
 80040ba:	68fb      	ldr	r3, [r7, #12]
 80040bc:	691b      	ldr	r3, [r3, #16]
 80040be:	2b00      	cmp	r3, #0
 80040c0:	d104      	bne.n	80040cc <HAL_UART_Receive+0x108>
    {
      pdata8bits  = NULL;
 80040c2:	2300      	movs	r3, #0
 80040c4:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 80040c6:	68bb      	ldr	r3, [r7, #8]
 80040c8:	61bb      	str	r3, [r7, #24]
 80040ca:	e003      	b.n	80040d4 <HAL_UART_Receive+0x110>
    }
    else
    {
      pdata8bits  = pData;
 80040cc:	68bb      	ldr	r3, [r7, #8]
 80040ce:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 80040d0:	2300      	movs	r3, #0
 80040d2:	61bb      	str	r3, [r7, #24]
    }

    /* as long as data have to be received */
    while (huart->RxXferCount > 0U)
 80040d4:	e037      	b.n	8004146 <HAL_UART_Receive+0x182>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 80040d6:	697a      	ldr	r2, [r7, #20]
 80040d8:	68f8      	ldr	r0, [r7, #12]
 80040da:	683b      	ldr	r3, [r7, #0]
 80040dc:	9300      	str	r3, [sp, #0]
 80040de:	0013      	movs	r3, r2
 80040e0:	2200      	movs	r2, #0
 80040e2:	2120      	movs	r1, #32
 80040e4:	f000 fc64 	bl	80049b0 <UART_WaitOnFlagUntilTimeout>
 80040e8:	1e03      	subs	r3, r0, #0
 80040ea:	d001      	beq.n	80040f0 <HAL_UART_Receive+0x12c>
      {
        return HAL_TIMEOUT;
 80040ec:	2303      	movs	r3, #3
 80040ee:	e03a      	b.n	8004166 <HAL_UART_Receive+0x1a2>
      }
      if (pdata8bits == NULL)
 80040f0:	69fb      	ldr	r3, [r7, #28]
 80040f2:	2b00      	cmp	r3, #0
 80040f4:	d10e      	bne.n	8004114 <HAL_UART_Receive+0x150>
      {
        *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 80040f6:	68fb      	ldr	r3, [r7, #12]
 80040f8:	681b      	ldr	r3, [r3, #0]
 80040fa:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 80040fc:	b29b      	uxth	r3, r3
 80040fe:	2212      	movs	r2, #18
 8004100:	18ba      	adds	r2, r7, r2
 8004102:	8812      	ldrh	r2, [r2, #0]
 8004104:	4013      	ands	r3, r2
 8004106:	b29a      	uxth	r2, r3
 8004108:	69bb      	ldr	r3, [r7, #24]
 800410a:	801a      	strh	r2, [r3, #0]
        pdata16bits++;
 800410c:	69bb      	ldr	r3, [r7, #24]
 800410e:	3302      	adds	r3, #2
 8004110:	61bb      	str	r3, [r7, #24]
 8004112:	e00f      	b.n	8004134 <HAL_UART_Receive+0x170>
      }
      else
      {
        *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 8004114:	68fb      	ldr	r3, [r7, #12]
 8004116:	681b      	ldr	r3, [r3, #0]
 8004118:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 800411a:	b29b      	uxth	r3, r3
 800411c:	b2db      	uxtb	r3, r3
 800411e:	2212      	movs	r2, #18
 8004120:	18ba      	adds	r2, r7, r2
 8004122:	8812      	ldrh	r2, [r2, #0]
 8004124:	b2d2      	uxtb	r2, r2
 8004126:	4013      	ands	r3, r2
 8004128:	b2da      	uxtb	r2, r3
 800412a:	69fb      	ldr	r3, [r7, #28]
 800412c:	701a      	strb	r2, [r3, #0]
        pdata8bits++;
 800412e:	69fb      	ldr	r3, [r7, #28]
 8004130:	3301      	adds	r3, #1
 8004132:	61fb      	str	r3, [r7, #28]
      }
      huart->RxXferCount--;
 8004134:	68fb      	ldr	r3, [r7, #12]
 8004136:	225a      	movs	r2, #90	@ 0x5a
 8004138:	5a9b      	ldrh	r3, [r3, r2]
 800413a:	b29b      	uxth	r3, r3
 800413c:	3b01      	subs	r3, #1
 800413e:	b299      	uxth	r1, r3
 8004140:	68fb      	ldr	r3, [r7, #12]
 8004142:	225a      	movs	r2, #90	@ 0x5a
 8004144:	5299      	strh	r1, [r3, r2]
    while (huart->RxXferCount > 0U)
 8004146:	68fb      	ldr	r3, [r7, #12]
 8004148:	225a      	movs	r2, #90	@ 0x5a
 800414a:	5a9b      	ldrh	r3, [r3, r2]
 800414c:	b29b      	uxth	r3, r3
 800414e:	2b00      	cmp	r3, #0
 8004150:	d1c1      	bne.n	80040d6 <HAL_UART_Receive+0x112>
    }

    /* At end of Rx process, restore huart->RxState to Ready */
    huart->RxState = HAL_UART_STATE_READY;
 8004152:	68fb      	ldr	r3, [r7, #12]
 8004154:	2220      	movs	r2, #32
 8004156:	679a      	str	r2, [r3, #120]	@ 0x78

    __HAL_UNLOCK(huart);
 8004158:	68fb      	ldr	r3, [r7, #12]
 800415a:	2270      	movs	r2, #112	@ 0x70
 800415c:	2100      	movs	r1, #0
 800415e:	5499      	strb	r1, [r3, r2]

    return HAL_OK;
 8004160:	2300      	movs	r3, #0
 8004162:	e000      	b.n	8004166 <HAL_UART_Receive+0x1a2>
  }
  else
  {
    return HAL_BUSY;
 8004164:	2302      	movs	r3, #2
  }
}
 8004166:	0018      	movs	r0, r3
 8004168:	46bd      	mov	sp, r7
 800416a:	b008      	add	sp, #32
 800416c:	bd80      	pop	{r7, pc}
 800416e:	46c0      	nop			@ (mov r8, r8)
 8004170:	000001ff 	.word	0x000001ff

08004174 <HAL_UART_Transmit_IT>:
  * @param pData Pointer to data buffer (u8 or u16 data elements).
  * @param Size  Amount of data elements (u8 or u16) to be sent.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 8004174:	b580      	push	{r7, lr}
 8004176:	b084      	sub	sp, #16
 8004178:	af00      	add	r7, sp, #0
 800417a:	60f8      	str	r0, [r7, #12]
 800417c:	60b9      	str	r1, [r7, #8]
 800417e:	1dbb      	adds	r3, r7, #6
 8004180:	801a      	strh	r2, [r3, #0]
  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8004182:	68fb      	ldr	r3, [r7, #12]
 8004184:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004186:	2b20      	cmp	r3, #32
 8004188:	d158      	bne.n	800423c <HAL_UART_Transmit_IT+0xc8>
  {
    if ((pData == NULL) || (Size == 0U))
 800418a:	68bb      	ldr	r3, [r7, #8]
 800418c:	2b00      	cmp	r3, #0
 800418e:	d003      	beq.n	8004198 <HAL_UART_Transmit_IT+0x24>
 8004190:	1dbb      	adds	r3, r7, #6
 8004192:	881b      	ldrh	r3, [r3, #0]
 8004194:	2b00      	cmp	r3, #0
 8004196:	d101      	bne.n	800419c <HAL_UART_Transmit_IT+0x28>
    {
      return HAL_ERROR;
 8004198:	2301      	movs	r3, #1
 800419a:	e050      	b.n	800423e <HAL_UART_Transmit_IT+0xca>
    }

    /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
       should be aligned on a u16 frontier, as data to be filled into TDR will be
       handled through a u16 cast. */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800419c:	68fb      	ldr	r3, [r7, #12]
 800419e:	689a      	ldr	r2, [r3, #8]
 80041a0:	2380      	movs	r3, #128	@ 0x80
 80041a2:	015b      	lsls	r3, r3, #5
 80041a4:	429a      	cmp	r2, r3
 80041a6:	d109      	bne.n	80041bc <HAL_UART_Transmit_IT+0x48>
 80041a8:	68fb      	ldr	r3, [r7, #12]
 80041aa:	691b      	ldr	r3, [r3, #16]
 80041ac:	2b00      	cmp	r3, #0
 80041ae:	d105      	bne.n	80041bc <HAL_UART_Transmit_IT+0x48>
    {
      if ((((uint32_t)pData) & 1U) != 0U)
 80041b0:	68bb      	ldr	r3, [r7, #8]
 80041b2:	2201      	movs	r2, #1
 80041b4:	4013      	ands	r3, r2
 80041b6:	d001      	beq.n	80041bc <HAL_UART_Transmit_IT+0x48>
      {
        return  HAL_ERROR;
 80041b8:	2301      	movs	r3, #1
 80041ba:	e040      	b.n	800423e <HAL_UART_Transmit_IT+0xca>
      }
    }

    __HAL_LOCK(huart);
 80041bc:	68fb      	ldr	r3, [r7, #12]
 80041be:	2270      	movs	r2, #112	@ 0x70
 80041c0:	5c9b      	ldrb	r3, [r3, r2]
 80041c2:	2b01      	cmp	r3, #1
 80041c4:	d101      	bne.n	80041ca <HAL_UART_Transmit_IT+0x56>
 80041c6:	2302      	movs	r3, #2
 80041c8:	e039      	b.n	800423e <HAL_UART_Transmit_IT+0xca>
 80041ca:	68fb      	ldr	r3, [r7, #12]
 80041cc:	2270      	movs	r2, #112	@ 0x70
 80041ce:	2101      	movs	r1, #1
 80041d0:	5499      	strb	r1, [r3, r2]

    huart->pTxBuffPtr  = pData;
 80041d2:	68fb      	ldr	r3, [r7, #12]
 80041d4:	68ba      	ldr	r2, [r7, #8]
 80041d6:	64da      	str	r2, [r3, #76]	@ 0x4c
    huart->TxXferSize  = Size;
 80041d8:	68fb      	ldr	r3, [r7, #12]
 80041da:	1dba      	adds	r2, r7, #6
 80041dc:	2150      	movs	r1, #80	@ 0x50
 80041de:	8812      	ldrh	r2, [r2, #0]
 80041e0:	525a      	strh	r2, [r3, r1]
    huart->TxXferCount = Size;
 80041e2:	68fb      	ldr	r3, [r7, #12]
 80041e4:	1dba      	adds	r2, r7, #6
 80041e6:	2152      	movs	r1, #82	@ 0x52
 80041e8:	8812      	ldrh	r2, [r2, #0]
 80041ea:	525a      	strh	r2, [r3, r1]
    huart->TxISR       = NULL;
 80041ec:	68fb      	ldr	r3, [r7, #12]
 80041ee:	2200      	movs	r2, #0
 80041f0:	665a      	str	r2, [r3, #100]	@ 0x64

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 80041f2:	68fb      	ldr	r3, [r7, #12]
 80041f4:	2200      	movs	r2, #0
 80041f6:	67da      	str	r2, [r3, #124]	@ 0x7c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 80041f8:	68fb      	ldr	r3, [r7, #12]
 80041fa:	2221      	movs	r2, #33	@ 0x21
 80041fc:	675a      	str	r2, [r3, #116]	@ 0x74

    /* Set the Tx ISR function pointer according to the data word length */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80041fe:	68fb      	ldr	r3, [r7, #12]
 8004200:	689a      	ldr	r2, [r3, #8]
 8004202:	2380      	movs	r3, #128	@ 0x80
 8004204:	015b      	lsls	r3, r3, #5
 8004206:	429a      	cmp	r2, r3
 8004208:	d107      	bne.n	800421a <HAL_UART_Transmit_IT+0xa6>
 800420a:	68fb      	ldr	r3, [r7, #12]
 800420c:	691b      	ldr	r3, [r3, #16]
 800420e:	2b00      	cmp	r3, #0
 8004210:	d103      	bne.n	800421a <HAL_UART_Transmit_IT+0xa6>
    {
      huart->TxISR = UART_TxISR_16BIT;
 8004212:	68fb      	ldr	r3, [r7, #12]
 8004214:	4a0c      	ldr	r2, [pc, #48]	@ (8004248 <HAL_UART_Transmit_IT+0xd4>)
 8004216:	665a      	str	r2, [r3, #100]	@ 0x64
 8004218:	e002      	b.n	8004220 <HAL_UART_Transmit_IT+0xac>
    }
    else
    {
      huart->TxISR = UART_TxISR_8BIT;
 800421a:	68fb      	ldr	r3, [r7, #12]
 800421c:	4a0b      	ldr	r2, [pc, #44]	@ (800424c <HAL_UART_Transmit_IT+0xd8>)
 800421e:	665a      	str	r2, [r3, #100]	@ 0x64
    }

    __HAL_UNLOCK(huart);
 8004220:	68fb      	ldr	r3, [r7, #12]
 8004222:	2270      	movs	r2, #112	@ 0x70
 8004224:	2100      	movs	r1, #0
 8004226:	5499      	strb	r1, [r3, r2]

    /* Enable the Transmit Data Register Empty interrupt */
    SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 8004228:	68fb      	ldr	r3, [r7, #12]
 800422a:	681b      	ldr	r3, [r3, #0]
 800422c:	681a      	ldr	r2, [r3, #0]
 800422e:	68fb      	ldr	r3, [r7, #12]
 8004230:	681b      	ldr	r3, [r3, #0]
 8004232:	2180      	movs	r1, #128	@ 0x80
 8004234:	430a      	orrs	r2, r1
 8004236:	601a      	str	r2, [r3, #0]

    return HAL_OK;
 8004238:	2300      	movs	r3, #0
 800423a:	e000      	b.n	800423e <HAL_UART_Transmit_IT+0xca>
  }
  else
  {
    return HAL_BUSY;
 800423c:	2302      	movs	r3, #2
  }
}
 800423e:	0018      	movs	r0, r3
 8004240:	46bd      	mov	sp, r7
 8004242:	b004      	add	sp, #16
 8004244:	bd80      	pop	{r7, pc}
 8004246:	46c0      	nop			@ (mov r8, r8)
 8004248:	08004b89 	.word	0x08004b89
 800424c:	08004b1b 	.word	0x08004b1b

08004250 <HAL_UART_IRQHandler>:
  * @brief Handle UART interrupt request.
  * @param huart UART handle.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 8004250:	b580      	push	{r7, lr}
 8004252:	b088      	sub	sp, #32
 8004254:	af00      	add	r7, sp, #0
 8004256:	6078      	str	r0, [r7, #4]
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8004258:	687b      	ldr	r3, [r7, #4]
 800425a:	681b      	ldr	r3, [r3, #0]
 800425c:	69db      	ldr	r3, [r3, #28]
 800425e:	61fb      	str	r3, [r7, #28]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8004260:	687b      	ldr	r3, [r7, #4]
 8004262:	681b      	ldr	r3, [r3, #0]
 8004264:	681b      	ldr	r3, [r3, #0]
 8004266:	61bb      	str	r3, [r7, #24]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	681b      	ldr	r3, [r3, #0]
 800426c:	689b      	ldr	r3, [r3, #8]
 800426e:	617b      	str	r3, [r7, #20]

  uint32_t errorflags;
  uint32_t errorcode;

  /* If no error occurs */
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
 8004270:	69fb      	ldr	r3, [r7, #28]
 8004272:	4a89      	ldr	r2, [pc, #548]	@ (8004498 <HAL_UART_IRQHandler+0x248>)
 8004274:	4013      	ands	r3, r2
 8004276:	613b      	str	r3, [r7, #16]
  if (errorflags == 0U)
 8004278:	693b      	ldr	r3, [r7, #16]
 800427a:	2b00      	cmp	r3, #0
 800427c:	d112      	bne.n	80042a4 <HAL_UART_IRQHandler+0x54>
  {
    /* UART in mode Receiver ---------------------------------------------------*/
    if (((isrflags & USART_ISR_RXNE) != 0U)
 800427e:	69fb      	ldr	r3, [r7, #28]
 8004280:	2220      	movs	r2, #32
 8004282:	4013      	ands	r3, r2
 8004284:	d00e      	beq.n	80042a4 <HAL_UART_IRQHandler+0x54>
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
 8004286:	69bb      	ldr	r3, [r7, #24]
 8004288:	2220      	movs	r2, #32
 800428a:	4013      	ands	r3, r2
 800428c:	d00a      	beq.n	80042a4 <HAL_UART_IRQHandler+0x54>
    {
      if (huart->RxISR != NULL)
 800428e:	687b      	ldr	r3, [r7, #4]
 8004290:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004292:	2b00      	cmp	r3, #0
 8004294:	d100      	bne.n	8004298 <HAL_UART_IRQHandler+0x48>
 8004296:	e0f6      	b.n	8004486 <HAL_UART_IRQHandler+0x236>
      {
        huart->RxISR(huart);
 8004298:	687b      	ldr	r3, [r7, #4]
 800429a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800429c:	687a      	ldr	r2, [r7, #4]
 800429e:	0010      	movs	r0, r2
 80042a0:	4798      	blx	r3
      }
      return;
 80042a2:	e0f0      	b.n	8004486 <HAL_UART_IRQHandler+0x236>
    }
  }

  /* If some errors occur */
  if ((errorflags != 0U)
 80042a4:	693b      	ldr	r3, [r7, #16]
 80042a6:	2b00      	cmp	r3, #0
 80042a8:	d100      	bne.n	80042ac <HAL_UART_IRQHandler+0x5c>
 80042aa:	e0cd      	b.n	8004448 <HAL_UART_IRQHandler+0x1f8>
      && (((cr3its & USART_CR3_EIE) != 0U)
 80042ac:	697b      	ldr	r3, [r7, #20]
 80042ae:	2201      	movs	r2, #1
 80042b0:	4013      	ands	r3, r2
 80042b2:	d105      	bne.n	80042c0 <HAL_UART_IRQHandler+0x70>
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != 0U)))
 80042b4:	69ba      	ldr	r2, [r7, #24]
 80042b6:	2390      	movs	r3, #144	@ 0x90
 80042b8:	005b      	lsls	r3, r3, #1
 80042ba:	4013      	ands	r3, r2
 80042bc:	d100      	bne.n	80042c0 <HAL_UART_IRQHandler+0x70>
 80042be:	e0c3      	b.n	8004448 <HAL_UART_IRQHandler+0x1f8>
  {
    /* UART parity error interrupt occurred -------------------------------------*/
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 80042c0:	69fb      	ldr	r3, [r7, #28]
 80042c2:	2201      	movs	r2, #1
 80042c4:	4013      	ands	r3, r2
 80042c6:	d00e      	beq.n	80042e6 <HAL_UART_IRQHandler+0x96>
 80042c8:	69ba      	ldr	r2, [r7, #24]
 80042ca:	2380      	movs	r3, #128	@ 0x80
 80042cc:	005b      	lsls	r3, r3, #1
 80042ce:	4013      	ands	r3, r2
 80042d0:	d009      	beq.n	80042e6 <HAL_UART_IRQHandler+0x96>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 80042d2:	687b      	ldr	r3, [r7, #4]
 80042d4:	681b      	ldr	r3, [r3, #0]
 80042d6:	2201      	movs	r2, #1
 80042d8:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_PE;
 80042da:	687b      	ldr	r3, [r7, #4]
 80042dc:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80042de:	2201      	movs	r2, #1
 80042e0:	431a      	orrs	r2, r3
 80042e2:	687b      	ldr	r3, [r7, #4]
 80042e4:	67da      	str	r2, [r3, #124]	@ 0x7c
    }

    /* UART frame error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 80042e6:	69fb      	ldr	r3, [r7, #28]
 80042e8:	2202      	movs	r2, #2
 80042ea:	4013      	ands	r3, r2
 80042ec:	d00d      	beq.n	800430a <HAL_UART_IRQHandler+0xba>
 80042ee:	697b      	ldr	r3, [r7, #20]
 80042f0:	2201      	movs	r2, #1
 80042f2:	4013      	ands	r3, r2
 80042f4:	d009      	beq.n	800430a <HAL_UART_IRQHandler+0xba>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 80042f6:	687b      	ldr	r3, [r7, #4]
 80042f8:	681b      	ldr	r3, [r3, #0]
 80042fa:	2202      	movs	r2, #2
 80042fc:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_FE;
 80042fe:	687b      	ldr	r3, [r7, #4]
 8004300:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8004302:	2204      	movs	r2, #4
 8004304:	431a      	orrs	r2, r3
 8004306:	687b      	ldr	r3, [r7, #4]
 8004308:	67da      	str	r2, [r3, #124]	@ 0x7c
    }

    /* UART noise error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 800430a:	69fb      	ldr	r3, [r7, #28]
 800430c:	2204      	movs	r2, #4
 800430e:	4013      	ands	r3, r2
 8004310:	d00d      	beq.n	800432e <HAL_UART_IRQHandler+0xde>
 8004312:	697b      	ldr	r3, [r7, #20]
 8004314:	2201      	movs	r2, #1
 8004316:	4013      	ands	r3, r2
 8004318:	d009      	beq.n	800432e <HAL_UART_IRQHandler+0xde>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 800431a:	687b      	ldr	r3, [r7, #4]
 800431c:	681b      	ldr	r3, [r3, #0]
 800431e:	2204      	movs	r2, #4
 8004320:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8004322:	687b      	ldr	r3, [r7, #4]
 8004324:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8004326:	2202      	movs	r2, #2
 8004328:	431a      	orrs	r2, r3
 800432a:	687b      	ldr	r3, [r7, #4]
 800432c:	67da      	str	r2, [r3, #124]	@ 0x7c
    }

    /* UART Over-Run interrupt occurred -----------------------------------------*/
    if (((isrflags & USART_ISR_ORE) != 0U)
 800432e:	69fb      	ldr	r3, [r7, #28]
 8004330:	2208      	movs	r2, #8
 8004332:	4013      	ands	r3, r2
 8004334:	d011      	beq.n	800435a <HAL_UART_IRQHandler+0x10a>
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 8004336:	69bb      	ldr	r3, [r7, #24]
 8004338:	2220      	movs	r2, #32
 800433a:	4013      	ands	r3, r2
 800433c:	d103      	bne.n	8004346 <HAL_UART_IRQHandler+0xf6>
            ((cr3its & USART_CR3_EIE) != 0U)))
 800433e:	697b      	ldr	r3, [r7, #20]
 8004340:	2201      	movs	r2, #1
 8004342:	4013      	ands	r3, r2
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 8004344:	d009      	beq.n	800435a <HAL_UART_IRQHandler+0x10a>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 8004346:	687b      	ldr	r3, [r7, #4]
 8004348:	681b      	ldr	r3, [r3, #0]
 800434a:	2208      	movs	r2, #8
 800434c:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 800434e:	687b      	ldr	r3, [r7, #4]
 8004350:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8004352:	2208      	movs	r2, #8
 8004354:	431a      	orrs	r2, r3
 8004356:	687b      	ldr	r3, [r7, #4]
 8004358:	67da      	str	r2, [r3, #124]	@ 0x7c
    }

    /* UART Receiver Timeout interrupt occurred ---------------------------------*/
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 800435a:	69fa      	ldr	r2, [r7, #28]
 800435c:	2380      	movs	r3, #128	@ 0x80
 800435e:	011b      	lsls	r3, r3, #4
 8004360:	4013      	ands	r3, r2
 8004362:	d00f      	beq.n	8004384 <HAL_UART_IRQHandler+0x134>
 8004364:	69ba      	ldr	r2, [r7, #24]
 8004366:	2380      	movs	r3, #128	@ 0x80
 8004368:	04db      	lsls	r3, r3, #19
 800436a:	4013      	ands	r3, r2
 800436c:	d00a      	beq.n	8004384 <HAL_UART_IRQHandler+0x134>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 800436e:	687b      	ldr	r3, [r7, #4]
 8004370:	681b      	ldr	r3, [r3, #0]
 8004372:	2280      	movs	r2, #128	@ 0x80
 8004374:	0112      	lsls	r2, r2, #4
 8004376:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 8004378:	687b      	ldr	r3, [r7, #4]
 800437a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800437c:	2220      	movs	r2, #32
 800437e:	431a      	orrs	r2, r3
 8004380:	687b      	ldr	r3, [r7, #4]
 8004382:	67da      	str	r2, [r3, #124]	@ 0x7c
    }

    /* Call UART Error Call back function if need be ----------------------------*/
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8004384:	687b      	ldr	r3, [r7, #4]
 8004386:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8004388:	2b00      	cmp	r3, #0
 800438a:	d100      	bne.n	800438e <HAL_UART_IRQHandler+0x13e>
 800438c:	e07d      	b.n	800448a <HAL_UART_IRQHandler+0x23a>
    {
      /* UART in mode Receiver --------------------------------------------------*/
      if (((isrflags & USART_ISR_RXNE) != 0U)
 800438e:	69fb      	ldr	r3, [r7, #28]
 8004390:	2220      	movs	r2, #32
 8004392:	4013      	ands	r3, r2
 8004394:	d00c      	beq.n	80043b0 <HAL_UART_IRQHandler+0x160>
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
 8004396:	69bb      	ldr	r3, [r7, #24]
 8004398:	2220      	movs	r2, #32
 800439a:	4013      	ands	r3, r2
 800439c:	d008      	beq.n	80043b0 <HAL_UART_IRQHandler+0x160>
      {
        if (huart->RxISR != NULL)
 800439e:	687b      	ldr	r3, [r7, #4]
 80043a0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80043a2:	2b00      	cmp	r3, #0
 80043a4:	d004      	beq.n	80043b0 <HAL_UART_IRQHandler+0x160>
        {
          huart->RxISR(huart);
 80043a6:	687b      	ldr	r3, [r7, #4]
 80043a8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80043aa:	687a      	ldr	r2, [r7, #4]
 80043ac:	0010      	movs	r0, r2
 80043ae:	4798      	blx	r3
      /* If Error is to be considered as blocking :
          - Receiver Timeout error in Reception
          - Overrun error in Reception
          - any error occurs in DMA mode reception
      */
      errorcode = huart->ErrorCode;
 80043b0:	687b      	ldr	r3, [r7, #4]
 80043b2:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80043b4:	60fb      	str	r3, [r7, #12]
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80043b6:	687b      	ldr	r3, [r7, #4]
 80043b8:	681b      	ldr	r3, [r3, #0]
 80043ba:	689b      	ldr	r3, [r3, #8]
 80043bc:	2240      	movs	r2, #64	@ 0x40
 80043be:	4013      	ands	r3, r2
 80043c0:	2b40      	cmp	r3, #64	@ 0x40
 80043c2:	d003      	beq.n	80043cc <HAL_UART_IRQHandler+0x17c>
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 80043c4:	68fb      	ldr	r3, [r7, #12]
 80043c6:	2228      	movs	r2, #40	@ 0x28
 80043c8:	4013      	ands	r3, r2
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80043ca:	d033      	beq.n	8004434 <HAL_UART_IRQHandler+0x1e4>
      {
        /* Blocking error : transfer is aborted
           Set the UART state ready to be able to start again the process,
           Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
        UART_EndRxTransfer(huart);
 80043cc:	687b      	ldr	r3, [r7, #4]
 80043ce:	0018      	movs	r0, r3
 80043d0:	f000 fb6c 	bl	8004aac <UART_EndRxTransfer>

        /* Disable the UART DMA Rx request if enabled */
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80043d4:	687b      	ldr	r3, [r7, #4]
 80043d6:	681b      	ldr	r3, [r3, #0]
 80043d8:	689b      	ldr	r3, [r3, #8]
 80043da:	2240      	movs	r2, #64	@ 0x40
 80043dc:	4013      	ands	r3, r2
 80043de:	2b40      	cmp	r3, #64	@ 0x40
 80043e0:	d123      	bne.n	800442a <HAL_UART_IRQHandler+0x1da>
        {
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80043e2:	687b      	ldr	r3, [r7, #4]
 80043e4:	681b      	ldr	r3, [r3, #0]
 80043e6:	689a      	ldr	r2, [r3, #8]
 80043e8:	687b      	ldr	r3, [r7, #4]
 80043ea:	681b      	ldr	r3, [r3, #0]
 80043ec:	2140      	movs	r1, #64	@ 0x40
 80043ee:	438a      	bics	r2, r1
 80043f0:	609a      	str	r2, [r3, #8]

          /* Abort the UART DMA Rx channel */
          if (huart->hdmarx != NULL)
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80043f6:	2b00      	cmp	r3, #0
 80043f8:	d012      	beq.n	8004420 <HAL_UART_IRQHandler+0x1d0>
          {
            /* Set the UART DMA Abort callback :
               will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 80043fa:	687b      	ldr	r3, [r7, #4]
 80043fc:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80043fe:	4a27      	ldr	r2, [pc, #156]	@ (800449c <HAL_UART_IRQHandler+0x24c>)
 8004400:	635a      	str	r2, [r3, #52]	@ 0x34

            /* Abort DMA RX */
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8004402:	687b      	ldr	r3, [r7, #4]
 8004404:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8004406:	0018      	movs	r0, r3
 8004408:	f7fe fe6a 	bl	80030e0 <HAL_DMA_Abort_IT>
 800440c:	1e03      	subs	r3, r0, #0
 800440e:	d019      	beq.n	8004444 <HAL_UART_IRQHandler+0x1f4>
            {
              /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8004410:	687b      	ldr	r3, [r7, #4]
 8004412:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8004414:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004416:	687b      	ldr	r3, [r7, #4]
 8004418:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800441a:	0018      	movs	r0, r3
 800441c:	4790      	blx	r2
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800441e:	e011      	b.n	8004444 <HAL_UART_IRQHandler+0x1f4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
            /*Call registered error callback*/
            huart->ErrorCallback(huart);
#else
            /*Call legacy weak error callback*/
            HAL_UART_ErrorCallback(huart);
 8004420:	687b      	ldr	r3, [r7, #4]
 8004422:	0018      	movs	r0, r3
 8004424:	f000 f83c 	bl	80044a0 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8004428:	e00c      	b.n	8004444 <HAL_UART_IRQHandler+0x1f4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 800442a:	687b      	ldr	r3, [r7, #4]
 800442c:	0018      	movs	r0, r3
 800442e:	f000 f837 	bl	80044a0 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8004432:	e007      	b.n	8004444 <HAL_UART_IRQHandler+0x1f4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered error callback*/
        huart->ErrorCallback(huart);
#else
        /*Call legacy weak error callback*/
        HAL_UART_ErrorCallback(huart);
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	0018      	movs	r0, r3
 8004438:	f000 f832 	bl	80044a0 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 800443c:	687b      	ldr	r3, [r7, #4]
 800443e:	2200      	movs	r2, #0
 8004440:	67da      	str	r2, [r3, #124]	@ 0x7c
      }
    }
    return;
 8004442:	e022      	b.n	800448a <HAL_UART_IRQHandler+0x23a>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8004444:	46c0      	nop			@ (mov r8, r8)
    return;
 8004446:	e020      	b.n	800448a <HAL_UART_IRQHandler+0x23a>
    return;
  }
#endif /* USART_CR1_UESM */

  /* UART in mode Transmitter ------------------------------------------------*/
  if (((isrflags & USART_ISR_TXE) != 0U)
 8004448:	69fb      	ldr	r3, [r7, #28]
 800444a:	2280      	movs	r2, #128	@ 0x80
 800444c:	4013      	ands	r3, r2
 800444e:	d00d      	beq.n	800446c <HAL_UART_IRQHandler+0x21c>
      && ((cr1its & USART_CR1_TXEIE) != 0U))
 8004450:	69bb      	ldr	r3, [r7, #24]
 8004452:	2280      	movs	r2, #128	@ 0x80
 8004454:	4013      	ands	r3, r2
 8004456:	d009      	beq.n	800446c <HAL_UART_IRQHandler+0x21c>
  {
    if (huart->TxISR != NULL)
 8004458:	687b      	ldr	r3, [r7, #4]
 800445a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800445c:	2b00      	cmp	r3, #0
 800445e:	d016      	beq.n	800448e <HAL_UART_IRQHandler+0x23e>
    {
      huart->TxISR(huart);
 8004460:	687b      	ldr	r3, [r7, #4]
 8004462:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8004464:	687a      	ldr	r2, [r7, #4]
 8004466:	0010      	movs	r0, r2
 8004468:	4798      	blx	r3
    }
    return;
 800446a:	e010      	b.n	800448e <HAL_UART_IRQHandler+0x23e>
  }

  /* UART in mode Transmitter (transmission end) -----------------------------*/
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 800446c:	69fb      	ldr	r3, [r7, #28]
 800446e:	2240      	movs	r2, #64	@ 0x40
 8004470:	4013      	ands	r3, r2
 8004472:	d00d      	beq.n	8004490 <HAL_UART_IRQHandler+0x240>
 8004474:	69bb      	ldr	r3, [r7, #24]
 8004476:	2240      	movs	r2, #64	@ 0x40
 8004478:	4013      	ands	r3, r2
 800447a:	d009      	beq.n	8004490 <HAL_UART_IRQHandler+0x240>
  {
    UART_EndTransmit_IT(huart);
 800447c:	687b      	ldr	r3, [r7, #4]
 800447e:	0018      	movs	r0, r3
 8004480:	f000 fbbe 	bl	8004c00 <UART_EndTransmit_IT>
    return;
 8004484:	e004      	b.n	8004490 <HAL_UART_IRQHandler+0x240>
      return;
 8004486:	46c0      	nop			@ (mov r8, r8)
 8004488:	e002      	b.n	8004490 <HAL_UART_IRQHandler+0x240>
    return;
 800448a:	46c0      	nop			@ (mov r8, r8)
 800448c:	e000      	b.n	8004490 <HAL_UART_IRQHandler+0x240>
    return;
 800448e:	46c0      	nop			@ (mov r8, r8)
  }

}
 8004490:	46bd      	mov	sp, r7
 8004492:	b008      	add	sp, #32
 8004494:	bd80      	pop	{r7, pc}
 8004496:	46c0      	nop			@ (mov r8, r8)
 8004498:	0000080f 	.word	0x0000080f
 800449c:	08004aed 	.word	0x08004aed

080044a0 <HAL_UART_ErrorCallback>:
  * @brief  UART error callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 80044a0:	b580      	push	{r7, lr}
 80044a2:	b082      	sub	sp, #8
 80044a4:	af00      	add	r7, sp, #0
 80044a6:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_ErrorCallback can be implemented in the user file.
   */
}
 80044a8:	46c0      	nop			@ (mov r8, r8)
 80044aa:	46bd      	mov	sp, r7
 80044ac:	b002      	add	sp, #8
 80044ae:	bd80      	pop	{r7, pc}

080044b0 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 80044b0:	b580      	push	{r7, lr}
 80044b2:	b088      	sub	sp, #32
 80044b4:	af00      	add	r7, sp, #0
 80044b6:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv                   = 0x00000000U;
 80044b8:	2300      	movs	r3, #0
 80044ba:	61bb      	str	r3, [r7, #24]
  HAL_StatusTypeDef ret               = HAL_OK;
 80044bc:	2317      	movs	r3, #23
 80044be:	18fb      	adds	r3, r7, r3
 80044c0:	2200      	movs	r2, #0
 80044c2:	701a      	strb	r2, [r3, #0]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	689a      	ldr	r2, [r3, #8]
 80044c8:	687b      	ldr	r3, [r7, #4]
 80044ca:	691b      	ldr	r3, [r3, #16]
 80044cc:	431a      	orrs	r2, r3
 80044ce:	687b      	ldr	r3, [r7, #4]
 80044d0:	695b      	ldr	r3, [r3, #20]
 80044d2:	431a      	orrs	r2, r3
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	69db      	ldr	r3, [r3, #28]
 80044d8:	4313      	orrs	r3, r2
 80044da:	613b      	str	r3, [r7, #16]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80044dc:	687b      	ldr	r3, [r7, #4]
 80044de:	681b      	ldr	r3, [r3, #0]
 80044e0:	681b      	ldr	r3, [r3, #0]
 80044e2:	4aaf      	ldr	r2, [pc, #700]	@ (80047a0 <UART_SetConfig+0x2f0>)
 80044e4:	4013      	ands	r3, r2
 80044e6:	0019      	movs	r1, r3
 80044e8:	687b      	ldr	r3, [r7, #4]
 80044ea:	681b      	ldr	r3, [r3, #0]
 80044ec:	693a      	ldr	r2, [r7, #16]
 80044ee:	430a      	orrs	r2, r1
 80044f0:	601a      	str	r2, [r3, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80044f2:	687b      	ldr	r3, [r7, #4]
 80044f4:	681b      	ldr	r3, [r3, #0]
 80044f6:	685b      	ldr	r3, [r3, #4]
 80044f8:	4aaa      	ldr	r2, [pc, #680]	@ (80047a4 <UART_SetConfig+0x2f4>)
 80044fa:	4013      	ands	r3, r2
 80044fc:	0019      	movs	r1, r3
 80044fe:	687b      	ldr	r3, [r7, #4]
 8004500:	68da      	ldr	r2, [r3, #12]
 8004502:	687b      	ldr	r3, [r7, #4]
 8004504:	681b      	ldr	r3, [r3, #0]
 8004506:	430a      	orrs	r2, r1
 8004508:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	699b      	ldr	r3, [r3, #24]
 800450e:	613b      	str	r3, [r7, #16]

  tmpreg |= huart->Init.OneBitSampling;
 8004510:	687b      	ldr	r3, [r7, #4]
 8004512:	6a1b      	ldr	r3, [r3, #32]
 8004514:	693a      	ldr	r2, [r7, #16]
 8004516:	4313      	orrs	r3, r2
 8004518:	613b      	str	r3, [r7, #16]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 800451a:	687b      	ldr	r3, [r7, #4]
 800451c:	681b      	ldr	r3, [r3, #0]
 800451e:	689b      	ldr	r3, [r3, #8]
 8004520:	4aa1      	ldr	r2, [pc, #644]	@ (80047a8 <UART_SetConfig+0x2f8>)
 8004522:	4013      	ands	r3, r2
 8004524:	0019      	movs	r1, r3
 8004526:	687b      	ldr	r3, [r7, #4]
 8004528:	681b      	ldr	r3, [r3, #0]
 800452a:	693a      	ldr	r2, [r7, #16]
 800452c:	430a      	orrs	r2, r1
 800452e:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	681b      	ldr	r3, [r3, #0]
 8004534:	4a9d      	ldr	r2, [pc, #628]	@ (80047ac <UART_SetConfig+0x2fc>)
 8004536:	4293      	cmp	r3, r2
 8004538:	d127      	bne.n	800458a <UART_SetConfig+0xda>
 800453a:	4b9d      	ldr	r3, [pc, #628]	@ (80047b0 <UART_SetConfig+0x300>)
 800453c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800453e:	2203      	movs	r2, #3
 8004540:	4013      	ands	r3, r2
 8004542:	2b03      	cmp	r3, #3
 8004544:	d00d      	beq.n	8004562 <UART_SetConfig+0xb2>
 8004546:	d81b      	bhi.n	8004580 <UART_SetConfig+0xd0>
 8004548:	2b02      	cmp	r3, #2
 800454a:	d014      	beq.n	8004576 <UART_SetConfig+0xc6>
 800454c:	d818      	bhi.n	8004580 <UART_SetConfig+0xd0>
 800454e:	2b00      	cmp	r3, #0
 8004550:	d002      	beq.n	8004558 <UART_SetConfig+0xa8>
 8004552:	2b01      	cmp	r3, #1
 8004554:	d00a      	beq.n	800456c <UART_SetConfig+0xbc>
 8004556:	e013      	b.n	8004580 <UART_SetConfig+0xd0>
 8004558:	231f      	movs	r3, #31
 800455a:	18fb      	adds	r3, r7, r3
 800455c:	2200      	movs	r2, #0
 800455e:	701a      	strb	r2, [r3, #0]
 8004560:	e021      	b.n	80045a6 <UART_SetConfig+0xf6>
 8004562:	231f      	movs	r3, #31
 8004564:	18fb      	adds	r3, r7, r3
 8004566:	2202      	movs	r2, #2
 8004568:	701a      	strb	r2, [r3, #0]
 800456a:	e01c      	b.n	80045a6 <UART_SetConfig+0xf6>
 800456c:	231f      	movs	r3, #31
 800456e:	18fb      	adds	r3, r7, r3
 8004570:	2204      	movs	r2, #4
 8004572:	701a      	strb	r2, [r3, #0]
 8004574:	e017      	b.n	80045a6 <UART_SetConfig+0xf6>
 8004576:	231f      	movs	r3, #31
 8004578:	18fb      	adds	r3, r7, r3
 800457a:	2208      	movs	r2, #8
 800457c:	701a      	strb	r2, [r3, #0]
 800457e:	e012      	b.n	80045a6 <UART_SetConfig+0xf6>
 8004580:	231f      	movs	r3, #31
 8004582:	18fb      	adds	r3, r7, r3
 8004584:	2210      	movs	r2, #16
 8004586:	701a      	strb	r2, [r3, #0]
 8004588:	e00d      	b.n	80045a6 <UART_SetConfig+0xf6>
 800458a:	687b      	ldr	r3, [r7, #4]
 800458c:	681b      	ldr	r3, [r3, #0]
 800458e:	4a89      	ldr	r2, [pc, #548]	@ (80047b4 <UART_SetConfig+0x304>)
 8004590:	4293      	cmp	r3, r2
 8004592:	d104      	bne.n	800459e <UART_SetConfig+0xee>
 8004594:	231f      	movs	r3, #31
 8004596:	18fb      	adds	r3, r7, r3
 8004598:	2200      	movs	r2, #0
 800459a:	701a      	strb	r2, [r3, #0]
 800459c:	e003      	b.n	80045a6 <UART_SetConfig+0xf6>
 800459e:	231f      	movs	r3, #31
 80045a0:	18fb      	adds	r3, r7, r3
 80045a2:	2210      	movs	r2, #16
 80045a4:	701a      	strb	r2, [r3, #0]

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80045a6:	687b      	ldr	r3, [r7, #4]
 80045a8:	69da      	ldr	r2, [r3, #28]
 80045aa:	2380      	movs	r3, #128	@ 0x80
 80045ac:	021b      	lsls	r3, r3, #8
 80045ae:	429a      	cmp	r2, r3
 80045b0:	d000      	beq.n	80045b4 <UART_SetConfig+0x104>
 80045b2:	e07e      	b.n	80046b2 <UART_SetConfig+0x202>
  {
    switch (clocksource)
 80045b4:	231f      	movs	r3, #31
 80045b6:	18fb      	adds	r3, r7, r3
 80045b8:	781b      	ldrb	r3, [r3, #0]
 80045ba:	2b08      	cmp	r3, #8
 80045bc:	d03f      	beq.n	800463e <UART_SetConfig+0x18e>
 80045be:	dc4e      	bgt.n	800465e <UART_SetConfig+0x1ae>
 80045c0:	2b04      	cmp	r3, #4
 80045c2:	d028      	beq.n	8004616 <UART_SetConfig+0x166>
 80045c4:	dc4b      	bgt.n	800465e <UART_SetConfig+0x1ae>
 80045c6:	2b00      	cmp	r3, #0
 80045c8:	d002      	beq.n	80045d0 <UART_SetConfig+0x120>
 80045ca:	2b02      	cmp	r3, #2
 80045cc:	d014      	beq.n	80045f8 <UART_SetConfig+0x148>
 80045ce:	e046      	b.n	800465e <UART_SetConfig+0x1ae>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 80045d0:	f7ff fbe6 	bl	8003da0 <HAL_RCC_GetPCLK1Freq>
 80045d4:	0003      	movs	r3, r0
 80045d6:	60fb      	str	r3, [r7, #12]
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 80045d8:	68fb      	ldr	r3, [r7, #12]
 80045da:	005a      	lsls	r2, r3, #1
 80045dc:	687b      	ldr	r3, [r7, #4]
 80045de:	685b      	ldr	r3, [r3, #4]
 80045e0:	085b      	lsrs	r3, r3, #1
 80045e2:	18d2      	adds	r2, r2, r3
 80045e4:	687b      	ldr	r3, [r7, #4]
 80045e6:	685b      	ldr	r3, [r3, #4]
 80045e8:	0019      	movs	r1, r3
 80045ea:	0010      	movs	r0, r2
 80045ec:	f7fb fda8 	bl	8000140 <__udivsi3>
 80045f0:	0003      	movs	r3, r0
 80045f2:	b29b      	uxth	r3, r3
 80045f4:	61bb      	str	r3, [r7, #24]
        break;
 80045f6:	e037      	b.n	8004668 <UART_SetConfig+0x1b8>
      case UART_CLOCKSOURCE_HSI:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 80045f8:	687b      	ldr	r3, [r7, #4]
 80045fa:	685b      	ldr	r3, [r3, #4]
 80045fc:	085b      	lsrs	r3, r3, #1
 80045fe:	4a6e      	ldr	r2, [pc, #440]	@ (80047b8 <UART_SetConfig+0x308>)
 8004600:	189a      	adds	r2, r3, r2
 8004602:	687b      	ldr	r3, [r7, #4]
 8004604:	685b      	ldr	r3, [r3, #4]
 8004606:	0019      	movs	r1, r3
 8004608:	0010      	movs	r0, r2
 800460a:	f7fb fd99 	bl	8000140 <__udivsi3>
 800460e:	0003      	movs	r3, r0
 8004610:	b29b      	uxth	r3, r3
 8004612:	61bb      	str	r3, [r7, #24]
        break;
 8004614:	e028      	b.n	8004668 <UART_SetConfig+0x1b8>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8004616:	f7ff fb55 	bl	8003cc4 <HAL_RCC_GetSysClockFreq>
 800461a:	0003      	movs	r3, r0
 800461c:	60fb      	str	r3, [r7, #12]
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 800461e:	68fb      	ldr	r3, [r7, #12]
 8004620:	005a      	lsls	r2, r3, #1
 8004622:	687b      	ldr	r3, [r7, #4]
 8004624:	685b      	ldr	r3, [r3, #4]
 8004626:	085b      	lsrs	r3, r3, #1
 8004628:	18d2      	adds	r2, r2, r3
 800462a:	687b      	ldr	r3, [r7, #4]
 800462c:	685b      	ldr	r3, [r3, #4]
 800462e:	0019      	movs	r1, r3
 8004630:	0010      	movs	r0, r2
 8004632:	f7fb fd85 	bl	8000140 <__udivsi3>
 8004636:	0003      	movs	r3, r0
 8004638:	b29b      	uxth	r3, r3
 800463a:	61bb      	str	r3, [r7, #24]
        break;
 800463c:	e014      	b.n	8004668 <UART_SetConfig+0x1b8>
      case UART_CLOCKSOURCE_LSE:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 800463e:	687b      	ldr	r3, [r7, #4]
 8004640:	685b      	ldr	r3, [r3, #4]
 8004642:	085b      	lsrs	r3, r3, #1
 8004644:	2280      	movs	r2, #128	@ 0x80
 8004646:	0252      	lsls	r2, r2, #9
 8004648:	189a      	adds	r2, r3, r2
 800464a:	687b      	ldr	r3, [r7, #4]
 800464c:	685b      	ldr	r3, [r3, #4]
 800464e:	0019      	movs	r1, r3
 8004650:	0010      	movs	r0, r2
 8004652:	f7fb fd75 	bl	8000140 <__udivsi3>
 8004656:	0003      	movs	r3, r0
 8004658:	b29b      	uxth	r3, r3
 800465a:	61bb      	str	r3, [r7, #24]
        break;
 800465c:	e004      	b.n	8004668 <UART_SetConfig+0x1b8>
      default:
        ret = HAL_ERROR;
 800465e:	2317      	movs	r3, #23
 8004660:	18fb      	adds	r3, r7, r3
 8004662:	2201      	movs	r2, #1
 8004664:	701a      	strb	r2, [r3, #0]
        break;
 8004666:	46c0      	nop			@ (mov r8, r8)
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8004668:	69bb      	ldr	r3, [r7, #24]
 800466a:	2b0f      	cmp	r3, #15
 800466c:	d91c      	bls.n	80046a8 <UART_SetConfig+0x1f8>
 800466e:	69ba      	ldr	r2, [r7, #24]
 8004670:	2380      	movs	r3, #128	@ 0x80
 8004672:	025b      	lsls	r3, r3, #9
 8004674:	429a      	cmp	r2, r3
 8004676:	d217      	bcs.n	80046a8 <UART_SetConfig+0x1f8>
    {
      brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8004678:	69bb      	ldr	r3, [r7, #24]
 800467a:	b29a      	uxth	r2, r3
 800467c:	200a      	movs	r0, #10
 800467e:	183b      	adds	r3, r7, r0
 8004680:	210f      	movs	r1, #15
 8004682:	438a      	bics	r2, r1
 8004684:	801a      	strh	r2, [r3, #0]
      brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8004686:	69bb      	ldr	r3, [r7, #24]
 8004688:	085b      	lsrs	r3, r3, #1
 800468a:	b29b      	uxth	r3, r3
 800468c:	2207      	movs	r2, #7
 800468e:	4013      	ands	r3, r2
 8004690:	b299      	uxth	r1, r3
 8004692:	183b      	adds	r3, r7, r0
 8004694:	183a      	adds	r2, r7, r0
 8004696:	8812      	ldrh	r2, [r2, #0]
 8004698:	430a      	orrs	r2, r1
 800469a:	801a      	strh	r2, [r3, #0]
      huart->Instance->BRR = brrtemp;
 800469c:	687b      	ldr	r3, [r7, #4]
 800469e:	681b      	ldr	r3, [r3, #0]
 80046a0:	183a      	adds	r2, r7, r0
 80046a2:	8812      	ldrh	r2, [r2, #0]
 80046a4:	60da      	str	r2, [r3, #12]
 80046a6:	e06d      	b.n	8004784 <UART_SetConfig+0x2d4>
    }
    else
    {
      ret = HAL_ERROR;
 80046a8:	2317      	movs	r3, #23
 80046aa:	18fb      	adds	r3, r7, r3
 80046ac:	2201      	movs	r2, #1
 80046ae:	701a      	strb	r2, [r3, #0]
 80046b0:	e068      	b.n	8004784 <UART_SetConfig+0x2d4>
    }
  }
  else
  {
    switch (clocksource)
 80046b2:	231f      	movs	r3, #31
 80046b4:	18fb      	adds	r3, r7, r3
 80046b6:	781b      	ldrb	r3, [r3, #0]
 80046b8:	2b08      	cmp	r3, #8
 80046ba:	d03d      	beq.n	8004738 <UART_SetConfig+0x288>
 80046bc:	dc4c      	bgt.n	8004758 <UART_SetConfig+0x2a8>
 80046be:	2b04      	cmp	r3, #4
 80046c0:	d027      	beq.n	8004712 <UART_SetConfig+0x262>
 80046c2:	dc49      	bgt.n	8004758 <UART_SetConfig+0x2a8>
 80046c4:	2b00      	cmp	r3, #0
 80046c6:	d002      	beq.n	80046ce <UART_SetConfig+0x21e>
 80046c8:	2b02      	cmp	r3, #2
 80046ca:	d013      	beq.n	80046f4 <UART_SetConfig+0x244>
 80046cc:	e044      	b.n	8004758 <UART_SetConfig+0x2a8>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 80046ce:	f7ff fb67 	bl	8003da0 <HAL_RCC_GetPCLK1Freq>
 80046d2:	0003      	movs	r3, r0
 80046d4:	60fb      	str	r3, [r7, #12]
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 80046d6:	687b      	ldr	r3, [r7, #4]
 80046d8:	685b      	ldr	r3, [r3, #4]
 80046da:	085a      	lsrs	r2, r3, #1
 80046dc:	68fb      	ldr	r3, [r7, #12]
 80046de:	18d2      	adds	r2, r2, r3
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	685b      	ldr	r3, [r3, #4]
 80046e4:	0019      	movs	r1, r3
 80046e6:	0010      	movs	r0, r2
 80046e8:	f7fb fd2a 	bl	8000140 <__udivsi3>
 80046ec:	0003      	movs	r3, r0
 80046ee:	b29b      	uxth	r3, r3
 80046f0:	61bb      	str	r3, [r7, #24]
        break;
 80046f2:	e036      	b.n	8004762 <UART_SetConfig+0x2b2>
      case UART_CLOCKSOURCE_HSI:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	685b      	ldr	r3, [r3, #4]
 80046f8:	085b      	lsrs	r3, r3, #1
 80046fa:	4a30      	ldr	r2, [pc, #192]	@ (80047bc <UART_SetConfig+0x30c>)
 80046fc:	189a      	adds	r2, r3, r2
 80046fe:	687b      	ldr	r3, [r7, #4]
 8004700:	685b      	ldr	r3, [r3, #4]
 8004702:	0019      	movs	r1, r3
 8004704:	0010      	movs	r0, r2
 8004706:	f7fb fd1b 	bl	8000140 <__udivsi3>
 800470a:	0003      	movs	r3, r0
 800470c:	b29b      	uxth	r3, r3
 800470e:	61bb      	str	r3, [r7, #24]
        break;
 8004710:	e027      	b.n	8004762 <UART_SetConfig+0x2b2>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8004712:	f7ff fad7 	bl	8003cc4 <HAL_RCC_GetSysClockFreq>
 8004716:	0003      	movs	r3, r0
 8004718:	60fb      	str	r3, [r7, #12]
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	685b      	ldr	r3, [r3, #4]
 800471e:	085a      	lsrs	r2, r3, #1
 8004720:	68fb      	ldr	r3, [r7, #12]
 8004722:	18d2      	adds	r2, r2, r3
 8004724:	687b      	ldr	r3, [r7, #4]
 8004726:	685b      	ldr	r3, [r3, #4]
 8004728:	0019      	movs	r1, r3
 800472a:	0010      	movs	r0, r2
 800472c:	f7fb fd08 	bl	8000140 <__udivsi3>
 8004730:	0003      	movs	r3, r0
 8004732:	b29b      	uxth	r3, r3
 8004734:	61bb      	str	r3, [r7, #24]
        break;
 8004736:	e014      	b.n	8004762 <UART_SetConfig+0x2b2>
      case UART_CLOCKSOURCE_LSE:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 8004738:	687b      	ldr	r3, [r7, #4]
 800473a:	685b      	ldr	r3, [r3, #4]
 800473c:	085b      	lsrs	r3, r3, #1
 800473e:	2280      	movs	r2, #128	@ 0x80
 8004740:	0212      	lsls	r2, r2, #8
 8004742:	189a      	adds	r2, r3, r2
 8004744:	687b      	ldr	r3, [r7, #4]
 8004746:	685b      	ldr	r3, [r3, #4]
 8004748:	0019      	movs	r1, r3
 800474a:	0010      	movs	r0, r2
 800474c:	f7fb fcf8 	bl	8000140 <__udivsi3>
 8004750:	0003      	movs	r3, r0
 8004752:	b29b      	uxth	r3, r3
 8004754:	61bb      	str	r3, [r7, #24]
        break;
 8004756:	e004      	b.n	8004762 <UART_SetConfig+0x2b2>
      default:
        ret = HAL_ERROR;
 8004758:	2317      	movs	r3, #23
 800475a:	18fb      	adds	r3, r7, r3
 800475c:	2201      	movs	r2, #1
 800475e:	701a      	strb	r2, [r3, #0]
        break;
 8004760:	46c0      	nop			@ (mov r8, r8)
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8004762:	69bb      	ldr	r3, [r7, #24]
 8004764:	2b0f      	cmp	r3, #15
 8004766:	d909      	bls.n	800477c <UART_SetConfig+0x2cc>
 8004768:	69ba      	ldr	r2, [r7, #24]
 800476a:	2380      	movs	r3, #128	@ 0x80
 800476c:	025b      	lsls	r3, r3, #9
 800476e:	429a      	cmp	r2, r3
 8004770:	d204      	bcs.n	800477c <UART_SetConfig+0x2cc>
    {
      huart->Instance->BRR = usartdiv;
 8004772:	687b      	ldr	r3, [r7, #4]
 8004774:	681b      	ldr	r3, [r3, #0]
 8004776:	69ba      	ldr	r2, [r7, #24]
 8004778:	60da      	str	r2, [r3, #12]
 800477a:	e003      	b.n	8004784 <UART_SetConfig+0x2d4>
    }
    else
    {
      ret = HAL_ERROR;
 800477c:	2317      	movs	r3, #23
 800477e:	18fb      	adds	r3, r7, r3
 8004780:	2201      	movs	r2, #1
 8004782:	701a      	strb	r2, [r3, #0]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	2200      	movs	r2, #0
 8004788:	661a      	str	r2, [r3, #96]	@ 0x60
  huart->TxISR = NULL;
 800478a:	687b      	ldr	r3, [r7, #4]
 800478c:	2200      	movs	r2, #0
 800478e:	665a      	str	r2, [r3, #100]	@ 0x64

  return ret;
 8004790:	2317      	movs	r3, #23
 8004792:	18fb      	adds	r3, r7, r3
 8004794:	781b      	ldrb	r3, [r3, #0]
}
 8004796:	0018      	movs	r0, r3
 8004798:	46bd      	mov	sp, r7
 800479a:	b008      	add	sp, #32
 800479c:	bd80      	pop	{r7, pc}
 800479e:	46c0      	nop			@ (mov r8, r8)
 80047a0:	ffff69f3 	.word	0xffff69f3
 80047a4:	ffffcfff 	.word	0xffffcfff
 80047a8:	fffff4ff 	.word	0xfffff4ff
 80047ac:	40013800 	.word	0x40013800
 80047b0:	40021000 	.word	0x40021000
 80047b4:	40004400 	.word	0x40004400
 80047b8:	00f42400 	.word	0x00f42400
 80047bc:	007a1200 	.word	0x007a1200

080047c0 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 80047c0:	b580      	push	{r7, lr}
 80047c2:	b082      	sub	sp, #8
 80047c4:	af00      	add	r7, sp, #0
 80047c6:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 80047c8:	687b      	ldr	r3, [r7, #4]
 80047ca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047cc:	2201      	movs	r2, #1
 80047ce:	4013      	ands	r3, r2
 80047d0:	d00b      	beq.n	80047ea <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 80047d2:	687b      	ldr	r3, [r7, #4]
 80047d4:	681b      	ldr	r3, [r3, #0]
 80047d6:	685b      	ldr	r3, [r3, #4]
 80047d8:	4a4a      	ldr	r2, [pc, #296]	@ (8004904 <UART_AdvFeatureConfig+0x144>)
 80047da:	4013      	ands	r3, r2
 80047dc:	0019      	movs	r1, r3
 80047de:	687b      	ldr	r3, [r7, #4]
 80047e0:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80047e2:	687b      	ldr	r3, [r7, #4]
 80047e4:	681b      	ldr	r3, [r3, #0]
 80047e6:	430a      	orrs	r2, r1
 80047e8:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 80047ea:	687b      	ldr	r3, [r7, #4]
 80047ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047ee:	2202      	movs	r2, #2
 80047f0:	4013      	ands	r3, r2
 80047f2:	d00b      	beq.n	800480c <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 80047f4:	687b      	ldr	r3, [r7, #4]
 80047f6:	681b      	ldr	r3, [r3, #0]
 80047f8:	685b      	ldr	r3, [r3, #4]
 80047fa:	4a43      	ldr	r2, [pc, #268]	@ (8004908 <UART_AdvFeatureConfig+0x148>)
 80047fc:	4013      	ands	r3, r2
 80047fe:	0019      	movs	r1, r3
 8004800:	687b      	ldr	r3, [r7, #4]
 8004802:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8004804:	687b      	ldr	r3, [r7, #4]
 8004806:	681b      	ldr	r3, [r3, #0]
 8004808:	430a      	orrs	r2, r1
 800480a:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 800480c:	687b      	ldr	r3, [r7, #4]
 800480e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004810:	2204      	movs	r2, #4
 8004812:	4013      	ands	r3, r2
 8004814:	d00b      	beq.n	800482e <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8004816:	687b      	ldr	r3, [r7, #4]
 8004818:	681b      	ldr	r3, [r3, #0]
 800481a:	685b      	ldr	r3, [r3, #4]
 800481c:	4a3b      	ldr	r2, [pc, #236]	@ (800490c <UART_AdvFeatureConfig+0x14c>)
 800481e:	4013      	ands	r3, r2
 8004820:	0019      	movs	r1, r3
 8004822:	687b      	ldr	r3, [r7, #4]
 8004824:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004826:	687b      	ldr	r3, [r7, #4]
 8004828:	681b      	ldr	r3, [r3, #0]
 800482a:	430a      	orrs	r2, r1
 800482c:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 800482e:	687b      	ldr	r3, [r7, #4]
 8004830:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004832:	2208      	movs	r2, #8
 8004834:	4013      	ands	r3, r2
 8004836:	d00b      	beq.n	8004850 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8004838:	687b      	ldr	r3, [r7, #4]
 800483a:	681b      	ldr	r3, [r3, #0]
 800483c:	685b      	ldr	r3, [r3, #4]
 800483e:	4a34      	ldr	r2, [pc, #208]	@ (8004910 <UART_AdvFeatureConfig+0x150>)
 8004840:	4013      	ands	r3, r2
 8004842:	0019      	movs	r1, r3
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004848:	687b      	ldr	r3, [r7, #4]
 800484a:	681b      	ldr	r3, [r3, #0]
 800484c:	430a      	orrs	r2, r1
 800484e:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004854:	2210      	movs	r2, #16
 8004856:	4013      	ands	r3, r2
 8004858:	d00b      	beq.n	8004872 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 800485a:	687b      	ldr	r3, [r7, #4]
 800485c:	681b      	ldr	r3, [r3, #0]
 800485e:	689b      	ldr	r3, [r3, #8]
 8004860:	4a2c      	ldr	r2, [pc, #176]	@ (8004914 <UART_AdvFeatureConfig+0x154>)
 8004862:	4013      	ands	r3, r2
 8004864:	0019      	movs	r1, r3
 8004866:	687b      	ldr	r3, [r7, #4]
 8004868:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	430a      	orrs	r2, r1
 8004870:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8004872:	687b      	ldr	r3, [r7, #4]
 8004874:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004876:	2220      	movs	r2, #32
 8004878:	4013      	ands	r3, r2
 800487a:	d00b      	beq.n	8004894 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 800487c:	687b      	ldr	r3, [r7, #4]
 800487e:	681b      	ldr	r3, [r3, #0]
 8004880:	689b      	ldr	r3, [r3, #8]
 8004882:	4a25      	ldr	r2, [pc, #148]	@ (8004918 <UART_AdvFeatureConfig+0x158>)
 8004884:	4013      	ands	r3, r2
 8004886:	0019      	movs	r1, r3
 8004888:	687b      	ldr	r3, [r7, #4]
 800488a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800488c:	687b      	ldr	r3, [r7, #4]
 800488e:	681b      	ldr	r3, [r3, #0]
 8004890:	430a      	orrs	r2, r1
 8004892:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004898:	2240      	movs	r2, #64	@ 0x40
 800489a:	4013      	ands	r3, r2
 800489c:	d01d      	beq.n	80048da <UART_AdvFeatureConfig+0x11a>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	681b      	ldr	r3, [r3, #0]
 80048a2:	685b      	ldr	r3, [r3, #4]
 80048a4:	4a1d      	ldr	r2, [pc, #116]	@ (800491c <UART_AdvFeatureConfig+0x15c>)
 80048a6:	4013      	ands	r3, r2
 80048a8:	0019      	movs	r1, r3
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80048ae:	687b      	ldr	r3, [r7, #4]
 80048b0:	681b      	ldr	r3, [r3, #0]
 80048b2:	430a      	orrs	r2, r1
 80048b4:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 80048b6:	687b      	ldr	r3, [r7, #4]
 80048b8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80048ba:	2380      	movs	r3, #128	@ 0x80
 80048bc:	035b      	lsls	r3, r3, #13
 80048be:	429a      	cmp	r2, r3
 80048c0:	d10b      	bne.n	80048da <UART_AdvFeatureConfig+0x11a>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 80048c2:	687b      	ldr	r3, [r7, #4]
 80048c4:	681b      	ldr	r3, [r3, #0]
 80048c6:	685b      	ldr	r3, [r3, #4]
 80048c8:	4a15      	ldr	r2, [pc, #84]	@ (8004920 <UART_AdvFeatureConfig+0x160>)
 80048ca:	4013      	ands	r3, r2
 80048cc:	0019      	movs	r1, r3
 80048ce:	687b      	ldr	r3, [r7, #4]
 80048d0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80048d2:	687b      	ldr	r3, [r7, #4]
 80048d4:	681b      	ldr	r3, [r3, #0]
 80048d6:	430a      	orrs	r2, r1
 80048d8:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 80048da:	687b      	ldr	r3, [r7, #4]
 80048dc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80048de:	2280      	movs	r2, #128	@ 0x80
 80048e0:	4013      	ands	r3, r2
 80048e2:	d00b      	beq.n	80048fc <UART_AdvFeatureConfig+0x13c>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 80048e4:	687b      	ldr	r3, [r7, #4]
 80048e6:	681b      	ldr	r3, [r3, #0]
 80048e8:	685b      	ldr	r3, [r3, #4]
 80048ea:	4a0e      	ldr	r2, [pc, #56]	@ (8004924 <UART_AdvFeatureConfig+0x164>)
 80048ec:	4013      	ands	r3, r2
 80048ee:	0019      	movs	r1, r3
 80048f0:	687b      	ldr	r3, [r7, #4]
 80048f2:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 80048f4:	687b      	ldr	r3, [r7, #4]
 80048f6:	681b      	ldr	r3, [r3, #0]
 80048f8:	430a      	orrs	r2, r1
 80048fa:	605a      	str	r2, [r3, #4]
  }
}
 80048fc:	46c0      	nop			@ (mov r8, r8)
 80048fe:	46bd      	mov	sp, r7
 8004900:	b002      	add	sp, #8
 8004902:	bd80      	pop	{r7, pc}
 8004904:	fffdffff 	.word	0xfffdffff
 8004908:	fffeffff 	.word	0xfffeffff
 800490c:	fffbffff 	.word	0xfffbffff
 8004910:	ffff7fff 	.word	0xffff7fff
 8004914:	ffffefff 	.word	0xffffefff
 8004918:	ffffdfff 	.word	0xffffdfff
 800491c:	ffefffff 	.word	0xffefffff
 8004920:	ff9fffff 	.word	0xff9fffff
 8004924:	fff7ffff 	.word	0xfff7ffff

08004928 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 8004928:	b580      	push	{r7, lr}
 800492a:	b086      	sub	sp, #24
 800492c:	af02      	add	r7, sp, #8
 800492e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8004930:	687b      	ldr	r3, [r7, #4]
 8004932:	2200      	movs	r2, #0
 8004934:	67da      	str	r2, [r3, #124]	@ 0x7c

  /* Init tickstart for timeout managment*/
  tickstart = HAL_GetTick();
 8004936:	f7fe fac7 	bl	8002ec8 <HAL_GetTick>
 800493a:	0003      	movs	r3, r0
 800493c:	60fb      	str	r3, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 800493e:	687b      	ldr	r3, [r7, #4]
 8004940:	681b      	ldr	r3, [r3, #0]
 8004942:	681b      	ldr	r3, [r3, #0]
 8004944:	2208      	movs	r2, #8
 8004946:	4013      	ands	r3, r2
 8004948:	2b08      	cmp	r3, #8
 800494a:	d10c      	bne.n	8004966 <UART_CheckIdleState+0x3e>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800494c:	68fb      	ldr	r3, [r7, #12]
 800494e:	2280      	movs	r2, #128	@ 0x80
 8004950:	0391      	lsls	r1, r2, #14
 8004952:	6878      	ldr	r0, [r7, #4]
 8004954:	4a15      	ldr	r2, [pc, #84]	@ (80049ac <UART_CheckIdleState+0x84>)
 8004956:	9200      	str	r2, [sp, #0]
 8004958:	2200      	movs	r2, #0
 800495a:	f000 f829 	bl	80049b0 <UART_WaitOnFlagUntilTimeout>
 800495e:	1e03      	subs	r3, r0, #0
 8004960:	d001      	beq.n	8004966 <UART_CheckIdleState+0x3e>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 8004962:	2303      	movs	r3, #3
 8004964:	e01e      	b.n	80049a4 <UART_CheckIdleState+0x7c>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 8004966:	687b      	ldr	r3, [r7, #4]
 8004968:	681b      	ldr	r3, [r3, #0]
 800496a:	681b      	ldr	r3, [r3, #0]
 800496c:	2204      	movs	r2, #4
 800496e:	4013      	ands	r3, r2
 8004970:	2b04      	cmp	r3, #4
 8004972:	d10c      	bne.n	800498e <UART_CheckIdleState+0x66>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8004974:	68fb      	ldr	r3, [r7, #12]
 8004976:	2280      	movs	r2, #128	@ 0x80
 8004978:	03d1      	lsls	r1, r2, #15
 800497a:	6878      	ldr	r0, [r7, #4]
 800497c:	4a0b      	ldr	r2, [pc, #44]	@ (80049ac <UART_CheckIdleState+0x84>)
 800497e:	9200      	str	r2, [sp, #0]
 8004980:	2200      	movs	r2, #0
 8004982:	f000 f815 	bl	80049b0 <UART_WaitOnFlagUntilTimeout>
 8004986:	1e03      	subs	r3, r0, #0
 8004988:	d001      	beq.n	800498e <UART_CheckIdleState+0x66>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 800498a:	2303      	movs	r3, #3
 800498c:	e00a      	b.n	80049a4 <UART_CheckIdleState+0x7c>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 800498e:	687b      	ldr	r3, [r7, #4]
 8004990:	2220      	movs	r2, #32
 8004992:	675a      	str	r2, [r3, #116]	@ 0x74
  huart->RxState = HAL_UART_STATE_READY;
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	2220      	movs	r2, #32
 8004998:	679a      	str	r2, [r3, #120]	@ 0x78

  __HAL_UNLOCK(huart);
 800499a:	687b      	ldr	r3, [r7, #4]
 800499c:	2270      	movs	r2, #112	@ 0x70
 800499e:	2100      	movs	r1, #0
 80049a0:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 80049a2:	2300      	movs	r3, #0
}
 80049a4:	0018      	movs	r0, r3
 80049a6:	46bd      	mov	sp, r7
 80049a8:	b004      	add	sp, #16
 80049aa:	bd80      	pop	{r7, pc}
 80049ac:	01ffffff 	.word	0x01ffffff

080049b0 <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 80049b0:	b580      	push	{r7, lr}
 80049b2:	b084      	sub	sp, #16
 80049b4:	af00      	add	r7, sp, #0
 80049b6:	60f8      	str	r0, [r7, #12]
 80049b8:	60b9      	str	r1, [r7, #8]
 80049ba:	603b      	str	r3, [r7, #0]
 80049bc:	1dfb      	adds	r3, r7, #7
 80049be:	701a      	strb	r2, [r3, #0]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80049c0:	e05d      	b.n	8004a7e <UART_WaitOnFlagUntilTimeout+0xce>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80049c2:	69bb      	ldr	r3, [r7, #24]
 80049c4:	3301      	adds	r3, #1
 80049c6:	d05a      	beq.n	8004a7e <UART_WaitOnFlagUntilTimeout+0xce>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80049c8:	f7fe fa7e 	bl	8002ec8 <HAL_GetTick>
 80049cc:	0002      	movs	r2, r0
 80049ce:	683b      	ldr	r3, [r7, #0]
 80049d0:	1ad3      	subs	r3, r2, r3
 80049d2:	69ba      	ldr	r2, [r7, #24]
 80049d4:	429a      	cmp	r2, r3
 80049d6:	d302      	bcc.n	80049de <UART_WaitOnFlagUntilTimeout+0x2e>
 80049d8:	69bb      	ldr	r3, [r7, #24]
 80049da:	2b00      	cmp	r3, #0
 80049dc:	d11b      	bne.n	8004a16 <UART_WaitOnFlagUntilTimeout+0x66>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80049de:	68fb      	ldr	r3, [r7, #12]
 80049e0:	681b      	ldr	r3, [r3, #0]
 80049e2:	681a      	ldr	r2, [r3, #0]
 80049e4:	68fb      	ldr	r3, [r7, #12]
 80049e6:	681b      	ldr	r3, [r3, #0]
 80049e8:	492f      	ldr	r1, [pc, #188]	@ (8004aa8 <UART_WaitOnFlagUntilTimeout+0xf8>)
 80049ea:	400a      	ands	r2, r1
 80049ec:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80049ee:	68fb      	ldr	r3, [r7, #12]
 80049f0:	681b      	ldr	r3, [r3, #0]
 80049f2:	689a      	ldr	r2, [r3, #8]
 80049f4:	68fb      	ldr	r3, [r7, #12]
 80049f6:	681b      	ldr	r3, [r3, #0]
 80049f8:	2101      	movs	r1, #1
 80049fa:	438a      	bics	r2, r1
 80049fc:	609a      	str	r2, [r3, #8]

        huart->gState = HAL_UART_STATE_READY;
 80049fe:	68fb      	ldr	r3, [r7, #12]
 8004a00:	2220      	movs	r2, #32
 8004a02:	675a      	str	r2, [r3, #116]	@ 0x74
        huart->RxState = HAL_UART_STATE_READY;
 8004a04:	68fb      	ldr	r3, [r7, #12]
 8004a06:	2220      	movs	r2, #32
 8004a08:	679a      	str	r2, [r3, #120]	@ 0x78

        __HAL_UNLOCK(huart);
 8004a0a:	68fb      	ldr	r3, [r7, #12]
 8004a0c:	2270      	movs	r2, #112	@ 0x70
 8004a0e:	2100      	movs	r1, #0
 8004a10:	5499      	strb	r1, [r3, r2]

        return HAL_TIMEOUT;
 8004a12:	2303      	movs	r3, #3
 8004a14:	e043      	b.n	8004a9e <UART_WaitOnFlagUntilTimeout+0xee>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8004a16:	68fb      	ldr	r3, [r7, #12]
 8004a18:	681b      	ldr	r3, [r3, #0]
 8004a1a:	681b      	ldr	r3, [r3, #0]
 8004a1c:	2204      	movs	r2, #4
 8004a1e:	4013      	ands	r3, r2
 8004a20:	d02d      	beq.n	8004a7e <UART_WaitOnFlagUntilTimeout+0xce>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8004a22:	68fb      	ldr	r3, [r7, #12]
 8004a24:	681b      	ldr	r3, [r3, #0]
 8004a26:	69da      	ldr	r2, [r3, #28]
 8004a28:	2380      	movs	r3, #128	@ 0x80
 8004a2a:	011b      	lsls	r3, r3, #4
 8004a2c:	401a      	ands	r2, r3
 8004a2e:	2380      	movs	r3, #128	@ 0x80
 8004a30:	011b      	lsls	r3, r3, #4
 8004a32:	429a      	cmp	r2, r3
 8004a34:	d123      	bne.n	8004a7e <UART_WaitOnFlagUntilTimeout+0xce>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8004a36:	68fb      	ldr	r3, [r7, #12]
 8004a38:	681b      	ldr	r3, [r3, #0]
 8004a3a:	2280      	movs	r2, #128	@ 0x80
 8004a3c:	0112      	lsls	r2, r2, #4
 8004a3e:	621a      	str	r2, [r3, #32]
          
          /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8004a40:	68fb      	ldr	r3, [r7, #12]
 8004a42:	681b      	ldr	r3, [r3, #0]
 8004a44:	681a      	ldr	r2, [r3, #0]
 8004a46:	68fb      	ldr	r3, [r7, #12]
 8004a48:	681b      	ldr	r3, [r3, #0]
 8004a4a:	4917      	ldr	r1, [pc, #92]	@ (8004aa8 <UART_WaitOnFlagUntilTimeout+0xf8>)
 8004a4c:	400a      	ands	r2, r1
 8004a4e:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8004a50:	68fb      	ldr	r3, [r7, #12]
 8004a52:	681b      	ldr	r3, [r3, #0]
 8004a54:	689a      	ldr	r2, [r3, #8]
 8004a56:	68fb      	ldr	r3, [r7, #12]
 8004a58:	681b      	ldr	r3, [r3, #0]
 8004a5a:	2101      	movs	r1, #1
 8004a5c:	438a      	bics	r2, r1
 8004a5e:	609a      	str	r2, [r3, #8]

          huart->gState = HAL_UART_STATE_READY;
 8004a60:	68fb      	ldr	r3, [r7, #12]
 8004a62:	2220      	movs	r2, #32
 8004a64:	675a      	str	r2, [r3, #116]	@ 0x74
          huart->RxState = HAL_UART_STATE_READY;
 8004a66:	68fb      	ldr	r3, [r7, #12]
 8004a68:	2220      	movs	r2, #32
 8004a6a:	679a      	str	r2, [r3, #120]	@ 0x78
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8004a6c:	68fb      	ldr	r3, [r7, #12]
 8004a6e:	2220      	movs	r2, #32
 8004a70:	67da      	str	r2, [r3, #124]	@ 0x7c
          
          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 8004a72:	68fb      	ldr	r3, [r7, #12]
 8004a74:	2270      	movs	r2, #112	@ 0x70
 8004a76:	2100      	movs	r1, #0
 8004a78:	5499      	strb	r1, [r3, r2]
          
          return HAL_TIMEOUT;
 8004a7a:	2303      	movs	r3, #3
 8004a7c:	e00f      	b.n	8004a9e <UART_WaitOnFlagUntilTimeout+0xee>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8004a7e:	68fb      	ldr	r3, [r7, #12]
 8004a80:	681b      	ldr	r3, [r3, #0]
 8004a82:	69db      	ldr	r3, [r3, #28]
 8004a84:	68ba      	ldr	r2, [r7, #8]
 8004a86:	4013      	ands	r3, r2
 8004a88:	68ba      	ldr	r2, [r7, #8]
 8004a8a:	1ad3      	subs	r3, r2, r3
 8004a8c:	425a      	negs	r2, r3
 8004a8e:	4153      	adcs	r3, r2
 8004a90:	b2db      	uxtb	r3, r3
 8004a92:	001a      	movs	r2, r3
 8004a94:	1dfb      	adds	r3, r7, #7
 8004a96:	781b      	ldrb	r3, [r3, #0]
 8004a98:	429a      	cmp	r2, r3
 8004a9a:	d092      	beq.n	80049c2 <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8004a9c:	2300      	movs	r3, #0
}
 8004a9e:	0018      	movs	r0, r3
 8004aa0:	46bd      	mov	sp, r7
 8004aa2:	b004      	add	sp, #16
 8004aa4:	bd80      	pop	{r7, pc}
 8004aa6:	46c0      	nop			@ (mov r8, r8)
 8004aa8:	fffffe5f 	.word	0xfffffe5f

08004aac <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 8004aac:	b580      	push	{r7, lr}
 8004aae:	b082      	sub	sp, #8
 8004ab0:	af00      	add	r7, sp, #0
 8004ab2:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8004ab4:	687b      	ldr	r3, [r7, #4]
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	681a      	ldr	r2, [r3, #0]
 8004aba:	687b      	ldr	r3, [r7, #4]
 8004abc:	681b      	ldr	r3, [r3, #0]
 8004abe:	490a      	ldr	r1, [pc, #40]	@ (8004ae8 <UART_EndRxTransfer+0x3c>)
 8004ac0:	400a      	ands	r2, r1
 8004ac2:	601a      	str	r2, [r3, #0]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8004ac4:	687b      	ldr	r3, [r7, #4]
 8004ac6:	681b      	ldr	r3, [r3, #0]
 8004ac8:	689a      	ldr	r2, [r3, #8]
 8004aca:	687b      	ldr	r3, [r7, #4]
 8004acc:	681b      	ldr	r3, [r3, #0]
 8004ace:	2101      	movs	r1, #1
 8004ad0:	438a      	bics	r2, r1
 8004ad2:	609a      	str	r2, [r3, #8]

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8004ad4:	687b      	ldr	r3, [r7, #4]
 8004ad6:	2220      	movs	r2, #32
 8004ad8:	679a      	str	r2, [r3, #120]	@ 0x78

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 8004ada:	687b      	ldr	r3, [r7, #4]
 8004adc:	2200      	movs	r2, #0
 8004ade:	661a      	str	r2, [r3, #96]	@ 0x60
}
 8004ae0:	46c0      	nop			@ (mov r8, r8)
 8004ae2:	46bd      	mov	sp, r7
 8004ae4:	b002      	add	sp, #8
 8004ae6:	bd80      	pop	{r7, pc}
 8004ae8:	fffffedf 	.word	0xfffffedf

08004aec <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8004aec:	b580      	push	{r7, lr}
 8004aee:	b084      	sub	sp, #16
 8004af0:	af00      	add	r7, sp, #0
 8004af2:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8004af4:	687b      	ldr	r3, [r7, #4]
 8004af6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004af8:	60fb      	str	r3, [r7, #12]
  huart->RxXferCount = 0U;
 8004afa:	68fb      	ldr	r3, [r7, #12]
 8004afc:	225a      	movs	r2, #90	@ 0x5a
 8004afe:	2100      	movs	r1, #0
 8004b00:	5299      	strh	r1, [r3, r2]
  huart->TxXferCount = 0U;
 8004b02:	68fb      	ldr	r3, [r7, #12]
 8004b04:	2252      	movs	r2, #82	@ 0x52
 8004b06:	2100      	movs	r1, #0
 8004b08:	5299      	strh	r1, [r3, r2]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 8004b0a:	68fb      	ldr	r3, [r7, #12]
 8004b0c:	0018      	movs	r0, r3
 8004b0e:	f7ff fcc7 	bl	80044a0 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8004b12:	46c0      	nop			@ (mov r8, r8)
 8004b14:	46bd      	mov	sp, r7
 8004b16:	b004      	add	sp, #16
 8004b18:	bd80      	pop	{r7, pc}

08004b1a <UART_TxISR_8BIT>:
  *         interruptions have been enabled by HAL_UART_Transmit_IT().
  * @param huart UART handle.
  * @retval None
  */
static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
{
 8004b1a:	b580      	push	{r7, lr}
 8004b1c:	b082      	sub	sp, #8
 8004b1e:	af00      	add	r7, sp, #0
 8004b20:	6078      	str	r0, [r7, #4]
  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 8004b22:	687b      	ldr	r3, [r7, #4]
 8004b24:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004b26:	2b21      	cmp	r3, #33	@ 0x21
 8004b28:	d12a      	bne.n	8004b80 <UART_TxISR_8BIT+0x66>
  {
    if (huart->TxXferCount == 0U)
 8004b2a:	687b      	ldr	r3, [r7, #4]
 8004b2c:	2252      	movs	r2, #82	@ 0x52
 8004b2e:	5a9b      	ldrh	r3, [r3, r2]
 8004b30:	b29b      	uxth	r3, r3
 8004b32:	2b00      	cmp	r3, #0
 8004b34:	d110      	bne.n	8004b58 <UART_TxISR_8BIT+0x3e>
    {
      /* Disable the UART Transmit Data Register Empty Interrupt */
      CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 8004b36:	687b      	ldr	r3, [r7, #4]
 8004b38:	681b      	ldr	r3, [r3, #0]
 8004b3a:	681a      	ldr	r2, [r3, #0]
 8004b3c:	687b      	ldr	r3, [r7, #4]
 8004b3e:	681b      	ldr	r3, [r3, #0]
 8004b40:	2180      	movs	r1, #128	@ 0x80
 8004b42:	438a      	bics	r2, r1
 8004b44:	601a      	str	r2, [r3, #0]

      /* Enable the UART Transmit Complete Interrupt */
      SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8004b46:	687b      	ldr	r3, [r7, #4]
 8004b48:	681b      	ldr	r3, [r3, #0]
 8004b4a:	681a      	ldr	r2, [r3, #0]
 8004b4c:	687b      	ldr	r3, [r7, #4]
 8004b4e:	681b      	ldr	r3, [r3, #0]
 8004b50:	2140      	movs	r1, #64	@ 0x40
 8004b52:	430a      	orrs	r2, r1
 8004b54:	601a      	str	r2, [r3, #0]
      huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
      huart->pTxBuffPtr++;
      huart->TxXferCount--;
    }
  }
}
 8004b56:	e013      	b.n	8004b80 <UART_TxISR_8BIT+0x66>
      huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 8004b58:	687b      	ldr	r3, [r7, #4]
 8004b5a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8004b5c:	781a      	ldrb	r2, [r3, #0]
 8004b5e:	687b      	ldr	r3, [r7, #4]
 8004b60:	681b      	ldr	r3, [r3, #0]
 8004b62:	851a      	strh	r2, [r3, #40]	@ 0x28
      huart->pTxBuffPtr++;
 8004b64:	687b      	ldr	r3, [r7, #4]
 8004b66:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8004b68:	1c5a      	adds	r2, r3, #1
 8004b6a:	687b      	ldr	r3, [r7, #4]
 8004b6c:	64da      	str	r2, [r3, #76]	@ 0x4c
      huart->TxXferCount--;
 8004b6e:	687b      	ldr	r3, [r7, #4]
 8004b70:	2252      	movs	r2, #82	@ 0x52
 8004b72:	5a9b      	ldrh	r3, [r3, r2]
 8004b74:	b29b      	uxth	r3, r3
 8004b76:	3b01      	subs	r3, #1
 8004b78:	b299      	uxth	r1, r3
 8004b7a:	687b      	ldr	r3, [r7, #4]
 8004b7c:	2252      	movs	r2, #82	@ 0x52
 8004b7e:	5299      	strh	r1, [r3, r2]
}
 8004b80:	46c0      	nop			@ (mov r8, r8)
 8004b82:	46bd      	mov	sp, r7
 8004b84:	b002      	add	sp, #8
 8004b86:	bd80      	pop	{r7, pc}

08004b88 <UART_TxISR_16BIT>:
  *         interruptions have been enabled by HAL_UART_Transmit_IT().
  * @param huart UART handle.
  * @retval None
  */
static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
{
 8004b88:	b580      	push	{r7, lr}
 8004b8a:	b084      	sub	sp, #16
 8004b8c:	af00      	add	r7, sp, #0
 8004b8e:	6078      	str	r0, [r7, #4]
  uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 8004b90:	687b      	ldr	r3, [r7, #4]
 8004b92:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004b94:	2b21      	cmp	r3, #33	@ 0x21
 8004b96:	d12f      	bne.n	8004bf8 <UART_TxISR_16BIT+0x70>
  {
    if (huart->TxXferCount == 0U)
 8004b98:	687b      	ldr	r3, [r7, #4]
 8004b9a:	2252      	movs	r2, #82	@ 0x52
 8004b9c:	5a9b      	ldrh	r3, [r3, r2]
 8004b9e:	b29b      	uxth	r3, r3
 8004ba0:	2b00      	cmp	r3, #0
 8004ba2:	d110      	bne.n	8004bc6 <UART_TxISR_16BIT+0x3e>
    {
      /* Disable the UART Transmit Data Register Empty Interrupt */
      CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 8004ba4:	687b      	ldr	r3, [r7, #4]
 8004ba6:	681b      	ldr	r3, [r3, #0]
 8004ba8:	681a      	ldr	r2, [r3, #0]
 8004baa:	687b      	ldr	r3, [r7, #4]
 8004bac:	681b      	ldr	r3, [r3, #0]
 8004bae:	2180      	movs	r1, #128	@ 0x80
 8004bb0:	438a      	bics	r2, r1
 8004bb2:	601a      	str	r2, [r3, #0]

      /* Enable the UART Transmit Complete Interrupt */
      SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8004bb4:	687b      	ldr	r3, [r7, #4]
 8004bb6:	681b      	ldr	r3, [r3, #0]
 8004bb8:	681a      	ldr	r2, [r3, #0]
 8004bba:	687b      	ldr	r3, [r7, #4]
 8004bbc:	681b      	ldr	r3, [r3, #0]
 8004bbe:	2140      	movs	r1, #64	@ 0x40
 8004bc0:	430a      	orrs	r2, r1
 8004bc2:	601a      	str	r2, [r3, #0]
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
      huart->pTxBuffPtr += 2U;
      huart->TxXferCount--;
    }
  }
}
 8004bc4:	e018      	b.n	8004bf8 <UART_TxISR_16BIT+0x70>
      tmp = (uint16_t *) huart->pTxBuffPtr;
 8004bc6:	687b      	ldr	r3, [r7, #4]
 8004bc8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8004bca:	60fb      	str	r3, [r7, #12]
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 8004bcc:	68fb      	ldr	r3, [r7, #12]
 8004bce:	881a      	ldrh	r2, [r3, #0]
 8004bd0:	687b      	ldr	r3, [r7, #4]
 8004bd2:	681b      	ldr	r3, [r3, #0]
 8004bd4:	05d2      	lsls	r2, r2, #23
 8004bd6:	0dd2      	lsrs	r2, r2, #23
 8004bd8:	b292      	uxth	r2, r2
 8004bda:	851a      	strh	r2, [r3, #40]	@ 0x28
      huart->pTxBuffPtr += 2U;
 8004bdc:	687b      	ldr	r3, [r7, #4]
 8004bde:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8004be0:	1c9a      	adds	r2, r3, #2
 8004be2:	687b      	ldr	r3, [r7, #4]
 8004be4:	64da      	str	r2, [r3, #76]	@ 0x4c
      huart->TxXferCount--;
 8004be6:	687b      	ldr	r3, [r7, #4]
 8004be8:	2252      	movs	r2, #82	@ 0x52
 8004bea:	5a9b      	ldrh	r3, [r3, r2]
 8004bec:	b29b      	uxth	r3, r3
 8004bee:	3b01      	subs	r3, #1
 8004bf0:	b299      	uxth	r1, r3
 8004bf2:	687b      	ldr	r3, [r7, #4]
 8004bf4:	2252      	movs	r2, #82	@ 0x52
 8004bf6:	5299      	strh	r1, [r3, r2]
}
 8004bf8:	46c0      	nop			@ (mov r8, r8)
 8004bfa:	46bd      	mov	sp, r7
 8004bfc:	b004      	add	sp, #16
 8004bfe:	bd80      	pop	{r7, pc}

08004c00 <UART_EndTransmit_IT>:
  * @param  huart pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
 8004c00:	b580      	push	{r7, lr}
 8004c02:	b082      	sub	sp, #8
 8004c04:	af00      	add	r7, sp, #0
 8004c06:	6078      	str	r0, [r7, #4]
  /* Disable the UART Transmit Complete Interrupt */
  CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8004c08:	687b      	ldr	r3, [r7, #4]
 8004c0a:	681b      	ldr	r3, [r3, #0]
 8004c0c:	681a      	ldr	r2, [r3, #0]
 8004c0e:	687b      	ldr	r3, [r7, #4]
 8004c10:	681b      	ldr	r3, [r3, #0]
 8004c12:	2140      	movs	r1, #64	@ 0x40
 8004c14:	438a      	bics	r2, r1
 8004c16:	601a      	str	r2, [r3, #0]

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 8004c18:	687b      	ldr	r3, [r7, #4]
 8004c1a:	2220      	movs	r2, #32
 8004c1c:	675a      	str	r2, [r3, #116]	@ 0x74

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
 8004c1e:	687b      	ldr	r3, [r7, #4]
 8004c20:	2200      	movs	r2, #0
 8004c22:	665a      	str	r2, [r3, #100]	@ 0x64
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	0018      	movs	r0, r3
 8004c28:	f7fd fd9c 	bl	8002764 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8004c2c:	46c0      	nop			@ (mov r8, r8)
 8004c2e:	46bd      	mov	sp, r7
 8004c30:	b002      	add	sp, #8
 8004c32:	bd80      	pop	{r7, pc}

08004c34 <__cvt>:
 8004c34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004c36:	001f      	movs	r7, r3
 8004c38:	2300      	movs	r3, #0
 8004c3a:	0016      	movs	r6, r2
 8004c3c:	b08b      	sub	sp, #44	@ 0x2c
 8004c3e:	429f      	cmp	r7, r3
 8004c40:	da04      	bge.n	8004c4c <__cvt+0x18>
 8004c42:	2180      	movs	r1, #128	@ 0x80
 8004c44:	0609      	lsls	r1, r1, #24
 8004c46:	187b      	adds	r3, r7, r1
 8004c48:	001f      	movs	r7, r3
 8004c4a:	232d      	movs	r3, #45	@ 0x2d
 8004c4c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8004c4e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8004c50:	7013      	strb	r3, [r2, #0]
 8004c52:	2320      	movs	r3, #32
 8004c54:	2203      	movs	r2, #3
 8004c56:	439d      	bics	r5, r3
 8004c58:	2d46      	cmp	r5, #70	@ 0x46
 8004c5a:	d007      	beq.n	8004c6c <__cvt+0x38>
 8004c5c:	002b      	movs	r3, r5
 8004c5e:	3b45      	subs	r3, #69	@ 0x45
 8004c60:	4259      	negs	r1, r3
 8004c62:	414b      	adcs	r3, r1
 8004c64:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8004c66:	3a01      	subs	r2, #1
 8004c68:	18cb      	adds	r3, r1, r3
 8004c6a:	9310      	str	r3, [sp, #64]	@ 0x40
 8004c6c:	ab09      	add	r3, sp, #36	@ 0x24
 8004c6e:	9304      	str	r3, [sp, #16]
 8004c70:	ab08      	add	r3, sp, #32
 8004c72:	9303      	str	r3, [sp, #12]
 8004c74:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004c76:	9200      	str	r2, [sp, #0]
 8004c78:	9302      	str	r3, [sp, #8]
 8004c7a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8004c7c:	0032      	movs	r2, r6
 8004c7e:	9301      	str	r3, [sp, #4]
 8004c80:	003b      	movs	r3, r7
 8004c82:	f001 f971 	bl	8005f68 <_dtoa_r>
 8004c86:	0004      	movs	r4, r0
 8004c88:	2d47      	cmp	r5, #71	@ 0x47
 8004c8a:	d11b      	bne.n	8004cc4 <__cvt+0x90>
 8004c8c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8004c8e:	07db      	lsls	r3, r3, #31
 8004c90:	d511      	bpl.n	8004cb6 <__cvt+0x82>
 8004c92:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8004c94:	18c3      	adds	r3, r0, r3
 8004c96:	9307      	str	r3, [sp, #28]
 8004c98:	2200      	movs	r2, #0
 8004c9a:	2300      	movs	r3, #0
 8004c9c:	0030      	movs	r0, r6
 8004c9e:	0039      	movs	r1, r7
 8004ca0:	f7fb fbd4 	bl	800044c <__aeabi_dcmpeq>
 8004ca4:	2800      	cmp	r0, #0
 8004ca6:	d001      	beq.n	8004cac <__cvt+0x78>
 8004ca8:	9b07      	ldr	r3, [sp, #28]
 8004caa:	9309      	str	r3, [sp, #36]	@ 0x24
 8004cac:	2230      	movs	r2, #48	@ 0x30
 8004cae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004cb0:	9907      	ldr	r1, [sp, #28]
 8004cb2:	428b      	cmp	r3, r1
 8004cb4:	d320      	bcc.n	8004cf8 <__cvt+0xc4>
 8004cb6:	0020      	movs	r0, r4
 8004cb8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004cba:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8004cbc:	1b1b      	subs	r3, r3, r4
 8004cbe:	6013      	str	r3, [r2, #0]
 8004cc0:	b00b      	add	sp, #44	@ 0x2c
 8004cc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004cc4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8004cc6:	18c3      	adds	r3, r0, r3
 8004cc8:	9307      	str	r3, [sp, #28]
 8004cca:	2d46      	cmp	r5, #70	@ 0x46
 8004ccc:	d1e4      	bne.n	8004c98 <__cvt+0x64>
 8004cce:	7803      	ldrb	r3, [r0, #0]
 8004cd0:	2b30      	cmp	r3, #48	@ 0x30
 8004cd2:	d10c      	bne.n	8004cee <__cvt+0xba>
 8004cd4:	2200      	movs	r2, #0
 8004cd6:	2300      	movs	r3, #0
 8004cd8:	0030      	movs	r0, r6
 8004cda:	0039      	movs	r1, r7
 8004cdc:	f7fb fbb6 	bl	800044c <__aeabi_dcmpeq>
 8004ce0:	2800      	cmp	r0, #0
 8004ce2:	d104      	bne.n	8004cee <__cvt+0xba>
 8004ce4:	2301      	movs	r3, #1
 8004ce6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8004ce8:	1a9b      	subs	r3, r3, r2
 8004cea:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8004cec:	6013      	str	r3, [r2, #0]
 8004cee:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004cf0:	9a07      	ldr	r2, [sp, #28]
 8004cf2:	681b      	ldr	r3, [r3, #0]
 8004cf4:	18d3      	adds	r3, r2, r3
 8004cf6:	e7ce      	b.n	8004c96 <__cvt+0x62>
 8004cf8:	1c59      	adds	r1, r3, #1
 8004cfa:	9109      	str	r1, [sp, #36]	@ 0x24
 8004cfc:	701a      	strb	r2, [r3, #0]
 8004cfe:	e7d6      	b.n	8004cae <__cvt+0x7a>

08004d00 <__exponent>:
 8004d00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004d02:	232b      	movs	r3, #43	@ 0x2b
 8004d04:	b085      	sub	sp, #20
 8004d06:	0005      	movs	r5, r0
 8004d08:	1e0c      	subs	r4, r1, #0
 8004d0a:	7002      	strb	r2, [r0, #0]
 8004d0c:	da01      	bge.n	8004d12 <__exponent+0x12>
 8004d0e:	424c      	negs	r4, r1
 8004d10:	3302      	adds	r3, #2
 8004d12:	706b      	strb	r3, [r5, #1]
 8004d14:	2c09      	cmp	r4, #9
 8004d16:	dd2c      	ble.n	8004d72 <__exponent+0x72>
 8004d18:	ab02      	add	r3, sp, #8
 8004d1a:	1dde      	adds	r6, r3, #7
 8004d1c:	0020      	movs	r0, r4
 8004d1e:	210a      	movs	r1, #10
 8004d20:	f7fb fb7e 	bl	8000420 <__aeabi_idivmod>
 8004d24:	0037      	movs	r7, r6
 8004d26:	3130      	adds	r1, #48	@ 0x30
 8004d28:	3e01      	subs	r6, #1
 8004d2a:	0020      	movs	r0, r4
 8004d2c:	7031      	strb	r1, [r6, #0]
 8004d2e:	210a      	movs	r1, #10
 8004d30:	9401      	str	r4, [sp, #4]
 8004d32:	f7fb fa8f 	bl	8000254 <__divsi3>
 8004d36:	9b01      	ldr	r3, [sp, #4]
 8004d38:	0004      	movs	r4, r0
 8004d3a:	2b63      	cmp	r3, #99	@ 0x63
 8004d3c:	dcee      	bgt.n	8004d1c <__exponent+0x1c>
 8004d3e:	1eba      	subs	r2, r7, #2
 8004d40:	1ca8      	adds	r0, r5, #2
 8004d42:	0001      	movs	r1, r0
 8004d44:	0013      	movs	r3, r2
 8004d46:	3430      	adds	r4, #48	@ 0x30
 8004d48:	7014      	strb	r4, [r2, #0]
 8004d4a:	ac02      	add	r4, sp, #8
 8004d4c:	3407      	adds	r4, #7
 8004d4e:	429c      	cmp	r4, r3
 8004d50:	d80a      	bhi.n	8004d68 <__exponent+0x68>
 8004d52:	2300      	movs	r3, #0
 8004d54:	4294      	cmp	r4, r2
 8004d56:	d303      	bcc.n	8004d60 <__exponent+0x60>
 8004d58:	3309      	adds	r3, #9
 8004d5a:	aa02      	add	r2, sp, #8
 8004d5c:	189b      	adds	r3, r3, r2
 8004d5e:	1bdb      	subs	r3, r3, r7
 8004d60:	18c0      	adds	r0, r0, r3
 8004d62:	1b40      	subs	r0, r0, r5
 8004d64:	b005      	add	sp, #20
 8004d66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004d68:	781c      	ldrb	r4, [r3, #0]
 8004d6a:	3301      	adds	r3, #1
 8004d6c:	700c      	strb	r4, [r1, #0]
 8004d6e:	3101      	adds	r1, #1
 8004d70:	e7eb      	b.n	8004d4a <__exponent+0x4a>
 8004d72:	2330      	movs	r3, #48	@ 0x30
 8004d74:	18e4      	adds	r4, r4, r3
 8004d76:	70ab      	strb	r3, [r5, #2]
 8004d78:	1d28      	adds	r0, r5, #4
 8004d7a:	70ec      	strb	r4, [r5, #3]
 8004d7c:	e7f1      	b.n	8004d62 <__exponent+0x62>
	...

08004d80 <_printf_float>:
 8004d80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004d82:	b097      	sub	sp, #92	@ 0x5c
 8004d84:	000d      	movs	r5, r1
 8004d86:	920a      	str	r2, [sp, #40]	@ 0x28
 8004d88:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8004d8a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004d8c:	9009      	str	r0, [sp, #36]	@ 0x24
 8004d8e:	f000 ffd7 	bl	8005d40 <_localeconv_r>
 8004d92:	6803      	ldr	r3, [r0, #0]
 8004d94:	0018      	movs	r0, r3
 8004d96:	930d      	str	r3, [sp, #52]	@ 0x34
 8004d98:	f7fb f9b6 	bl	8000108 <strlen>
 8004d9c:	2300      	movs	r3, #0
 8004d9e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8004da0:	9314      	str	r3, [sp, #80]	@ 0x50
 8004da2:	7e2b      	ldrb	r3, [r5, #24]
 8004da4:	2207      	movs	r2, #7
 8004da6:	930c      	str	r3, [sp, #48]	@ 0x30
 8004da8:	682b      	ldr	r3, [r5, #0]
 8004daa:	930e      	str	r3, [sp, #56]	@ 0x38
 8004dac:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8004dae:	6823      	ldr	r3, [r4, #0]
 8004db0:	05c9      	lsls	r1, r1, #23
 8004db2:	d545      	bpl.n	8004e40 <_printf_float+0xc0>
 8004db4:	189b      	adds	r3, r3, r2
 8004db6:	4393      	bics	r3, r2
 8004db8:	001a      	movs	r2, r3
 8004dba:	3208      	adds	r2, #8
 8004dbc:	6022      	str	r2, [r4, #0]
 8004dbe:	2201      	movs	r2, #1
 8004dc0:	681e      	ldr	r6, [r3, #0]
 8004dc2:	685f      	ldr	r7, [r3, #4]
 8004dc4:	007b      	lsls	r3, r7, #1
 8004dc6:	085b      	lsrs	r3, r3, #1
 8004dc8:	9311      	str	r3, [sp, #68]	@ 0x44
 8004dca:	9610      	str	r6, [sp, #64]	@ 0x40
 8004dcc:	64ae      	str	r6, [r5, #72]	@ 0x48
 8004dce:	64ef      	str	r7, [r5, #76]	@ 0x4c
 8004dd0:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8004dd2:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8004dd4:	4ba7      	ldr	r3, [pc, #668]	@ (8005074 <_printf_float+0x2f4>)
 8004dd6:	4252      	negs	r2, r2
 8004dd8:	f7fd fac4 	bl	8002364 <__aeabi_dcmpun>
 8004ddc:	2800      	cmp	r0, #0
 8004dde:	d131      	bne.n	8004e44 <_printf_float+0xc4>
 8004de0:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8004de2:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8004de4:	2201      	movs	r2, #1
 8004de6:	4ba3      	ldr	r3, [pc, #652]	@ (8005074 <_printf_float+0x2f4>)
 8004de8:	4252      	negs	r2, r2
 8004dea:	f7fb fb3f 	bl	800046c <__aeabi_dcmple>
 8004dee:	2800      	cmp	r0, #0
 8004df0:	d128      	bne.n	8004e44 <_printf_float+0xc4>
 8004df2:	2200      	movs	r2, #0
 8004df4:	2300      	movs	r3, #0
 8004df6:	0030      	movs	r0, r6
 8004df8:	0039      	movs	r1, r7
 8004dfa:	f7fb fb2d 	bl	8000458 <__aeabi_dcmplt>
 8004dfe:	2800      	cmp	r0, #0
 8004e00:	d003      	beq.n	8004e0a <_printf_float+0x8a>
 8004e02:	002b      	movs	r3, r5
 8004e04:	222d      	movs	r2, #45	@ 0x2d
 8004e06:	3343      	adds	r3, #67	@ 0x43
 8004e08:	701a      	strb	r2, [r3, #0]
 8004e0a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004e0c:	4f9a      	ldr	r7, [pc, #616]	@ (8005078 <_printf_float+0x2f8>)
 8004e0e:	2b47      	cmp	r3, #71	@ 0x47
 8004e10:	d800      	bhi.n	8004e14 <_printf_float+0x94>
 8004e12:	4f9a      	ldr	r7, [pc, #616]	@ (800507c <_printf_float+0x2fc>)
 8004e14:	2303      	movs	r3, #3
 8004e16:	2400      	movs	r4, #0
 8004e18:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8004e1a:	612b      	str	r3, [r5, #16]
 8004e1c:	3301      	adds	r3, #1
 8004e1e:	439a      	bics	r2, r3
 8004e20:	602a      	str	r2, [r5, #0]
 8004e22:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004e24:	0029      	movs	r1, r5
 8004e26:	9300      	str	r3, [sp, #0]
 8004e28:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004e2a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004e2c:	aa15      	add	r2, sp, #84	@ 0x54
 8004e2e:	f000 f9e5 	bl	80051fc <_printf_common>
 8004e32:	3001      	adds	r0, #1
 8004e34:	d000      	beq.n	8004e38 <_printf_float+0xb8>
 8004e36:	e09e      	b.n	8004f76 <_printf_float+0x1f6>
 8004e38:	2001      	movs	r0, #1
 8004e3a:	4240      	negs	r0, r0
 8004e3c:	b017      	add	sp, #92	@ 0x5c
 8004e3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004e40:	3307      	adds	r3, #7
 8004e42:	e7b8      	b.n	8004db6 <_printf_float+0x36>
 8004e44:	0032      	movs	r2, r6
 8004e46:	003b      	movs	r3, r7
 8004e48:	0030      	movs	r0, r6
 8004e4a:	0039      	movs	r1, r7
 8004e4c:	f7fd fa8a 	bl	8002364 <__aeabi_dcmpun>
 8004e50:	2800      	cmp	r0, #0
 8004e52:	d00b      	beq.n	8004e6c <_printf_float+0xec>
 8004e54:	2f00      	cmp	r7, #0
 8004e56:	da03      	bge.n	8004e60 <_printf_float+0xe0>
 8004e58:	002b      	movs	r3, r5
 8004e5a:	222d      	movs	r2, #45	@ 0x2d
 8004e5c:	3343      	adds	r3, #67	@ 0x43
 8004e5e:	701a      	strb	r2, [r3, #0]
 8004e60:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004e62:	4f87      	ldr	r7, [pc, #540]	@ (8005080 <_printf_float+0x300>)
 8004e64:	2b47      	cmp	r3, #71	@ 0x47
 8004e66:	d8d5      	bhi.n	8004e14 <_printf_float+0x94>
 8004e68:	4f86      	ldr	r7, [pc, #536]	@ (8005084 <_printf_float+0x304>)
 8004e6a:	e7d3      	b.n	8004e14 <_printf_float+0x94>
 8004e6c:	2220      	movs	r2, #32
 8004e6e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8004e70:	686b      	ldr	r3, [r5, #4]
 8004e72:	4394      	bics	r4, r2
 8004e74:	1c5a      	adds	r2, r3, #1
 8004e76:	d146      	bne.n	8004f06 <_printf_float+0x186>
 8004e78:	3307      	adds	r3, #7
 8004e7a:	606b      	str	r3, [r5, #4]
 8004e7c:	2380      	movs	r3, #128	@ 0x80
 8004e7e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8004e80:	00db      	lsls	r3, r3, #3
 8004e82:	4313      	orrs	r3, r2
 8004e84:	2200      	movs	r2, #0
 8004e86:	602b      	str	r3, [r5, #0]
 8004e88:	9206      	str	r2, [sp, #24]
 8004e8a:	aa14      	add	r2, sp, #80	@ 0x50
 8004e8c:	9205      	str	r2, [sp, #20]
 8004e8e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8004e90:	a90a      	add	r1, sp, #40	@ 0x28
 8004e92:	9204      	str	r2, [sp, #16]
 8004e94:	aa13      	add	r2, sp, #76	@ 0x4c
 8004e96:	9203      	str	r2, [sp, #12]
 8004e98:	2223      	movs	r2, #35	@ 0x23
 8004e9a:	1852      	adds	r2, r2, r1
 8004e9c:	9202      	str	r2, [sp, #8]
 8004e9e:	9301      	str	r3, [sp, #4]
 8004ea0:	686b      	ldr	r3, [r5, #4]
 8004ea2:	0032      	movs	r2, r6
 8004ea4:	9300      	str	r3, [sp, #0]
 8004ea6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004ea8:	003b      	movs	r3, r7
 8004eaa:	f7ff fec3 	bl	8004c34 <__cvt>
 8004eae:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8004eb0:	0007      	movs	r7, r0
 8004eb2:	2c47      	cmp	r4, #71	@ 0x47
 8004eb4:	d12d      	bne.n	8004f12 <_printf_float+0x192>
 8004eb6:	1cd3      	adds	r3, r2, #3
 8004eb8:	db02      	blt.n	8004ec0 <_printf_float+0x140>
 8004eba:	686b      	ldr	r3, [r5, #4]
 8004ebc:	429a      	cmp	r2, r3
 8004ebe:	dd47      	ble.n	8004f50 <_printf_float+0x1d0>
 8004ec0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004ec2:	3b02      	subs	r3, #2
 8004ec4:	b2db      	uxtb	r3, r3
 8004ec6:	930c      	str	r3, [sp, #48]	@ 0x30
 8004ec8:	0028      	movs	r0, r5
 8004eca:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8004ecc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8004ece:	3901      	subs	r1, #1
 8004ed0:	3050      	adds	r0, #80	@ 0x50
 8004ed2:	9113      	str	r1, [sp, #76]	@ 0x4c
 8004ed4:	f7ff ff14 	bl	8004d00 <__exponent>
 8004ed8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8004eda:	0004      	movs	r4, r0
 8004edc:	1813      	adds	r3, r2, r0
 8004ede:	612b      	str	r3, [r5, #16]
 8004ee0:	2a01      	cmp	r2, #1
 8004ee2:	dc02      	bgt.n	8004eea <_printf_float+0x16a>
 8004ee4:	682a      	ldr	r2, [r5, #0]
 8004ee6:	07d2      	lsls	r2, r2, #31
 8004ee8:	d501      	bpl.n	8004eee <_printf_float+0x16e>
 8004eea:	3301      	adds	r3, #1
 8004eec:	612b      	str	r3, [r5, #16]
 8004eee:	2323      	movs	r3, #35	@ 0x23
 8004ef0:	aa0a      	add	r2, sp, #40	@ 0x28
 8004ef2:	189b      	adds	r3, r3, r2
 8004ef4:	781b      	ldrb	r3, [r3, #0]
 8004ef6:	2b00      	cmp	r3, #0
 8004ef8:	d100      	bne.n	8004efc <_printf_float+0x17c>
 8004efa:	e792      	b.n	8004e22 <_printf_float+0xa2>
 8004efc:	002b      	movs	r3, r5
 8004efe:	222d      	movs	r2, #45	@ 0x2d
 8004f00:	3343      	adds	r3, #67	@ 0x43
 8004f02:	701a      	strb	r2, [r3, #0]
 8004f04:	e78d      	b.n	8004e22 <_printf_float+0xa2>
 8004f06:	2c47      	cmp	r4, #71	@ 0x47
 8004f08:	d1b8      	bne.n	8004e7c <_printf_float+0xfc>
 8004f0a:	2b00      	cmp	r3, #0
 8004f0c:	d1b6      	bne.n	8004e7c <_printf_float+0xfc>
 8004f0e:	3301      	adds	r3, #1
 8004f10:	e7b3      	b.n	8004e7a <_printf_float+0xfa>
 8004f12:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004f14:	2b65      	cmp	r3, #101	@ 0x65
 8004f16:	d9d7      	bls.n	8004ec8 <_printf_float+0x148>
 8004f18:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004f1a:	2b66      	cmp	r3, #102	@ 0x66
 8004f1c:	d11a      	bne.n	8004f54 <_printf_float+0x1d4>
 8004f1e:	686b      	ldr	r3, [r5, #4]
 8004f20:	2a00      	cmp	r2, #0
 8004f22:	dd09      	ble.n	8004f38 <_printf_float+0x1b8>
 8004f24:	612a      	str	r2, [r5, #16]
 8004f26:	2b00      	cmp	r3, #0
 8004f28:	d102      	bne.n	8004f30 <_printf_float+0x1b0>
 8004f2a:	6829      	ldr	r1, [r5, #0]
 8004f2c:	07c9      	lsls	r1, r1, #31
 8004f2e:	d50b      	bpl.n	8004f48 <_printf_float+0x1c8>
 8004f30:	3301      	adds	r3, #1
 8004f32:	189b      	adds	r3, r3, r2
 8004f34:	612b      	str	r3, [r5, #16]
 8004f36:	e007      	b.n	8004f48 <_printf_float+0x1c8>
 8004f38:	2b00      	cmp	r3, #0
 8004f3a:	d103      	bne.n	8004f44 <_printf_float+0x1c4>
 8004f3c:	2201      	movs	r2, #1
 8004f3e:	6829      	ldr	r1, [r5, #0]
 8004f40:	4211      	tst	r1, r2
 8004f42:	d000      	beq.n	8004f46 <_printf_float+0x1c6>
 8004f44:	1c9a      	adds	r2, r3, #2
 8004f46:	612a      	str	r2, [r5, #16]
 8004f48:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004f4a:	2400      	movs	r4, #0
 8004f4c:	65ab      	str	r3, [r5, #88]	@ 0x58
 8004f4e:	e7ce      	b.n	8004eee <_printf_float+0x16e>
 8004f50:	2367      	movs	r3, #103	@ 0x67
 8004f52:	930c      	str	r3, [sp, #48]	@ 0x30
 8004f54:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8004f56:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8004f58:	4299      	cmp	r1, r3
 8004f5a:	db06      	blt.n	8004f6a <_printf_float+0x1ea>
 8004f5c:	682b      	ldr	r3, [r5, #0]
 8004f5e:	6129      	str	r1, [r5, #16]
 8004f60:	07db      	lsls	r3, r3, #31
 8004f62:	d5f1      	bpl.n	8004f48 <_printf_float+0x1c8>
 8004f64:	3101      	adds	r1, #1
 8004f66:	6129      	str	r1, [r5, #16]
 8004f68:	e7ee      	b.n	8004f48 <_printf_float+0x1c8>
 8004f6a:	2201      	movs	r2, #1
 8004f6c:	2900      	cmp	r1, #0
 8004f6e:	dce0      	bgt.n	8004f32 <_printf_float+0x1b2>
 8004f70:	1892      	adds	r2, r2, r2
 8004f72:	1a52      	subs	r2, r2, r1
 8004f74:	e7dd      	b.n	8004f32 <_printf_float+0x1b2>
 8004f76:	682a      	ldr	r2, [r5, #0]
 8004f78:	0553      	lsls	r3, r2, #21
 8004f7a:	d408      	bmi.n	8004f8e <_printf_float+0x20e>
 8004f7c:	692b      	ldr	r3, [r5, #16]
 8004f7e:	003a      	movs	r2, r7
 8004f80:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004f82:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004f84:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8004f86:	47a0      	blx	r4
 8004f88:	3001      	adds	r0, #1
 8004f8a:	d129      	bne.n	8004fe0 <_printf_float+0x260>
 8004f8c:	e754      	b.n	8004e38 <_printf_float+0xb8>
 8004f8e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004f90:	2b65      	cmp	r3, #101	@ 0x65
 8004f92:	d800      	bhi.n	8004f96 <_printf_float+0x216>
 8004f94:	e0db      	b.n	800514e <_printf_float+0x3ce>
 8004f96:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
 8004f98:	6ce9      	ldr	r1, [r5, #76]	@ 0x4c
 8004f9a:	2200      	movs	r2, #0
 8004f9c:	2300      	movs	r3, #0
 8004f9e:	f7fb fa55 	bl	800044c <__aeabi_dcmpeq>
 8004fa2:	2800      	cmp	r0, #0
 8004fa4:	d033      	beq.n	800500e <_printf_float+0x28e>
 8004fa6:	2301      	movs	r3, #1
 8004fa8:	4a37      	ldr	r2, [pc, #220]	@ (8005088 <_printf_float+0x308>)
 8004faa:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004fac:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004fae:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8004fb0:	47a0      	blx	r4
 8004fb2:	3001      	adds	r0, #1
 8004fb4:	d100      	bne.n	8004fb8 <_printf_float+0x238>
 8004fb6:	e73f      	b.n	8004e38 <_printf_float+0xb8>
 8004fb8:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8004fba:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004fbc:	42b3      	cmp	r3, r6
 8004fbe:	db02      	blt.n	8004fc6 <_printf_float+0x246>
 8004fc0:	682b      	ldr	r3, [r5, #0]
 8004fc2:	07db      	lsls	r3, r3, #31
 8004fc4:	d50c      	bpl.n	8004fe0 <_printf_float+0x260>
 8004fc6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8004fc8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004fca:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8004fcc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004fce:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004fd0:	47a0      	blx	r4
 8004fd2:	2400      	movs	r4, #0
 8004fd4:	3001      	adds	r0, #1
 8004fd6:	d100      	bne.n	8004fda <_printf_float+0x25a>
 8004fd8:	e72e      	b.n	8004e38 <_printf_float+0xb8>
 8004fda:	1e73      	subs	r3, r6, #1
 8004fdc:	42a3      	cmp	r3, r4
 8004fde:	dc0a      	bgt.n	8004ff6 <_printf_float+0x276>
 8004fe0:	682b      	ldr	r3, [r5, #0]
 8004fe2:	079b      	lsls	r3, r3, #30
 8004fe4:	d500      	bpl.n	8004fe8 <_printf_float+0x268>
 8004fe6:	e106      	b.n	80051f6 <_printf_float+0x476>
 8004fe8:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8004fea:	68e8      	ldr	r0, [r5, #12]
 8004fec:	4298      	cmp	r0, r3
 8004fee:	db00      	blt.n	8004ff2 <_printf_float+0x272>
 8004ff0:	e724      	b.n	8004e3c <_printf_float+0xbc>
 8004ff2:	0018      	movs	r0, r3
 8004ff4:	e722      	b.n	8004e3c <_printf_float+0xbc>
 8004ff6:	002a      	movs	r2, r5
 8004ff8:	2301      	movs	r3, #1
 8004ffa:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004ffc:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004ffe:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8005000:	321a      	adds	r2, #26
 8005002:	47b8      	blx	r7
 8005004:	3001      	adds	r0, #1
 8005006:	d100      	bne.n	800500a <_printf_float+0x28a>
 8005008:	e716      	b.n	8004e38 <_printf_float+0xb8>
 800500a:	3401      	adds	r4, #1
 800500c:	e7e5      	b.n	8004fda <_printf_float+0x25a>
 800500e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005010:	2b00      	cmp	r3, #0
 8005012:	dc3b      	bgt.n	800508c <_printf_float+0x30c>
 8005014:	2301      	movs	r3, #1
 8005016:	4a1c      	ldr	r2, [pc, #112]	@ (8005088 <_printf_float+0x308>)
 8005018:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800501a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800501c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 800501e:	47a0      	blx	r4
 8005020:	3001      	adds	r0, #1
 8005022:	d100      	bne.n	8005026 <_printf_float+0x2a6>
 8005024:	e708      	b.n	8004e38 <_printf_float+0xb8>
 8005026:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8005028:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800502a:	4333      	orrs	r3, r6
 800502c:	d102      	bne.n	8005034 <_printf_float+0x2b4>
 800502e:	682b      	ldr	r3, [r5, #0]
 8005030:	07db      	lsls	r3, r3, #31
 8005032:	d5d5      	bpl.n	8004fe0 <_printf_float+0x260>
 8005034:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005036:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8005038:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800503a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800503c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 800503e:	47a0      	blx	r4
 8005040:	2300      	movs	r3, #0
 8005042:	3001      	adds	r0, #1
 8005044:	d100      	bne.n	8005048 <_printf_float+0x2c8>
 8005046:	e6f7      	b.n	8004e38 <_printf_float+0xb8>
 8005048:	930c      	str	r3, [sp, #48]	@ 0x30
 800504a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800504c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800504e:	425b      	negs	r3, r3
 8005050:	4293      	cmp	r3, r2
 8005052:	dc01      	bgt.n	8005058 <_printf_float+0x2d8>
 8005054:	0033      	movs	r3, r6
 8005056:	e792      	b.n	8004f7e <_printf_float+0x1fe>
 8005058:	002a      	movs	r2, r5
 800505a:	2301      	movs	r3, #1
 800505c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800505e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005060:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8005062:	321a      	adds	r2, #26
 8005064:	47a0      	blx	r4
 8005066:	3001      	adds	r0, #1
 8005068:	d100      	bne.n	800506c <_printf_float+0x2ec>
 800506a:	e6e5      	b.n	8004e38 <_printf_float+0xb8>
 800506c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800506e:	3301      	adds	r3, #1
 8005070:	e7ea      	b.n	8005048 <_printf_float+0x2c8>
 8005072:	46c0      	nop			@ (mov r8, r8)
 8005074:	7fefffff 	.word	0x7fefffff
 8005078:	0800a2d8 	.word	0x0800a2d8
 800507c:	0800a2d4 	.word	0x0800a2d4
 8005080:	0800a2e0 	.word	0x0800a2e0
 8005084:	0800a2dc 	.word	0x0800a2dc
 8005088:	0800a41a 	.word	0x0800a41a
 800508c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800508e:	6dae      	ldr	r6, [r5, #88]	@ 0x58
 8005090:	930c      	str	r3, [sp, #48]	@ 0x30
 8005092:	429e      	cmp	r6, r3
 8005094:	dd00      	ble.n	8005098 <_printf_float+0x318>
 8005096:	001e      	movs	r6, r3
 8005098:	2e00      	cmp	r6, #0
 800509a:	dc31      	bgt.n	8005100 <_printf_float+0x380>
 800509c:	43f3      	mvns	r3, r6
 800509e:	2400      	movs	r4, #0
 80050a0:	17db      	asrs	r3, r3, #31
 80050a2:	4033      	ands	r3, r6
 80050a4:	930e      	str	r3, [sp, #56]	@ 0x38
 80050a6:	6dae      	ldr	r6, [r5, #88]	@ 0x58
 80050a8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80050aa:	1af3      	subs	r3, r6, r3
 80050ac:	42a3      	cmp	r3, r4
 80050ae:	dc30      	bgt.n	8005112 <_printf_float+0x392>
 80050b0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80050b2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80050b4:	429a      	cmp	r2, r3
 80050b6:	dc38      	bgt.n	800512a <_printf_float+0x3aa>
 80050b8:	682b      	ldr	r3, [r5, #0]
 80050ba:	07db      	lsls	r3, r3, #31
 80050bc:	d435      	bmi.n	800512a <_printf_float+0x3aa>
 80050be:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80050c0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80050c2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80050c4:	1b9b      	subs	r3, r3, r6
 80050c6:	1b14      	subs	r4, r2, r4
 80050c8:	429c      	cmp	r4, r3
 80050ca:	dd00      	ble.n	80050ce <_printf_float+0x34e>
 80050cc:	001c      	movs	r4, r3
 80050ce:	2c00      	cmp	r4, #0
 80050d0:	dc34      	bgt.n	800513c <_printf_float+0x3bc>
 80050d2:	43e3      	mvns	r3, r4
 80050d4:	2600      	movs	r6, #0
 80050d6:	17db      	asrs	r3, r3, #31
 80050d8:	401c      	ands	r4, r3
 80050da:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80050dc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80050de:	1ad3      	subs	r3, r2, r3
 80050e0:	1b1b      	subs	r3, r3, r4
 80050e2:	42b3      	cmp	r3, r6
 80050e4:	dc00      	bgt.n	80050e8 <_printf_float+0x368>
 80050e6:	e77b      	b.n	8004fe0 <_printf_float+0x260>
 80050e8:	002a      	movs	r2, r5
 80050ea:	2301      	movs	r3, #1
 80050ec:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80050ee:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80050f0:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80050f2:	321a      	adds	r2, #26
 80050f4:	47b8      	blx	r7
 80050f6:	3001      	adds	r0, #1
 80050f8:	d100      	bne.n	80050fc <_printf_float+0x37c>
 80050fa:	e69d      	b.n	8004e38 <_printf_float+0xb8>
 80050fc:	3601      	adds	r6, #1
 80050fe:	e7ec      	b.n	80050da <_printf_float+0x35a>
 8005100:	0033      	movs	r3, r6
 8005102:	003a      	movs	r2, r7
 8005104:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005106:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005108:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 800510a:	47a0      	blx	r4
 800510c:	3001      	adds	r0, #1
 800510e:	d1c5      	bne.n	800509c <_printf_float+0x31c>
 8005110:	e692      	b.n	8004e38 <_printf_float+0xb8>
 8005112:	002a      	movs	r2, r5
 8005114:	2301      	movs	r3, #1
 8005116:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005118:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800511a:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 800511c:	321a      	adds	r2, #26
 800511e:	47b0      	blx	r6
 8005120:	3001      	adds	r0, #1
 8005122:	d100      	bne.n	8005126 <_printf_float+0x3a6>
 8005124:	e688      	b.n	8004e38 <_printf_float+0xb8>
 8005126:	3401      	adds	r4, #1
 8005128:	e7bd      	b.n	80050a6 <_printf_float+0x326>
 800512a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800512c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800512e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005130:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005132:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8005134:	47a0      	blx	r4
 8005136:	3001      	adds	r0, #1
 8005138:	d1c1      	bne.n	80050be <_printf_float+0x33e>
 800513a:	e67d      	b.n	8004e38 <_printf_float+0xb8>
 800513c:	19ba      	adds	r2, r7, r6
 800513e:	0023      	movs	r3, r4
 8005140:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005142:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005144:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8005146:	47b0      	blx	r6
 8005148:	3001      	adds	r0, #1
 800514a:	d1c2      	bne.n	80050d2 <_printf_float+0x352>
 800514c:	e674      	b.n	8004e38 <_printf_float+0xb8>
 800514e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8005150:	930c      	str	r3, [sp, #48]	@ 0x30
 8005152:	2b01      	cmp	r3, #1
 8005154:	dc02      	bgt.n	800515c <_printf_float+0x3dc>
 8005156:	2301      	movs	r3, #1
 8005158:	421a      	tst	r2, r3
 800515a:	d039      	beq.n	80051d0 <_printf_float+0x450>
 800515c:	2301      	movs	r3, #1
 800515e:	003a      	movs	r2, r7
 8005160:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005162:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005164:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8005166:	47b0      	blx	r6
 8005168:	3001      	adds	r0, #1
 800516a:	d100      	bne.n	800516e <_printf_float+0x3ee>
 800516c:	e664      	b.n	8004e38 <_printf_float+0xb8>
 800516e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005170:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8005172:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005174:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005176:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8005178:	47b0      	blx	r6
 800517a:	3001      	adds	r0, #1
 800517c:	d100      	bne.n	8005180 <_printf_float+0x400>
 800517e:	e65b      	b.n	8004e38 <_printf_float+0xb8>
 8005180:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
 8005182:	6ce9      	ldr	r1, [r5, #76]	@ 0x4c
 8005184:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005186:	2200      	movs	r2, #0
 8005188:	3b01      	subs	r3, #1
 800518a:	930c      	str	r3, [sp, #48]	@ 0x30
 800518c:	2300      	movs	r3, #0
 800518e:	f7fb f95d 	bl	800044c <__aeabi_dcmpeq>
 8005192:	2800      	cmp	r0, #0
 8005194:	d11a      	bne.n	80051cc <_printf_float+0x44c>
 8005196:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005198:	1c7a      	adds	r2, r7, #1
 800519a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800519c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800519e:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 80051a0:	47b0      	blx	r6
 80051a2:	3001      	adds	r0, #1
 80051a4:	d10e      	bne.n	80051c4 <_printf_float+0x444>
 80051a6:	e647      	b.n	8004e38 <_printf_float+0xb8>
 80051a8:	002a      	movs	r2, r5
 80051aa:	2301      	movs	r3, #1
 80051ac:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80051ae:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80051b0:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80051b2:	321a      	adds	r2, #26
 80051b4:	47b8      	blx	r7
 80051b6:	3001      	adds	r0, #1
 80051b8:	d100      	bne.n	80051bc <_printf_float+0x43c>
 80051ba:	e63d      	b.n	8004e38 <_printf_float+0xb8>
 80051bc:	3601      	adds	r6, #1
 80051be:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80051c0:	429e      	cmp	r6, r3
 80051c2:	dbf1      	blt.n	80051a8 <_printf_float+0x428>
 80051c4:	002a      	movs	r2, r5
 80051c6:	0023      	movs	r3, r4
 80051c8:	3250      	adds	r2, #80	@ 0x50
 80051ca:	e6d9      	b.n	8004f80 <_printf_float+0x200>
 80051cc:	2600      	movs	r6, #0
 80051ce:	e7f6      	b.n	80051be <_printf_float+0x43e>
 80051d0:	003a      	movs	r2, r7
 80051d2:	e7e2      	b.n	800519a <_printf_float+0x41a>
 80051d4:	002a      	movs	r2, r5
 80051d6:	2301      	movs	r3, #1
 80051d8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80051da:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80051dc:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 80051de:	3219      	adds	r2, #25
 80051e0:	47b0      	blx	r6
 80051e2:	3001      	adds	r0, #1
 80051e4:	d100      	bne.n	80051e8 <_printf_float+0x468>
 80051e6:	e627      	b.n	8004e38 <_printf_float+0xb8>
 80051e8:	3401      	adds	r4, #1
 80051ea:	68eb      	ldr	r3, [r5, #12]
 80051ec:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80051ee:	1a9b      	subs	r3, r3, r2
 80051f0:	42a3      	cmp	r3, r4
 80051f2:	dcef      	bgt.n	80051d4 <_printf_float+0x454>
 80051f4:	e6f8      	b.n	8004fe8 <_printf_float+0x268>
 80051f6:	2400      	movs	r4, #0
 80051f8:	e7f7      	b.n	80051ea <_printf_float+0x46a>
 80051fa:	46c0      	nop			@ (mov r8, r8)

080051fc <_printf_common>:
 80051fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80051fe:	0016      	movs	r6, r2
 8005200:	9301      	str	r3, [sp, #4]
 8005202:	688a      	ldr	r2, [r1, #8]
 8005204:	690b      	ldr	r3, [r1, #16]
 8005206:	000c      	movs	r4, r1
 8005208:	9000      	str	r0, [sp, #0]
 800520a:	4293      	cmp	r3, r2
 800520c:	da00      	bge.n	8005210 <_printf_common+0x14>
 800520e:	0013      	movs	r3, r2
 8005210:	0022      	movs	r2, r4
 8005212:	6033      	str	r3, [r6, #0]
 8005214:	3243      	adds	r2, #67	@ 0x43
 8005216:	7812      	ldrb	r2, [r2, #0]
 8005218:	2a00      	cmp	r2, #0
 800521a:	d001      	beq.n	8005220 <_printf_common+0x24>
 800521c:	3301      	adds	r3, #1
 800521e:	6033      	str	r3, [r6, #0]
 8005220:	6823      	ldr	r3, [r4, #0]
 8005222:	069b      	lsls	r3, r3, #26
 8005224:	d502      	bpl.n	800522c <_printf_common+0x30>
 8005226:	6833      	ldr	r3, [r6, #0]
 8005228:	3302      	adds	r3, #2
 800522a:	6033      	str	r3, [r6, #0]
 800522c:	6822      	ldr	r2, [r4, #0]
 800522e:	2306      	movs	r3, #6
 8005230:	0015      	movs	r5, r2
 8005232:	401d      	ands	r5, r3
 8005234:	421a      	tst	r2, r3
 8005236:	d027      	beq.n	8005288 <_printf_common+0x8c>
 8005238:	0023      	movs	r3, r4
 800523a:	3343      	adds	r3, #67	@ 0x43
 800523c:	781b      	ldrb	r3, [r3, #0]
 800523e:	1e5a      	subs	r2, r3, #1
 8005240:	4193      	sbcs	r3, r2
 8005242:	6822      	ldr	r2, [r4, #0]
 8005244:	0692      	lsls	r2, r2, #26
 8005246:	d430      	bmi.n	80052aa <_printf_common+0xae>
 8005248:	0022      	movs	r2, r4
 800524a:	9901      	ldr	r1, [sp, #4]
 800524c:	9800      	ldr	r0, [sp, #0]
 800524e:	9d08      	ldr	r5, [sp, #32]
 8005250:	3243      	adds	r2, #67	@ 0x43
 8005252:	47a8      	blx	r5
 8005254:	3001      	adds	r0, #1
 8005256:	d025      	beq.n	80052a4 <_printf_common+0xa8>
 8005258:	2206      	movs	r2, #6
 800525a:	6823      	ldr	r3, [r4, #0]
 800525c:	2500      	movs	r5, #0
 800525e:	4013      	ands	r3, r2
 8005260:	2b04      	cmp	r3, #4
 8005262:	d105      	bne.n	8005270 <_printf_common+0x74>
 8005264:	6833      	ldr	r3, [r6, #0]
 8005266:	68e5      	ldr	r5, [r4, #12]
 8005268:	1aed      	subs	r5, r5, r3
 800526a:	43eb      	mvns	r3, r5
 800526c:	17db      	asrs	r3, r3, #31
 800526e:	401d      	ands	r5, r3
 8005270:	68a3      	ldr	r3, [r4, #8]
 8005272:	6922      	ldr	r2, [r4, #16]
 8005274:	4293      	cmp	r3, r2
 8005276:	dd01      	ble.n	800527c <_printf_common+0x80>
 8005278:	1a9b      	subs	r3, r3, r2
 800527a:	18ed      	adds	r5, r5, r3
 800527c:	2600      	movs	r6, #0
 800527e:	42b5      	cmp	r5, r6
 8005280:	d120      	bne.n	80052c4 <_printf_common+0xc8>
 8005282:	2000      	movs	r0, #0
 8005284:	e010      	b.n	80052a8 <_printf_common+0xac>
 8005286:	3501      	adds	r5, #1
 8005288:	68e3      	ldr	r3, [r4, #12]
 800528a:	6832      	ldr	r2, [r6, #0]
 800528c:	1a9b      	subs	r3, r3, r2
 800528e:	42ab      	cmp	r3, r5
 8005290:	ddd2      	ble.n	8005238 <_printf_common+0x3c>
 8005292:	0022      	movs	r2, r4
 8005294:	2301      	movs	r3, #1
 8005296:	9901      	ldr	r1, [sp, #4]
 8005298:	9800      	ldr	r0, [sp, #0]
 800529a:	9f08      	ldr	r7, [sp, #32]
 800529c:	3219      	adds	r2, #25
 800529e:	47b8      	blx	r7
 80052a0:	3001      	adds	r0, #1
 80052a2:	d1f0      	bne.n	8005286 <_printf_common+0x8a>
 80052a4:	2001      	movs	r0, #1
 80052a6:	4240      	negs	r0, r0
 80052a8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80052aa:	2030      	movs	r0, #48	@ 0x30
 80052ac:	18e1      	adds	r1, r4, r3
 80052ae:	3143      	adds	r1, #67	@ 0x43
 80052b0:	7008      	strb	r0, [r1, #0]
 80052b2:	0021      	movs	r1, r4
 80052b4:	1c5a      	adds	r2, r3, #1
 80052b6:	3145      	adds	r1, #69	@ 0x45
 80052b8:	7809      	ldrb	r1, [r1, #0]
 80052ba:	18a2      	adds	r2, r4, r2
 80052bc:	3243      	adds	r2, #67	@ 0x43
 80052be:	3302      	adds	r3, #2
 80052c0:	7011      	strb	r1, [r2, #0]
 80052c2:	e7c1      	b.n	8005248 <_printf_common+0x4c>
 80052c4:	0022      	movs	r2, r4
 80052c6:	2301      	movs	r3, #1
 80052c8:	9901      	ldr	r1, [sp, #4]
 80052ca:	9800      	ldr	r0, [sp, #0]
 80052cc:	9f08      	ldr	r7, [sp, #32]
 80052ce:	321a      	adds	r2, #26
 80052d0:	47b8      	blx	r7
 80052d2:	3001      	adds	r0, #1
 80052d4:	d0e6      	beq.n	80052a4 <_printf_common+0xa8>
 80052d6:	3601      	adds	r6, #1
 80052d8:	e7d1      	b.n	800527e <_printf_common+0x82>
	...

080052dc <_printf_i>:
 80052dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80052de:	b08b      	sub	sp, #44	@ 0x2c
 80052e0:	9206      	str	r2, [sp, #24]
 80052e2:	000a      	movs	r2, r1
 80052e4:	3243      	adds	r2, #67	@ 0x43
 80052e6:	9307      	str	r3, [sp, #28]
 80052e8:	9005      	str	r0, [sp, #20]
 80052ea:	9203      	str	r2, [sp, #12]
 80052ec:	7e0a      	ldrb	r2, [r1, #24]
 80052ee:	000c      	movs	r4, r1
 80052f0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80052f2:	2a78      	cmp	r2, #120	@ 0x78
 80052f4:	d809      	bhi.n	800530a <_printf_i+0x2e>
 80052f6:	2a62      	cmp	r2, #98	@ 0x62
 80052f8:	d80b      	bhi.n	8005312 <_printf_i+0x36>
 80052fa:	2a00      	cmp	r2, #0
 80052fc:	d100      	bne.n	8005300 <_printf_i+0x24>
 80052fe:	e0ba      	b.n	8005476 <_printf_i+0x19a>
 8005300:	497a      	ldr	r1, [pc, #488]	@ (80054ec <_printf_i+0x210>)
 8005302:	9104      	str	r1, [sp, #16]
 8005304:	2a58      	cmp	r2, #88	@ 0x58
 8005306:	d100      	bne.n	800530a <_printf_i+0x2e>
 8005308:	e08e      	b.n	8005428 <_printf_i+0x14c>
 800530a:	0025      	movs	r5, r4
 800530c:	3542      	adds	r5, #66	@ 0x42
 800530e:	702a      	strb	r2, [r5, #0]
 8005310:	e022      	b.n	8005358 <_printf_i+0x7c>
 8005312:	0010      	movs	r0, r2
 8005314:	3863      	subs	r0, #99	@ 0x63
 8005316:	2815      	cmp	r0, #21
 8005318:	d8f7      	bhi.n	800530a <_printf_i+0x2e>
 800531a:	f7fa ff07 	bl	800012c <__gnu_thumb1_case_shi>
 800531e:	0016      	.short	0x0016
 8005320:	fff6001f 	.word	0xfff6001f
 8005324:	fff6fff6 	.word	0xfff6fff6
 8005328:	001ffff6 	.word	0x001ffff6
 800532c:	fff6fff6 	.word	0xfff6fff6
 8005330:	fff6fff6 	.word	0xfff6fff6
 8005334:	0036009f 	.word	0x0036009f
 8005338:	fff6007e 	.word	0xfff6007e
 800533c:	00b0fff6 	.word	0x00b0fff6
 8005340:	0036fff6 	.word	0x0036fff6
 8005344:	fff6fff6 	.word	0xfff6fff6
 8005348:	0082      	.short	0x0082
 800534a:	0025      	movs	r5, r4
 800534c:	681a      	ldr	r2, [r3, #0]
 800534e:	3542      	adds	r5, #66	@ 0x42
 8005350:	1d11      	adds	r1, r2, #4
 8005352:	6019      	str	r1, [r3, #0]
 8005354:	6813      	ldr	r3, [r2, #0]
 8005356:	702b      	strb	r3, [r5, #0]
 8005358:	2301      	movs	r3, #1
 800535a:	e09e      	b.n	800549a <_printf_i+0x1be>
 800535c:	6818      	ldr	r0, [r3, #0]
 800535e:	6809      	ldr	r1, [r1, #0]
 8005360:	1d02      	adds	r2, r0, #4
 8005362:	060d      	lsls	r5, r1, #24
 8005364:	d50b      	bpl.n	800537e <_printf_i+0xa2>
 8005366:	6806      	ldr	r6, [r0, #0]
 8005368:	601a      	str	r2, [r3, #0]
 800536a:	2e00      	cmp	r6, #0
 800536c:	da03      	bge.n	8005376 <_printf_i+0x9a>
 800536e:	232d      	movs	r3, #45	@ 0x2d
 8005370:	9a03      	ldr	r2, [sp, #12]
 8005372:	4276      	negs	r6, r6
 8005374:	7013      	strb	r3, [r2, #0]
 8005376:	4b5d      	ldr	r3, [pc, #372]	@ (80054ec <_printf_i+0x210>)
 8005378:	270a      	movs	r7, #10
 800537a:	9304      	str	r3, [sp, #16]
 800537c:	e018      	b.n	80053b0 <_printf_i+0xd4>
 800537e:	6806      	ldr	r6, [r0, #0]
 8005380:	601a      	str	r2, [r3, #0]
 8005382:	0649      	lsls	r1, r1, #25
 8005384:	d5f1      	bpl.n	800536a <_printf_i+0x8e>
 8005386:	b236      	sxth	r6, r6
 8005388:	e7ef      	b.n	800536a <_printf_i+0x8e>
 800538a:	6808      	ldr	r0, [r1, #0]
 800538c:	6819      	ldr	r1, [r3, #0]
 800538e:	c940      	ldmia	r1!, {r6}
 8005390:	0605      	lsls	r5, r0, #24
 8005392:	d402      	bmi.n	800539a <_printf_i+0xbe>
 8005394:	0640      	lsls	r0, r0, #25
 8005396:	d500      	bpl.n	800539a <_printf_i+0xbe>
 8005398:	b2b6      	uxth	r6, r6
 800539a:	6019      	str	r1, [r3, #0]
 800539c:	4b53      	ldr	r3, [pc, #332]	@ (80054ec <_printf_i+0x210>)
 800539e:	270a      	movs	r7, #10
 80053a0:	9304      	str	r3, [sp, #16]
 80053a2:	2a6f      	cmp	r2, #111	@ 0x6f
 80053a4:	d100      	bne.n	80053a8 <_printf_i+0xcc>
 80053a6:	3f02      	subs	r7, #2
 80053a8:	0023      	movs	r3, r4
 80053aa:	2200      	movs	r2, #0
 80053ac:	3343      	adds	r3, #67	@ 0x43
 80053ae:	701a      	strb	r2, [r3, #0]
 80053b0:	6863      	ldr	r3, [r4, #4]
 80053b2:	60a3      	str	r3, [r4, #8]
 80053b4:	2b00      	cmp	r3, #0
 80053b6:	db06      	blt.n	80053c6 <_printf_i+0xea>
 80053b8:	2104      	movs	r1, #4
 80053ba:	6822      	ldr	r2, [r4, #0]
 80053bc:	9d03      	ldr	r5, [sp, #12]
 80053be:	438a      	bics	r2, r1
 80053c0:	6022      	str	r2, [r4, #0]
 80053c2:	4333      	orrs	r3, r6
 80053c4:	d00c      	beq.n	80053e0 <_printf_i+0x104>
 80053c6:	9d03      	ldr	r5, [sp, #12]
 80053c8:	0030      	movs	r0, r6
 80053ca:	0039      	movs	r1, r7
 80053cc:	f7fa ff3e 	bl	800024c <__aeabi_uidivmod>
 80053d0:	9b04      	ldr	r3, [sp, #16]
 80053d2:	3d01      	subs	r5, #1
 80053d4:	5c5b      	ldrb	r3, [r3, r1]
 80053d6:	702b      	strb	r3, [r5, #0]
 80053d8:	0033      	movs	r3, r6
 80053da:	0006      	movs	r6, r0
 80053dc:	429f      	cmp	r7, r3
 80053de:	d9f3      	bls.n	80053c8 <_printf_i+0xec>
 80053e0:	2f08      	cmp	r7, #8
 80053e2:	d109      	bne.n	80053f8 <_printf_i+0x11c>
 80053e4:	6823      	ldr	r3, [r4, #0]
 80053e6:	07db      	lsls	r3, r3, #31
 80053e8:	d506      	bpl.n	80053f8 <_printf_i+0x11c>
 80053ea:	6862      	ldr	r2, [r4, #4]
 80053ec:	6923      	ldr	r3, [r4, #16]
 80053ee:	429a      	cmp	r2, r3
 80053f0:	dc02      	bgt.n	80053f8 <_printf_i+0x11c>
 80053f2:	2330      	movs	r3, #48	@ 0x30
 80053f4:	3d01      	subs	r5, #1
 80053f6:	702b      	strb	r3, [r5, #0]
 80053f8:	9b03      	ldr	r3, [sp, #12]
 80053fa:	1b5b      	subs	r3, r3, r5
 80053fc:	6123      	str	r3, [r4, #16]
 80053fe:	9b07      	ldr	r3, [sp, #28]
 8005400:	0021      	movs	r1, r4
 8005402:	9300      	str	r3, [sp, #0]
 8005404:	9805      	ldr	r0, [sp, #20]
 8005406:	9b06      	ldr	r3, [sp, #24]
 8005408:	aa09      	add	r2, sp, #36	@ 0x24
 800540a:	f7ff fef7 	bl	80051fc <_printf_common>
 800540e:	3001      	adds	r0, #1
 8005410:	d148      	bne.n	80054a4 <_printf_i+0x1c8>
 8005412:	2001      	movs	r0, #1
 8005414:	4240      	negs	r0, r0
 8005416:	b00b      	add	sp, #44	@ 0x2c
 8005418:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800541a:	2220      	movs	r2, #32
 800541c:	6809      	ldr	r1, [r1, #0]
 800541e:	430a      	orrs	r2, r1
 8005420:	6022      	str	r2, [r4, #0]
 8005422:	2278      	movs	r2, #120	@ 0x78
 8005424:	4932      	ldr	r1, [pc, #200]	@ (80054f0 <_printf_i+0x214>)
 8005426:	9104      	str	r1, [sp, #16]
 8005428:	0021      	movs	r1, r4
 800542a:	3145      	adds	r1, #69	@ 0x45
 800542c:	700a      	strb	r2, [r1, #0]
 800542e:	6819      	ldr	r1, [r3, #0]
 8005430:	6822      	ldr	r2, [r4, #0]
 8005432:	c940      	ldmia	r1!, {r6}
 8005434:	0610      	lsls	r0, r2, #24
 8005436:	d402      	bmi.n	800543e <_printf_i+0x162>
 8005438:	0650      	lsls	r0, r2, #25
 800543a:	d500      	bpl.n	800543e <_printf_i+0x162>
 800543c:	b2b6      	uxth	r6, r6
 800543e:	6019      	str	r1, [r3, #0]
 8005440:	07d3      	lsls	r3, r2, #31
 8005442:	d502      	bpl.n	800544a <_printf_i+0x16e>
 8005444:	2320      	movs	r3, #32
 8005446:	4313      	orrs	r3, r2
 8005448:	6023      	str	r3, [r4, #0]
 800544a:	2e00      	cmp	r6, #0
 800544c:	d001      	beq.n	8005452 <_printf_i+0x176>
 800544e:	2710      	movs	r7, #16
 8005450:	e7aa      	b.n	80053a8 <_printf_i+0xcc>
 8005452:	2220      	movs	r2, #32
 8005454:	6823      	ldr	r3, [r4, #0]
 8005456:	4393      	bics	r3, r2
 8005458:	6023      	str	r3, [r4, #0]
 800545a:	e7f8      	b.n	800544e <_printf_i+0x172>
 800545c:	681a      	ldr	r2, [r3, #0]
 800545e:	680d      	ldr	r5, [r1, #0]
 8005460:	1d10      	adds	r0, r2, #4
 8005462:	6949      	ldr	r1, [r1, #20]
 8005464:	6018      	str	r0, [r3, #0]
 8005466:	6813      	ldr	r3, [r2, #0]
 8005468:	062e      	lsls	r6, r5, #24
 800546a:	d501      	bpl.n	8005470 <_printf_i+0x194>
 800546c:	6019      	str	r1, [r3, #0]
 800546e:	e002      	b.n	8005476 <_printf_i+0x19a>
 8005470:	066d      	lsls	r5, r5, #25
 8005472:	d5fb      	bpl.n	800546c <_printf_i+0x190>
 8005474:	8019      	strh	r1, [r3, #0]
 8005476:	2300      	movs	r3, #0
 8005478:	9d03      	ldr	r5, [sp, #12]
 800547a:	6123      	str	r3, [r4, #16]
 800547c:	e7bf      	b.n	80053fe <_printf_i+0x122>
 800547e:	681a      	ldr	r2, [r3, #0]
 8005480:	1d11      	adds	r1, r2, #4
 8005482:	6019      	str	r1, [r3, #0]
 8005484:	6815      	ldr	r5, [r2, #0]
 8005486:	2100      	movs	r1, #0
 8005488:	0028      	movs	r0, r5
 800548a:	6862      	ldr	r2, [r4, #4]
 800548c:	f000 fcd7 	bl	8005e3e <memchr>
 8005490:	2800      	cmp	r0, #0
 8005492:	d001      	beq.n	8005498 <_printf_i+0x1bc>
 8005494:	1b40      	subs	r0, r0, r5
 8005496:	6060      	str	r0, [r4, #4]
 8005498:	6863      	ldr	r3, [r4, #4]
 800549a:	6123      	str	r3, [r4, #16]
 800549c:	2300      	movs	r3, #0
 800549e:	9a03      	ldr	r2, [sp, #12]
 80054a0:	7013      	strb	r3, [r2, #0]
 80054a2:	e7ac      	b.n	80053fe <_printf_i+0x122>
 80054a4:	002a      	movs	r2, r5
 80054a6:	6923      	ldr	r3, [r4, #16]
 80054a8:	9906      	ldr	r1, [sp, #24]
 80054aa:	9805      	ldr	r0, [sp, #20]
 80054ac:	9d07      	ldr	r5, [sp, #28]
 80054ae:	47a8      	blx	r5
 80054b0:	3001      	adds	r0, #1
 80054b2:	d0ae      	beq.n	8005412 <_printf_i+0x136>
 80054b4:	6823      	ldr	r3, [r4, #0]
 80054b6:	079b      	lsls	r3, r3, #30
 80054b8:	d415      	bmi.n	80054e6 <_printf_i+0x20a>
 80054ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80054bc:	68e0      	ldr	r0, [r4, #12]
 80054be:	4298      	cmp	r0, r3
 80054c0:	daa9      	bge.n	8005416 <_printf_i+0x13a>
 80054c2:	0018      	movs	r0, r3
 80054c4:	e7a7      	b.n	8005416 <_printf_i+0x13a>
 80054c6:	0022      	movs	r2, r4
 80054c8:	2301      	movs	r3, #1
 80054ca:	9906      	ldr	r1, [sp, #24]
 80054cc:	9805      	ldr	r0, [sp, #20]
 80054ce:	9e07      	ldr	r6, [sp, #28]
 80054d0:	3219      	adds	r2, #25
 80054d2:	47b0      	blx	r6
 80054d4:	3001      	adds	r0, #1
 80054d6:	d09c      	beq.n	8005412 <_printf_i+0x136>
 80054d8:	3501      	adds	r5, #1
 80054da:	68e3      	ldr	r3, [r4, #12]
 80054dc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80054de:	1a9b      	subs	r3, r3, r2
 80054e0:	42ab      	cmp	r3, r5
 80054e2:	dcf0      	bgt.n	80054c6 <_printf_i+0x1ea>
 80054e4:	e7e9      	b.n	80054ba <_printf_i+0x1de>
 80054e6:	2500      	movs	r5, #0
 80054e8:	e7f7      	b.n	80054da <_printf_i+0x1fe>
 80054ea:	46c0      	nop			@ (mov r8, r8)
 80054ec:	0800a2e4 	.word	0x0800a2e4
 80054f0:	0800a2f5 	.word	0x0800a2f5

080054f4 <_scanf_float>:
 80054f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80054f6:	b08b      	sub	sp, #44	@ 0x2c
 80054f8:	0016      	movs	r6, r2
 80054fa:	9003      	str	r0, [sp, #12]
 80054fc:	22ae      	movs	r2, #174	@ 0xae
 80054fe:	2000      	movs	r0, #0
 8005500:	9307      	str	r3, [sp, #28]
 8005502:	688b      	ldr	r3, [r1, #8]
 8005504:	000c      	movs	r4, r1
 8005506:	1e59      	subs	r1, r3, #1
 8005508:	0052      	lsls	r2, r2, #1
 800550a:	9006      	str	r0, [sp, #24]
 800550c:	4291      	cmp	r1, r2
 800550e:	d905      	bls.n	800551c <_scanf_float+0x28>
 8005510:	3b5e      	subs	r3, #94	@ 0x5e
 8005512:	3bff      	subs	r3, #255	@ 0xff
 8005514:	9306      	str	r3, [sp, #24]
 8005516:	235e      	movs	r3, #94	@ 0x5e
 8005518:	33ff      	adds	r3, #255	@ 0xff
 800551a:	60a3      	str	r3, [r4, #8]
 800551c:	23f0      	movs	r3, #240	@ 0xf0
 800551e:	6822      	ldr	r2, [r4, #0]
 8005520:	00db      	lsls	r3, r3, #3
 8005522:	4313      	orrs	r3, r2
 8005524:	6023      	str	r3, [r4, #0]
 8005526:	0023      	movs	r3, r4
 8005528:	2500      	movs	r5, #0
 800552a:	331c      	adds	r3, #28
 800552c:	001f      	movs	r7, r3
 800552e:	9304      	str	r3, [sp, #16]
 8005530:	9502      	str	r5, [sp, #8]
 8005532:	9509      	str	r5, [sp, #36]	@ 0x24
 8005534:	9508      	str	r5, [sp, #32]
 8005536:	9501      	str	r5, [sp, #4]
 8005538:	9505      	str	r5, [sp, #20]
 800553a:	68a2      	ldr	r2, [r4, #8]
 800553c:	2a00      	cmp	r2, #0
 800553e:	d00a      	beq.n	8005556 <_scanf_float+0x62>
 8005540:	6833      	ldr	r3, [r6, #0]
 8005542:	781b      	ldrb	r3, [r3, #0]
 8005544:	2b4e      	cmp	r3, #78	@ 0x4e
 8005546:	d844      	bhi.n	80055d2 <_scanf_float+0xde>
 8005548:	0018      	movs	r0, r3
 800554a:	2b40      	cmp	r3, #64	@ 0x40
 800554c:	d82c      	bhi.n	80055a8 <_scanf_float+0xb4>
 800554e:	382b      	subs	r0, #43	@ 0x2b
 8005550:	b2c1      	uxtb	r1, r0
 8005552:	290e      	cmp	r1, #14
 8005554:	d92a      	bls.n	80055ac <_scanf_float+0xb8>
 8005556:	9b01      	ldr	r3, [sp, #4]
 8005558:	2b00      	cmp	r3, #0
 800555a:	d003      	beq.n	8005564 <_scanf_float+0x70>
 800555c:	6823      	ldr	r3, [r4, #0]
 800555e:	4aa6      	ldr	r2, [pc, #664]	@ (80057f8 <_scanf_float+0x304>)
 8005560:	4013      	ands	r3, r2
 8005562:	6023      	str	r3, [r4, #0]
 8005564:	9b02      	ldr	r3, [sp, #8]
 8005566:	3b01      	subs	r3, #1
 8005568:	2b01      	cmp	r3, #1
 800556a:	d900      	bls.n	800556e <_scanf_float+0x7a>
 800556c:	e0fe      	b.n	800576c <_scanf_float+0x278>
 800556e:	25be      	movs	r5, #190	@ 0xbe
 8005570:	006d      	lsls	r5, r5, #1
 8005572:	9b04      	ldr	r3, [sp, #16]
 8005574:	429f      	cmp	r7, r3
 8005576:	d900      	bls.n	800557a <_scanf_float+0x86>
 8005578:	e0ee      	b.n	8005758 <_scanf_float+0x264>
 800557a:	2001      	movs	r0, #1
 800557c:	b00b      	add	sp, #44	@ 0x2c
 800557e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005580:	0018      	movs	r0, r3
 8005582:	3861      	subs	r0, #97	@ 0x61
 8005584:	280d      	cmp	r0, #13
 8005586:	d8e6      	bhi.n	8005556 <_scanf_float+0x62>
 8005588:	f7fa fdd0 	bl	800012c <__gnu_thumb1_case_shi>
 800558c:	ffe50089 	.word	0xffe50089
 8005590:	ffe5ffe5 	.word	0xffe5ffe5
 8005594:	00a700bb 	.word	0x00a700bb
 8005598:	ffe5ffe5 	.word	0xffe5ffe5
 800559c:	ffe5008f 	.word	0xffe5008f
 80055a0:	ffe5ffe5 	.word	0xffe5ffe5
 80055a4:	006bffe5 	.word	0x006bffe5
 80055a8:	3841      	subs	r0, #65	@ 0x41
 80055aa:	e7eb      	b.n	8005584 <_scanf_float+0x90>
 80055ac:	280e      	cmp	r0, #14
 80055ae:	d8d2      	bhi.n	8005556 <_scanf_float+0x62>
 80055b0:	f7fa fdbc 	bl	800012c <__gnu_thumb1_case_shi>
 80055b4:	ffd1004f 	.word	0xffd1004f
 80055b8:	009d004f 	.word	0x009d004f
 80055bc:	0021ffd1 	.word	0x0021ffd1
 80055c0:	00410041 	.word	0x00410041
 80055c4:	00410041 	.word	0x00410041
 80055c8:	00410041 	.word	0x00410041
 80055cc:	00410041 	.word	0x00410041
 80055d0:	0041      	.short	0x0041
 80055d2:	2b6e      	cmp	r3, #110	@ 0x6e
 80055d4:	d80a      	bhi.n	80055ec <_scanf_float+0xf8>
 80055d6:	2b60      	cmp	r3, #96	@ 0x60
 80055d8:	d8d2      	bhi.n	8005580 <_scanf_float+0x8c>
 80055da:	2b54      	cmp	r3, #84	@ 0x54
 80055dc:	d100      	bne.n	80055e0 <_scanf_float+0xec>
 80055de:	e081      	b.n	80056e4 <_scanf_float+0x1f0>
 80055e0:	2b59      	cmp	r3, #89	@ 0x59
 80055e2:	d1b8      	bne.n	8005556 <_scanf_float+0x62>
 80055e4:	2d07      	cmp	r5, #7
 80055e6:	d1b6      	bne.n	8005556 <_scanf_float+0x62>
 80055e8:	2508      	movs	r5, #8
 80055ea:	e02f      	b.n	800564c <_scanf_float+0x158>
 80055ec:	2b74      	cmp	r3, #116	@ 0x74
 80055ee:	d079      	beq.n	80056e4 <_scanf_float+0x1f0>
 80055f0:	2b79      	cmp	r3, #121	@ 0x79
 80055f2:	d0f7      	beq.n	80055e4 <_scanf_float+0xf0>
 80055f4:	e7af      	b.n	8005556 <_scanf_float+0x62>
 80055f6:	6821      	ldr	r1, [r4, #0]
 80055f8:	05c8      	lsls	r0, r1, #23
 80055fa:	d51c      	bpl.n	8005636 <_scanf_float+0x142>
 80055fc:	2380      	movs	r3, #128	@ 0x80
 80055fe:	4399      	bics	r1, r3
 8005600:	9b01      	ldr	r3, [sp, #4]
 8005602:	6021      	str	r1, [r4, #0]
 8005604:	3301      	adds	r3, #1
 8005606:	9301      	str	r3, [sp, #4]
 8005608:	9b06      	ldr	r3, [sp, #24]
 800560a:	2b00      	cmp	r3, #0
 800560c:	d003      	beq.n	8005616 <_scanf_float+0x122>
 800560e:	3b01      	subs	r3, #1
 8005610:	3201      	adds	r2, #1
 8005612:	9306      	str	r3, [sp, #24]
 8005614:	60a2      	str	r2, [r4, #8]
 8005616:	68a3      	ldr	r3, [r4, #8]
 8005618:	3b01      	subs	r3, #1
 800561a:	60a3      	str	r3, [r4, #8]
 800561c:	6923      	ldr	r3, [r4, #16]
 800561e:	3301      	adds	r3, #1
 8005620:	6123      	str	r3, [r4, #16]
 8005622:	6873      	ldr	r3, [r6, #4]
 8005624:	3b01      	subs	r3, #1
 8005626:	6073      	str	r3, [r6, #4]
 8005628:	2b00      	cmp	r3, #0
 800562a:	dc00      	bgt.n	800562e <_scanf_float+0x13a>
 800562c:	e08a      	b.n	8005744 <_scanf_float+0x250>
 800562e:	6833      	ldr	r3, [r6, #0]
 8005630:	3301      	adds	r3, #1
 8005632:	6033      	str	r3, [r6, #0]
 8005634:	e781      	b.n	800553a <_scanf_float+0x46>
 8005636:	9a02      	ldr	r2, [sp, #8]
 8005638:	1951      	adds	r1, r2, r5
 800563a:	2900      	cmp	r1, #0
 800563c:	d000      	beq.n	8005640 <_scanf_float+0x14c>
 800563e:	e78a      	b.n	8005556 <_scanf_float+0x62>
 8005640:	000d      	movs	r5, r1
 8005642:	6822      	ldr	r2, [r4, #0]
 8005644:	486d      	ldr	r0, [pc, #436]	@ (80057fc <_scanf_float+0x308>)
 8005646:	9102      	str	r1, [sp, #8]
 8005648:	4002      	ands	r2, r0
 800564a:	6022      	str	r2, [r4, #0]
 800564c:	703b      	strb	r3, [r7, #0]
 800564e:	3701      	adds	r7, #1
 8005650:	e7e1      	b.n	8005616 <_scanf_float+0x122>
 8005652:	2180      	movs	r1, #128	@ 0x80
 8005654:	6822      	ldr	r2, [r4, #0]
 8005656:	420a      	tst	r2, r1
 8005658:	d100      	bne.n	800565c <_scanf_float+0x168>
 800565a:	e77c      	b.n	8005556 <_scanf_float+0x62>
 800565c:	438a      	bics	r2, r1
 800565e:	6022      	str	r2, [r4, #0]
 8005660:	e7f4      	b.n	800564c <_scanf_float+0x158>
 8005662:	9a02      	ldr	r2, [sp, #8]
 8005664:	2a00      	cmp	r2, #0
 8005666:	d10f      	bne.n	8005688 <_scanf_float+0x194>
 8005668:	9a01      	ldr	r2, [sp, #4]
 800566a:	2a00      	cmp	r2, #0
 800566c:	d10f      	bne.n	800568e <_scanf_float+0x19a>
 800566e:	6822      	ldr	r2, [r4, #0]
 8005670:	21e0      	movs	r1, #224	@ 0xe0
 8005672:	0010      	movs	r0, r2
 8005674:	00c9      	lsls	r1, r1, #3
 8005676:	4008      	ands	r0, r1
 8005678:	4288      	cmp	r0, r1
 800567a:	d108      	bne.n	800568e <_scanf_float+0x19a>
 800567c:	4960      	ldr	r1, [pc, #384]	@ (8005800 <_scanf_float+0x30c>)
 800567e:	400a      	ands	r2, r1
 8005680:	6022      	str	r2, [r4, #0]
 8005682:	2201      	movs	r2, #1
 8005684:	9202      	str	r2, [sp, #8]
 8005686:	e7e1      	b.n	800564c <_scanf_float+0x158>
 8005688:	9a02      	ldr	r2, [sp, #8]
 800568a:	2a02      	cmp	r2, #2
 800568c:	d058      	beq.n	8005740 <_scanf_float+0x24c>
 800568e:	2d01      	cmp	r5, #1
 8005690:	d002      	beq.n	8005698 <_scanf_float+0x1a4>
 8005692:	2d04      	cmp	r5, #4
 8005694:	d000      	beq.n	8005698 <_scanf_float+0x1a4>
 8005696:	e75e      	b.n	8005556 <_scanf_float+0x62>
 8005698:	3501      	adds	r5, #1
 800569a:	b2ed      	uxtb	r5, r5
 800569c:	e7d6      	b.n	800564c <_scanf_float+0x158>
 800569e:	9a02      	ldr	r2, [sp, #8]
 80056a0:	2a01      	cmp	r2, #1
 80056a2:	d000      	beq.n	80056a6 <_scanf_float+0x1b2>
 80056a4:	e757      	b.n	8005556 <_scanf_float+0x62>
 80056a6:	2202      	movs	r2, #2
 80056a8:	e7ec      	b.n	8005684 <_scanf_float+0x190>
 80056aa:	2d00      	cmp	r5, #0
 80056ac:	d110      	bne.n	80056d0 <_scanf_float+0x1dc>
 80056ae:	9a01      	ldr	r2, [sp, #4]
 80056b0:	2a00      	cmp	r2, #0
 80056b2:	d000      	beq.n	80056b6 <_scanf_float+0x1c2>
 80056b4:	e752      	b.n	800555c <_scanf_float+0x68>
 80056b6:	6822      	ldr	r2, [r4, #0]
 80056b8:	21e0      	movs	r1, #224	@ 0xe0
 80056ba:	0010      	movs	r0, r2
 80056bc:	00c9      	lsls	r1, r1, #3
 80056be:	4008      	ands	r0, r1
 80056c0:	4288      	cmp	r0, r1
 80056c2:	d000      	beq.n	80056c6 <_scanf_float+0x1d2>
 80056c4:	e11b      	b.n	80058fe <_scanf_float+0x40a>
 80056c6:	494e      	ldr	r1, [pc, #312]	@ (8005800 <_scanf_float+0x30c>)
 80056c8:	3501      	adds	r5, #1
 80056ca:	400a      	ands	r2, r1
 80056cc:	6022      	str	r2, [r4, #0]
 80056ce:	e7bd      	b.n	800564c <_scanf_float+0x158>
 80056d0:	21fd      	movs	r1, #253	@ 0xfd
 80056d2:	1eea      	subs	r2, r5, #3
 80056d4:	420a      	tst	r2, r1
 80056d6:	d0df      	beq.n	8005698 <_scanf_float+0x1a4>
 80056d8:	e73d      	b.n	8005556 <_scanf_float+0x62>
 80056da:	2d02      	cmp	r5, #2
 80056dc:	d000      	beq.n	80056e0 <_scanf_float+0x1ec>
 80056de:	e73a      	b.n	8005556 <_scanf_float+0x62>
 80056e0:	2503      	movs	r5, #3
 80056e2:	e7b3      	b.n	800564c <_scanf_float+0x158>
 80056e4:	2d06      	cmp	r5, #6
 80056e6:	d000      	beq.n	80056ea <_scanf_float+0x1f6>
 80056e8:	e735      	b.n	8005556 <_scanf_float+0x62>
 80056ea:	2507      	movs	r5, #7
 80056ec:	e7ae      	b.n	800564c <_scanf_float+0x158>
 80056ee:	6822      	ldr	r2, [r4, #0]
 80056f0:	0591      	lsls	r1, r2, #22
 80056f2:	d400      	bmi.n	80056f6 <_scanf_float+0x202>
 80056f4:	e72f      	b.n	8005556 <_scanf_float+0x62>
 80056f6:	4943      	ldr	r1, [pc, #268]	@ (8005804 <_scanf_float+0x310>)
 80056f8:	400a      	ands	r2, r1
 80056fa:	6022      	str	r2, [r4, #0]
 80056fc:	9a01      	ldr	r2, [sp, #4]
 80056fe:	9205      	str	r2, [sp, #20]
 8005700:	e7a4      	b.n	800564c <_scanf_float+0x158>
 8005702:	21a0      	movs	r1, #160	@ 0xa0
 8005704:	2080      	movs	r0, #128	@ 0x80
 8005706:	6822      	ldr	r2, [r4, #0]
 8005708:	00c9      	lsls	r1, r1, #3
 800570a:	4011      	ands	r1, r2
 800570c:	00c0      	lsls	r0, r0, #3
 800570e:	4281      	cmp	r1, r0
 8005710:	d006      	beq.n	8005720 <_scanf_float+0x22c>
 8005712:	4202      	tst	r2, r0
 8005714:	d100      	bne.n	8005718 <_scanf_float+0x224>
 8005716:	e71e      	b.n	8005556 <_scanf_float+0x62>
 8005718:	9901      	ldr	r1, [sp, #4]
 800571a:	2900      	cmp	r1, #0
 800571c:	d100      	bne.n	8005720 <_scanf_float+0x22c>
 800571e:	e0ee      	b.n	80058fe <_scanf_float+0x40a>
 8005720:	0591      	lsls	r1, r2, #22
 8005722:	d404      	bmi.n	800572e <_scanf_float+0x23a>
 8005724:	9901      	ldr	r1, [sp, #4]
 8005726:	9805      	ldr	r0, [sp, #20]
 8005728:	9709      	str	r7, [sp, #36]	@ 0x24
 800572a:	1a09      	subs	r1, r1, r0
 800572c:	9108      	str	r1, [sp, #32]
 800572e:	4934      	ldr	r1, [pc, #208]	@ (8005800 <_scanf_float+0x30c>)
 8005730:	400a      	ands	r2, r1
 8005732:	21c0      	movs	r1, #192	@ 0xc0
 8005734:	0049      	lsls	r1, r1, #1
 8005736:	430a      	orrs	r2, r1
 8005738:	6022      	str	r2, [r4, #0]
 800573a:	2200      	movs	r2, #0
 800573c:	9201      	str	r2, [sp, #4]
 800573e:	e785      	b.n	800564c <_scanf_float+0x158>
 8005740:	2203      	movs	r2, #3
 8005742:	e79f      	b.n	8005684 <_scanf_float+0x190>
 8005744:	23c0      	movs	r3, #192	@ 0xc0
 8005746:	005b      	lsls	r3, r3, #1
 8005748:	0031      	movs	r1, r6
 800574a:	58e3      	ldr	r3, [r4, r3]
 800574c:	9803      	ldr	r0, [sp, #12]
 800574e:	4798      	blx	r3
 8005750:	2800      	cmp	r0, #0
 8005752:	d100      	bne.n	8005756 <_scanf_float+0x262>
 8005754:	e6f1      	b.n	800553a <_scanf_float+0x46>
 8005756:	e6fe      	b.n	8005556 <_scanf_float+0x62>
 8005758:	3f01      	subs	r7, #1
 800575a:	5963      	ldr	r3, [r4, r5]
 800575c:	0032      	movs	r2, r6
 800575e:	7839      	ldrb	r1, [r7, #0]
 8005760:	9803      	ldr	r0, [sp, #12]
 8005762:	4798      	blx	r3
 8005764:	6923      	ldr	r3, [r4, #16]
 8005766:	3b01      	subs	r3, #1
 8005768:	6123      	str	r3, [r4, #16]
 800576a:	e702      	b.n	8005572 <_scanf_float+0x7e>
 800576c:	1e6b      	subs	r3, r5, #1
 800576e:	2b06      	cmp	r3, #6
 8005770:	d80e      	bhi.n	8005790 <_scanf_float+0x29c>
 8005772:	9702      	str	r7, [sp, #8]
 8005774:	2d02      	cmp	r5, #2
 8005776:	d920      	bls.n	80057ba <_scanf_float+0x2c6>
 8005778:	1beb      	subs	r3, r5, r7
 800577a:	b2db      	uxtb	r3, r3
 800577c:	9306      	str	r3, [sp, #24]
 800577e:	9b02      	ldr	r3, [sp, #8]
 8005780:	9a06      	ldr	r2, [sp, #24]
 8005782:	189b      	adds	r3, r3, r2
 8005784:	b2db      	uxtb	r3, r3
 8005786:	2b03      	cmp	r3, #3
 8005788:	d127      	bne.n	80057da <_scanf_float+0x2e6>
 800578a:	3d03      	subs	r5, #3
 800578c:	b2ed      	uxtb	r5, r5
 800578e:	1b7f      	subs	r7, r7, r5
 8005790:	6823      	ldr	r3, [r4, #0]
 8005792:	05da      	lsls	r2, r3, #23
 8005794:	d553      	bpl.n	800583e <_scanf_float+0x34a>
 8005796:	055b      	lsls	r3, r3, #21
 8005798:	d536      	bpl.n	8005808 <_scanf_float+0x314>
 800579a:	25be      	movs	r5, #190	@ 0xbe
 800579c:	006d      	lsls	r5, r5, #1
 800579e:	9b04      	ldr	r3, [sp, #16]
 80057a0:	429f      	cmp	r7, r3
 80057a2:	d800      	bhi.n	80057a6 <_scanf_float+0x2b2>
 80057a4:	e6e9      	b.n	800557a <_scanf_float+0x86>
 80057a6:	3f01      	subs	r7, #1
 80057a8:	5963      	ldr	r3, [r4, r5]
 80057aa:	0032      	movs	r2, r6
 80057ac:	7839      	ldrb	r1, [r7, #0]
 80057ae:	9803      	ldr	r0, [sp, #12]
 80057b0:	4798      	blx	r3
 80057b2:	6923      	ldr	r3, [r4, #16]
 80057b4:	3b01      	subs	r3, #1
 80057b6:	6123      	str	r3, [r4, #16]
 80057b8:	e7f1      	b.n	800579e <_scanf_float+0x2aa>
 80057ba:	25be      	movs	r5, #190	@ 0xbe
 80057bc:	006d      	lsls	r5, r5, #1
 80057be:	9b04      	ldr	r3, [sp, #16]
 80057c0:	429f      	cmp	r7, r3
 80057c2:	d800      	bhi.n	80057c6 <_scanf_float+0x2d2>
 80057c4:	e6d9      	b.n	800557a <_scanf_float+0x86>
 80057c6:	3f01      	subs	r7, #1
 80057c8:	5963      	ldr	r3, [r4, r5]
 80057ca:	0032      	movs	r2, r6
 80057cc:	7839      	ldrb	r1, [r7, #0]
 80057ce:	9803      	ldr	r0, [sp, #12]
 80057d0:	4798      	blx	r3
 80057d2:	6923      	ldr	r3, [r4, #16]
 80057d4:	3b01      	subs	r3, #1
 80057d6:	6123      	str	r3, [r4, #16]
 80057d8:	e7f1      	b.n	80057be <_scanf_float+0x2ca>
 80057da:	9b02      	ldr	r3, [sp, #8]
 80057dc:	0032      	movs	r2, r6
 80057de:	3b01      	subs	r3, #1
 80057e0:	7819      	ldrb	r1, [r3, #0]
 80057e2:	9302      	str	r3, [sp, #8]
 80057e4:	23be      	movs	r3, #190	@ 0xbe
 80057e6:	005b      	lsls	r3, r3, #1
 80057e8:	58e3      	ldr	r3, [r4, r3]
 80057ea:	9803      	ldr	r0, [sp, #12]
 80057ec:	4798      	blx	r3
 80057ee:	6923      	ldr	r3, [r4, #16]
 80057f0:	3b01      	subs	r3, #1
 80057f2:	6123      	str	r3, [r4, #16]
 80057f4:	e7c3      	b.n	800577e <_scanf_float+0x28a>
 80057f6:	46c0      	nop			@ (mov r8, r8)
 80057f8:	fffffeff 	.word	0xfffffeff
 80057fc:	fffffe7f 	.word	0xfffffe7f
 8005800:	fffff87f 	.word	0xfffff87f
 8005804:	fffffd7f 	.word	0xfffffd7f
 8005808:	6923      	ldr	r3, [r4, #16]
 800580a:	1e7d      	subs	r5, r7, #1
 800580c:	7829      	ldrb	r1, [r5, #0]
 800580e:	3b01      	subs	r3, #1
 8005810:	6123      	str	r3, [r4, #16]
 8005812:	2965      	cmp	r1, #101	@ 0x65
 8005814:	d00c      	beq.n	8005830 <_scanf_float+0x33c>
 8005816:	2945      	cmp	r1, #69	@ 0x45
 8005818:	d00a      	beq.n	8005830 <_scanf_float+0x33c>
 800581a:	23be      	movs	r3, #190	@ 0xbe
 800581c:	005b      	lsls	r3, r3, #1
 800581e:	58e3      	ldr	r3, [r4, r3]
 8005820:	0032      	movs	r2, r6
 8005822:	9803      	ldr	r0, [sp, #12]
 8005824:	4798      	blx	r3
 8005826:	6923      	ldr	r3, [r4, #16]
 8005828:	1ebd      	subs	r5, r7, #2
 800582a:	3b01      	subs	r3, #1
 800582c:	7829      	ldrb	r1, [r5, #0]
 800582e:	6123      	str	r3, [r4, #16]
 8005830:	23be      	movs	r3, #190	@ 0xbe
 8005832:	005b      	lsls	r3, r3, #1
 8005834:	0032      	movs	r2, r6
 8005836:	58e3      	ldr	r3, [r4, r3]
 8005838:	9803      	ldr	r0, [sp, #12]
 800583a:	4798      	blx	r3
 800583c:	002f      	movs	r7, r5
 800583e:	6821      	ldr	r1, [r4, #0]
 8005840:	2310      	movs	r3, #16
 8005842:	000a      	movs	r2, r1
 8005844:	401a      	ands	r2, r3
 8005846:	4219      	tst	r1, r3
 8005848:	d001      	beq.n	800584e <_scanf_float+0x35a>
 800584a:	2000      	movs	r0, #0
 800584c:	e696      	b.n	800557c <_scanf_float+0x88>
 800584e:	21c0      	movs	r1, #192	@ 0xc0
 8005850:	703a      	strb	r2, [r7, #0]
 8005852:	6823      	ldr	r3, [r4, #0]
 8005854:	00c9      	lsls	r1, r1, #3
 8005856:	400b      	ands	r3, r1
 8005858:	2180      	movs	r1, #128	@ 0x80
 800585a:	00c9      	lsls	r1, r1, #3
 800585c:	428b      	cmp	r3, r1
 800585e:	d126      	bne.n	80058ae <_scanf_float+0x3ba>
 8005860:	9b05      	ldr	r3, [sp, #20]
 8005862:	9a01      	ldr	r2, [sp, #4]
 8005864:	4293      	cmp	r3, r2
 8005866:	d00c      	beq.n	8005882 <_scanf_float+0x38e>
 8005868:	1a9a      	subs	r2, r3, r2
 800586a:	0023      	movs	r3, r4
 800586c:	3370      	adds	r3, #112	@ 0x70
 800586e:	33ff      	adds	r3, #255	@ 0xff
 8005870:	429f      	cmp	r7, r3
 8005872:	d302      	bcc.n	800587a <_scanf_float+0x386>
 8005874:	0027      	movs	r7, r4
 8005876:	376f      	adds	r7, #111	@ 0x6f
 8005878:	37ff      	adds	r7, #255	@ 0xff
 800587a:	0038      	movs	r0, r7
 800587c:	4921      	ldr	r1, [pc, #132]	@ (8005904 <_scanf_float+0x410>)
 800587e:	f000 f9e9 	bl	8005c54 <siprintf>
 8005882:	2200      	movs	r2, #0
 8005884:	9904      	ldr	r1, [sp, #16]
 8005886:	9803      	ldr	r0, [sp, #12]
 8005888:	f002 fd3c 	bl	8008304 <_strtod_r>
 800588c:	9b07      	ldr	r3, [sp, #28]
 800588e:	6822      	ldr	r2, [r4, #0]
 8005890:	0006      	movs	r6, r0
 8005892:	000f      	movs	r7, r1
 8005894:	681b      	ldr	r3, [r3, #0]
 8005896:	0791      	lsls	r1, r2, #30
 8005898:	d516      	bpl.n	80058c8 <_scanf_float+0x3d4>
 800589a:	9907      	ldr	r1, [sp, #28]
 800589c:	1d1a      	adds	r2, r3, #4
 800589e:	600a      	str	r2, [r1, #0]
 80058a0:	681b      	ldr	r3, [r3, #0]
 80058a2:	601e      	str	r6, [r3, #0]
 80058a4:	605f      	str	r7, [r3, #4]
 80058a6:	68e3      	ldr	r3, [r4, #12]
 80058a8:	3301      	adds	r3, #1
 80058aa:	60e3      	str	r3, [r4, #12]
 80058ac:	e7cd      	b.n	800584a <_scanf_float+0x356>
 80058ae:	9b08      	ldr	r3, [sp, #32]
 80058b0:	2b00      	cmp	r3, #0
 80058b2:	d0e6      	beq.n	8005882 <_scanf_float+0x38e>
 80058b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80058b6:	9803      	ldr	r0, [sp, #12]
 80058b8:	1c59      	adds	r1, r3, #1
 80058ba:	230a      	movs	r3, #10
 80058bc:	f002 fdb4 	bl	8008428 <_strtol_r>
 80058c0:	9b08      	ldr	r3, [sp, #32]
 80058c2:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 80058c4:	1ac2      	subs	r2, r0, r3
 80058c6:	e7d0      	b.n	800586a <_scanf_float+0x376>
 80058c8:	1d19      	adds	r1, r3, #4
 80058ca:	0752      	lsls	r2, r2, #29
 80058cc:	d502      	bpl.n	80058d4 <_scanf_float+0x3e0>
 80058ce:	9a07      	ldr	r2, [sp, #28]
 80058d0:	6011      	str	r1, [r2, #0]
 80058d2:	e7e5      	b.n	80058a0 <_scanf_float+0x3ac>
 80058d4:	9a07      	ldr	r2, [sp, #28]
 80058d6:	0030      	movs	r0, r6
 80058d8:	6011      	str	r1, [r2, #0]
 80058da:	681d      	ldr	r5, [r3, #0]
 80058dc:	0032      	movs	r2, r6
 80058de:	003b      	movs	r3, r7
 80058e0:	0039      	movs	r1, r7
 80058e2:	f7fc fd3f 	bl	8002364 <__aeabi_dcmpun>
 80058e6:	2800      	cmp	r0, #0
 80058e8:	d004      	beq.n	80058f4 <_scanf_float+0x400>
 80058ea:	4807      	ldr	r0, [pc, #28]	@ (8005908 <_scanf_float+0x414>)
 80058ec:	f000 fab2 	bl	8005e54 <nanf>
 80058f0:	6028      	str	r0, [r5, #0]
 80058f2:	e7d8      	b.n	80058a6 <_scanf_float+0x3b2>
 80058f4:	0030      	movs	r0, r6
 80058f6:	0039      	movs	r1, r7
 80058f8:	f7fc fe2c 	bl	8002554 <__aeabi_d2f>
 80058fc:	e7f8      	b.n	80058f0 <_scanf_float+0x3fc>
 80058fe:	2300      	movs	r3, #0
 8005900:	9301      	str	r3, [sp, #4]
 8005902:	e62f      	b.n	8005564 <_scanf_float+0x70>
 8005904:	0800a306 	.word	0x0800a306
 8005908:	0800a462 	.word	0x0800a462

0800590c <std>:
 800590c:	2300      	movs	r3, #0
 800590e:	b510      	push	{r4, lr}
 8005910:	0004      	movs	r4, r0
 8005912:	6003      	str	r3, [r0, #0]
 8005914:	6043      	str	r3, [r0, #4]
 8005916:	6083      	str	r3, [r0, #8]
 8005918:	8181      	strh	r1, [r0, #12]
 800591a:	6643      	str	r3, [r0, #100]	@ 0x64
 800591c:	81c2      	strh	r2, [r0, #14]
 800591e:	6103      	str	r3, [r0, #16]
 8005920:	6143      	str	r3, [r0, #20]
 8005922:	6183      	str	r3, [r0, #24]
 8005924:	0019      	movs	r1, r3
 8005926:	2208      	movs	r2, #8
 8005928:	305c      	adds	r0, #92	@ 0x5c
 800592a:	f000 fa01 	bl	8005d30 <memset>
 800592e:	4b0b      	ldr	r3, [pc, #44]	@ (800595c <std+0x50>)
 8005930:	6224      	str	r4, [r4, #32]
 8005932:	6263      	str	r3, [r4, #36]	@ 0x24
 8005934:	4b0a      	ldr	r3, [pc, #40]	@ (8005960 <std+0x54>)
 8005936:	62a3      	str	r3, [r4, #40]	@ 0x28
 8005938:	4b0a      	ldr	r3, [pc, #40]	@ (8005964 <std+0x58>)
 800593a:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800593c:	4b0a      	ldr	r3, [pc, #40]	@ (8005968 <std+0x5c>)
 800593e:	6323      	str	r3, [r4, #48]	@ 0x30
 8005940:	4b0a      	ldr	r3, [pc, #40]	@ (800596c <std+0x60>)
 8005942:	429c      	cmp	r4, r3
 8005944:	d005      	beq.n	8005952 <std+0x46>
 8005946:	4b0a      	ldr	r3, [pc, #40]	@ (8005970 <std+0x64>)
 8005948:	429c      	cmp	r4, r3
 800594a:	d002      	beq.n	8005952 <std+0x46>
 800594c:	4b09      	ldr	r3, [pc, #36]	@ (8005974 <std+0x68>)
 800594e:	429c      	cmp	r4, r3
 8005950:	d103      	bne.n	800595a <std+0x4e>
 8005952:	0020      	movs	r0, r4
 8005954:	3058      	adds	r0, #88	@ 0x58
 8005956:	f000 fa6f 	bl	8005e38 <__retarget_lock_init_recursive>
 800595a:	bd10      	pop	{r4, pc}
 800595c:	08005c99 	.word	0x08005c99
 8005960:	08005cc1 	.word	0x08005cc1
 8005964:	08005cf9 	.word	0x08005cf9
 8005968:	08005d25 	.word	0x08005d25
 800596c:	200002b0 	.word	0x200002b0
 8005970:	20000318 	.word	0x20000318
 8005974:	20000380 	.word	0x20000380

08005978 <stdio_exit_handler>:
 8005978:	b510      	push	{r4, lr}
 800597a:	4a03      	ldr	r2, [pc, #12]	@ (8005988 <stdio_exit_handler+0x10>)
 800597c:	4903      	ldr	r1, [pc, #12]	@ (800598c <stdio_exit_handler+0x14>)
 800597e:	4804      	ldr	r0, [pc, #16]	@ (8005990 <stdio_exit_handler+0x18>)
 8005980:	f000 f86c 	bl	8005a5c <_fwalk_sglue>
 8005984:	bd10      	pop	{r4, pc}
 8005986:	46c0      	nop			@ (mov r8, r8)
 8005988:	20000010 	.word	0x20000010
 800598c:	08009085 	.word	0x08009085
 8005990:	20000020 	.word	0x20000020

08005994 <cleanup_stdio>:
 8005994:	6841      	ldr	r1, [r0, #4]
 8005996:	4b0b      	ldr	r3, [pc, #44]	@ (80059c4 <cleanup_stdio+0x30>)
 8005998:	b510      	push	{r4, lr}
 800599a:	0004      	movs	r4, r0
 800599c:	4299      	cmp	r1, r3
 800599e:	d001      	beq.n	80059a4 <cleanup_stdio+0x10>
 80059a0:	f003 fb70 	bl	8009084 <_fflush_r>
 80059a4:	68a1      	ldr	r1, [r4, #8]
 80059a6:	4b08      	ldr	r3, [pc, #32]	@ (80059c8 <cleanup_stdio+0x34>)
 80059a8:	4299      	cmp	r1, r3
 80059aa:	d002      	beq.n	80059b2 <cleanup_stdio+0x1e>
 80059ac:	0020      	movs	r0, r4
 80059ae:	f003 fb69 	bl	8009084 <_fflush_r>
 80059b2:	68e1      	ldr	r1, [r4, #12]
 80059b4:	4b05      	ldr	r3, [pc, #20]	@ (80059cc <cleanup_stdio+0x38>)
 80059b6:	4299      	cmp	r1, r3
 80059b8:	d002      	beq.n	80059c0 <cleanup_stdio+0x2c>
 80059ba:	0020      	movs	r0, r4
 80059bc:	f003 fb62 	bl	8009084 <_fflush_r>
 80059c0:	bd10      	pop	{r4, pc}
 80059c2:	46c0      	nop			@ (mov r8, r8)
 80059c4:	200002b0 	.word	0x200002b0
 80059c8:	20000318 	.word	0x20000318
 80059cc:	20000380 	.word	0x20000380

080059d0 <global_stdio_init.part.0>:
 80059d0:	b510      	push	{r4, lr}
 80059d2:	4b09      	ldr	r3, [pc, #36]	@ (80059f8 <global_stdio_init.part.0+0x28>)
 80059d4:	4a09      	ldr	r2, [pc, #36]	@ (80059fc <global_stdio_init.part.0+0x2c>)
 80059d6:	2104      	movs	r1, #4
 80059d8:	601a      	str	r2, [r3, #0]
 80059da:	4809      	ldr	r0, [pc, #36]	@ (8005a00 <global_stdio_init.part.0+0x30>)
 80059dc:	2200      	movs	r2, #0
 80059de:	f7ff ff95 	bl	800590c <std>
 80059e2:	2201      	movs	r2, #1
 80059e4:	2109      	movs	r1, #9
 80059e6:	4807      	ldr	r0, [pc, #28]	@ (8005a04 <global_stdio_init.part.0+0x34>)
 80059e8:	f7ff ff90 	bl	800590c <std>
 80059ec:	2202      	movs	r2, #2
 80059ee:	2112      	movs	r1, #18
 80059f0:	4805      	ldr	r0, [pc, #20]	@ (8005a08 <global_stdio_init.part.0+0x38>)
 80059f2:	f7ff ff8b 	bl	800590c <std>
 80059f6:	bd10      	pop	{r4, pc}
 80059f8:	200003e8 	.word	0x200003e8
 80059fc:	08005979 	.word	0x08005979
 8005a00:	200002b0 	.word	0x200002b0
 8005a04:	20000318 	.word	0x20000318
 8005a08:	20000380 	.word	0x20000380

08005a0c <__sfp_lock_acquire>:
 8005a0c:	b510      	push	{r4, lr}
 8005a0e:	4802      	ldr	r0, [pc, #8]	@ (8005a18 <__sfp_lock_acquire+0xc>)
 8005a10:	f000 fa13 	bl	8005e3a <__retarget_lock_acquire_recursive>
 8005a14:	bd10      	pop	{r4, pc}
 8005a16:	46c0      	nop			@ (mov r8, r8)
 8005a18:	200003f1 	.word	0x200003f1

08005a1c <__sfp_lock_release>:
 8005a1c:	b510      	push	{r4, lr}
 8005a1e:	4802      	ldr	r0, [pc, #8]	@ (8005a28 <__sfp_lock_release+0xc>)
 8005a20:	f000 fa0c 	bl	8005e3c <__retarget_lock_release_recursive>
 8005a24:	bd10      	pop	{r4, pc}
 8005a26:	46c0      	nop			@ (mov r8, r8)
 8005a28:	200003f1 	.word	0x200003f1

08005a2c <__sinit>:
 8005a2c:	b510      	push	{r4, lr}
 8005a2e:	0004      	movs	r4, r0
 8005a30:	f7ff ffec 	bl	8005a0c <__sfp_lock_acquire>
 8005a34:	6a23      	ldr	r3, [r4, #32]
 8005a36:	2b00      	cmp	r3, #0
 8005a38:	d002      	beq.n	8005a40 <__sinit+0x14>
 8005a3a:	f7ff ffef 	bl	8005a1c <__sfp_lock_release>
 8005a3e:	bd10      	pop	{r4, pc}
 8005a40:	4b04      	ldr	r3, [pc, #16]	@ (8005a54 <__sinit+0x28>)
 8005a42:	6223      	str	r3, [r4, #32]
 8005a44:	4b04      	ldr	r3, [pc, #16]	@ (8005a58 <__sinit+0x2c>)
 8005a46:	681b      	ldr	r3, [r3, #0]
 8005a48:	2b00      	cmp	r3, #0
 8005a4a:	d1f6      	bne.n	8005a3a <__sinit+0xe>
 8005a4c:	f7ff ffc0 	bl	80059d0 <global_stdio_init.part.0>
 8005a50:	e7f3      	b.n	8005a3a <__sinit+0xe>
 8005a52:	46c0      	nop			@ (mov r8, r8)
 8005a54:	08005995 	.word	0x08005995
 8005a58:	200003e8 	.word	0x200003e8

08005a5c <_fwalk_sglue>:
 8005a5c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005a5e:	0014      	movs	r4, r2
 8005a60:	2600      	movs	r6, #0
 8005a62:	9000      	str	r0, [sp, #0]
 8005a64:	9101      	str	r1, [sp, #4]
 8005a66:	68a5      	ldr	r5, [r4, #8]
 8005a68:	6867      	ldr	r7, [r4, #4]
 8005a6a:	3f01      	subs	r7, #1
 8005a6c:	d504      	bpl.n	8005a78 <_fwalk_sglue+0x1c>
 8005a6e:	6824      	ldr	r4, [r4, #0]
 8005a70:	2c00      	cmp	r4, #0
 8005a72:	d1f8      	bne.n	8005a66 <_fwalk_sglue+0xa>
 8005a74:	0030      	movs	r0, r6
 8005a76:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005a78:	89ab      	ldrh	r3, [r5, #12]
 8005a7a:	2b01      	cmp	r3, #1
 8005a7c:	d908      	bls.n	8005a90 <_fwalk_sglue+0x34>
 8005a7e:	220e      	movs	r2, #14
 8005a80:	5eab      	ldrsh	r3, [r5, r2]
 8005a82:	3301      	adds	r3, #1
 8005a84:	d004      	beq.n	8005a90 <_fwalk_sglue+0x34>
 8005a86:	0029      	movs	r1, r5
 8005a88:	9800      	ldr	r0, [sp, #0]
 8005a8a:	9b01      	ldr	r3, [sp, #4]
 8005a8c:	4798      	blx	r3
 8005a8e:	4306      	orrs	r6, r0
 8005a90:	3568      	adds	r5, #104	@ 0x68
 8005a92:	e7ea      	b.n	8005a6a <_fwalk_sglue+0xe>

08005a94 <iprintf>:
 8005a94:	b40f      	push	{r0, r1, r2, r3}
 8005a96:	b507      	push	{r0, r1, r2, lr}
 8005a98:	4905      	ldr	r1, [pc, #20]	@ (8005ab0 <iprintf+0x1c>)
 8005a9a:	ab04      	add	r3, sp, #16
 8005a9c:	6808      	ldr	r0, [r1, #0]
 8005a9e:	cb04      	ldmia	r3!, {r2}
 8005aa0:	6881      	ldr	r1, [r0, #8]
 8005aa2:	9301      	str	r3, [sp, #4]
 8005aa4:	f002 fe4a 	bl	800873c <_vfiprintf_r>
 8005aa8:	b003      	add	sp, #12
 8005aaa:	bc08      	pop	{r3}
 8005aac:	b004      	add	sp, #16
 8005aae:	4718      	bx	r3
 8005ab0:	2000001c 	.word	0x2000001c

08005ab4 <putchar>:
 8005ab4:	b510      	push	{r4, lr}
 8005ab6:	4b03      	ldr	r3, [pc, #12]	@ (8005ac4 <putchar+0x10>)
 8005ab8:	0001      	movs	r1, r0
 8005aba:	6818      	ldr	r0, [r3, #0]
 8005abc:	6882      	ldr	r2, [r0, #8]
 8005abe:	f003 fb78 	bl	80091b2 <_putc_r>
 8005ac2:	bd10      	pop	{r4, pc}
 8005ac4:	2000001c 	.word	0x2000001c

08005ac8 <iscanf>:
 8005ac8:	b40f      	push	{r0, r1, r2, r3}
 8005aca:	b507      	push	{r0, r1, r2, lr}
 8005acc:	4905      	ldr	r1, [pc, #20]	@ (8005ae4 <iscanf+0x1c>)
 8005ace:	ab04      	add	r3, sp, #16
 8005ad0:	6808      	ldr	r0, [r1, #0]
 8005ad2:	cb04      	ldmia	r3!, {r2}
 8005ad4:	6841      	ldr	r1, [r0, #4]
 8005ad6:	9301      	str	r3, [sp, #4]
 8005ad8:	f003 f8da 	bl	8008c90 <_vfiscanf_r>
 8005adc:	b003      	add	sp, #12
 8005ade:	bc08      	pop	{r3}
 8005ae0:	b004      	add	sp, #16
 8005ae2:	4718      	bx	r3
 8005ae4:	2000001c 	.word	0x2000001c

08005ae8 <setvbuf>:
 8005ae8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005aea:	001d      	movs	r5, r3
 8005aec:	4b57      	ldr	r3, [pc, #348]	@ (8005c4c <setvbuf+0x164>)
 8005aee:	b085      	sub	sp, #20
 8005af0:	681e      	ldr	r6, [r3, #0]
 8005af2:	0004      	movs	r4, r0
 8005af4:	000f      	movs	r7, r1
 8005af6:	9200      	str	r2, [sp, #0]
 8005af8:	2e00      	cmp	r6, #0
 8005afa:	d005      	beq.n	8005b08 <setvbuf+0x20>
 8005afc:	6a33      	ldr	r3, [r6, #32]
 8005afe:	2b00      	cmp	r3, #0
 8005b00:	d102      	bne.n	8005b08 <setvbuf+0x20>
 8005b02:	0030      	movs	r0, r6
 8005b04:	f7ff ff92 	bl	8005a2c <__sinit>
 8005b08:	9b00      	ldr	r3, [sp, #0]
 8005b0a:	2b02      	cmp	r3, #2
 8005b0c:	d005      	beq.n	8005b1a <setvbuf+0x32>
 8005b0e:	2b01      	cmp	r3, #1
 8005b10:	d900      	bls.n	8005b14 <setvbuf+0x2c>
 8005b12:	e097      	b.n	8005c44 <setvbuf+0x15c>
 8005b14:	2d00      	cmp	r5, #0
 8005b16:	da00      	bge.n	8005b1a <setvbuf+0x32>
 8005b18:	e094      	b.n	8005c44 <setvbuf+0x15c>
 8005b1a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005b1c:	07db      	lsls	r3, r3, #31
 8005b1e:	d405      	bmi.n	8005b2c <setvbuf+0x44>
 8005b20:	89a3      	ldrh	r3, [r4, #12]
 8005b22:	059b      	lsls	r3, r3, #22
 8005b24:	d402      	bmi.n	8005b2c <setvbuf+0x44>
 8005b26:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005b28:	f000 f987 	bl	8005e3a <__retarget_lock_acquire_recursive>
 8005b2c:	0021      	movs	r1, r4
 8005b2e:	0030      	movs	r0, r6
 8005b30:	f003 faa8 	bl	8009084 <_fflush_r>
 8005b34:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8005b36:	2900      	cmp	r1, #0
 8005b38:	d008      	beq.n	8005b4c <setvbuf+0x64>
 8005b3a:	0023      	movs	r3, r4
 8005b3c:	3344      	adds	r3, #68	@ 0x44
 8005b3e:	4299      	cmp	r1, r3
 8005b40:	d002      	beq.n	8005b48 <setvbuf+0x60>
 8005b42:	0030      	movs	r0, r6
 8005b44:	f001 f800 	bl	8006b48 <_free_r>
 8005b48:	2300      	movs	r3, #0
 8005b4a:	6363      	str	r3, [r4, #52]	@ 0x34
 8005b4c:	2300      	movs	r3, #0
 8005b4e:	61a3      	str	r3, [r4, #24]
 8005b50:	6063      	str	r3, [r4, #4]
 8005b52:	89a3      	ldrh	r3, [r4, #12]
 8005b54:	061b      	lsls	r3, r3, #24
 8005b56:	d503      	bpl.n	8005b60 <setvbuf+0x78>
 8005b58:	0030      	movs	r0, r6
 8005b5a:	6921      	ldr	r1, [r4, #16]
 8005b5c:	f000 fff4 	bl	8006b48 <_free_r>
 8005b60:	89a3      	ldrh	r3, [r4, #12]
 8005b62:	4a3b      	ldr	r2, [pc, #236]	@ (8005c50 <setvbuf+0x168>)
 8005b64:	4013      	ands	r3, r2
 8005b66:	81a3      	strh	r3, [r4, #12]
 8005b68:	9b00      	ldr	r3, [sp, #0]
 8005b6a:	2b02      	cmp	r3, #2
 8005b6c:	d060      	beq.n	8005c30 <setvbuf+0x148>
 8005b6e:	ab03      	add	r3, sp, #12
 8005b70:	0021      	movs	r1, r4
 8005b72:	0030      	movs	r0, r6
 8005b74:	aa02      	add	r2, sp, #8
 8005b76:	f003 fab1 	bl	80090dc <__swhatbuf_r>
 8005b7a:	89a3      	ldrh	r3, [r4, #12]
 8005b7c:	4303      	orrs	r3, r0
 8005b7e:	81a3      	strh	r3, [r4, #12]
 8005b80:	2d00      	cmp	r5, #0
 8005b82:	d124      	bne.n	8005bce <setvbuf+0xe6>
 8005b84:	9d02      	ldr	r5, [sp, #8]
 8005b86:	0028      	movs	r0, r5
 8005b88:	f001 f828 	bl	8006bdc <malloc>
 8005b8c:	9501      	str	r5, [sp, #4]
 8005b8e:	1e07      	subs	r7, r0, #0
 8005b90:	d148      	bne.n	8005c24 <setvbuf+0x13c>
 8005b92:	9b02      	ldr	r3, [sp, #8]
 8005b94:	9301      	str	r3, [sp, #4]
 8005b96:	42ab      	cmp	r3, r5
 8005b98:	d13f      	bne.n	8005c1a <setvbuf+0x132>
 8005b9a:	2501      	movs	r5, #1
 8005b9c:	426d      	negs	r5, r5
 8005b9e:	220c      	movs	r2, #12
 8005ba0:	5ea3      	ldrsh	r3, [r4, r2]
 8005ba2:	2202      	movs	r2, #2
 8005ba4:	431a      	orrs	r2, r3
 8005ba6:	81a2      	strh	r2, [r4, #12]
 8005ba8:	2200      	movs	r2, #0
 8005baa:	60a2      	str	r2, [r4, #8]
 8005bac:	0022      	movs	r2, r4
 8005bae:	3247      	adds	r2, #71	@ 0x47
 8005bb0:	6022      	str	r2, [r4, #0]
 8005bb2:	6122      	str	r2, [r4, #16]
 8005bb4:	2201      	movs	r2, #1
 8005bb6:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 8005bb8:	6162      	str	r2, [r4, #20]
 8005bba:	4211      	tst	r1, r2
 8005bbc:	d104      	bne.n	8005bc8 <setvbuf+0xe0>
 8005bbe:	059b      	lsls	r3, r3, #22
 8005bc0:	d402      	bmi.n	8005bc8 <setvbuf+0xe0>
 8005bc2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005bc4:	f000 f93a 	bl	8005e3c <__retarget_lock_release_recursive>
 8005bc8:	0028      	movs	r0, r5
 8005bca:	b005      	add	sp, #20
 8005bcc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005bce:	2f00      	cmp	r7, #0
 8005bd0:	d0d9      	beq.n	8005b86 <setvbuf+0x9e>
 8005bd2:	6a33      	ldr	r3, [r6, #32]
 8005bd4:	2b00      	cmp	r3, #0
 8005bd6:	d102      	bne.n	8005bde <setvbuf+0xf6>
 8005bd8:	0030      	movs	r0, r6
 8005bda:	f7ff ff27 	bl	8005a2c <__sinit>
 8005bde:	9b00      	ldr	r3, [sp, #0]
 8005be0:	2b01      	cmp	r3, #1
 8005be2:	d103      	bne.n	8005bec <setvbuf+0x104>
 8005be4:	89a3      	ldrh	r3, [r4, #12]
 8005be6:	9a00      	ldr	r2, [sp, #0]
 8005be8:	431a      	orrs	r2, r3
 8005bea:	81a2      	strh	r2, [r4, #12]
 8005bec:	220c      	movs	r2, #12
 8005bee:	5ea3      	ldrsh	r3, [r4, r2]
 8005bf0:	2208      	movs	r2, #8
 8005bf2:	0019      	movs	r1, r3
 8005bf4:	6027      	str	r7, [r4, #0]
 8005bf6:	6127      	str	r7, [r4, #16]
 8005bf8:	6165      	str	r5, [r4, #20]
 8005bfa:	4011      	ands	r1, r2
 8005bfc:	4213      	tst	r3, r2
 8005bfe:	d01b      	beq.n	8005c38 <setvbuf+0x150>
 8005c00:	07da      	lsls	r2, r3, #31
 8005c02:	d517      	bpl.n	8005c34 <setvbuf+0x14c>
 8005c04:	2200      	movs	r2, #0
 8005c06:	426d      	negs	r5, r5
 8005c08:	60a2      	str	r2, [r4, #8]
 8005c0a:	61a5      	str	r5, [r4, #24]
 8005c0c:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8005c0e:	07d2      	lsls	r2, r2, #31
 8005c10:	d401      	bmi.n	8005c16 <setvbuf+0x12e>
 8005c12:	059b      	lsls	r3, r3, #22
 8005c14:	d512      	bpl.n	8005c3c <setvbuf+0x154>
 8005c16:	2500      	movs	r5, #0
 8005c18:	e7d6      	b.n	8005bc8 <setvbuf+0xe0>
 8005c1a:	9801      	ldr	r0, [sp, #4]
 8005c1c:	f000 ffde 	bl	8006bdc <malloc>
 8005c20:	1e07      	subs	r7, r0, #0
 8005c22:	d0ba      	beq.n	8005b9a <setvbuf+0xb2>
 8005c24:	2380      	movs	r3, #128	@ 0x80
 8005c26:	89a2      	ldrh	r2, [r4, #12]
 8005c28:	9d01      	ldr	r5, [sp, #4]
 8005c2a:	4313      	orrs	r3, r2
 8005c2c:	81a3      	strh	r3, [r4, #12]
 8005c2e:	e7d0      	b.n	8005bd2 <setvbuf+0xea>
 8005c30:	2500      	movs	r5, #0
 8005c32:	e7b4      	b.n	8005b9e <setvbuf+0xb6>
 8005c34:	60a5      	str	r5, [r4, #8]
 8005c36:	e7e9      	b.n	8005c0c <setvbuf+0x124>
 8005c38:	60a1      	str	r1, [r4, #8]
 8005c3a:	e7e7      	b.n	8005c0c <setvbuf+0x124>
 8005c3c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005c3e:	f000 f8fd 	bl	8005e3c <__retarget_lock_release_recursive>
 8005c42:	e7e8      	b.n	8005c16 <setvbuf+0x12e>
 8005c44:	2501      	movs	r5, #1
 8005c46:	426d      	negs	r5, r5
 8005c48:	e7be      	b.n	8005bc8 <setvbuf+0xe0>
 8005c4a:	46c0      	nop			@ (mov r8, r8)
 8005c4c:	2000001c 	.word	0x2000001c
 8005c50:	fffff35c 	.word	0xfffff35c

08005c54 <siprintf>:
 8005c54:	b40e      	push	{r1, r2, r3}
 8005c56:	b510      	push	{r4, lr}
 8005c58:	2400      	movs	r4, #0
 8005c5a:	490c      	ldr	r1, [pc, #48]	@ (8005c8c <siprintf+0x38>)
 8005c5c:	b09d      	sub	sp, #116	@ 0x74
 8005c5e:	ab1f      	add	r3, sp, #124	@ 0x7c
 8005c60:	9002      	str	r0, [sp, #8]
 8005c62:	9006      	str	r0, [sp, #24]
 8005c64:	9107      	str	r1, [sp, #28]
 8005c66:	9104      	str	r1, [sp, #16]
 8005c68:	4809      	ldr	r0, [pc, #36]	@ (8005c90 <siprintf+0x3c>)
 8005c6a:	490a      	ldr	r1, [pc, #40]	@ (8005c94 <siprintf+0x40>)
 8005c6c:	cb04      	ldmia	r3!, {r2}
 8005c6e:	9105      	str	r1, [sp, #20]
 8005c70:	6800      	ldr	r0, [r0, #0]
 8005c72:	a902      	add	r1, sp, #8
 8005c74:	9301      	str	r3, [sp, #4]
 8005c76:	941b      	str	r4, [sp, #108]	@ 0x6c
 8005c78:	f002 fc3a 	bl	80084f0 <_svfiprintf_r>
 8005c7c:	9b02      	ldr	r3, [sp, #8]
 8005c7e:	701c      	strb	r4, [r3, #0]
 8005c80:	b01d      	add	sp, #116	@ 0x74
 8005c82:	bc10      	pop	{r4}
 8005c84:	bc08      	pop	{r3}
 8005c86:	b003      	add	sp, #12
 8005c88:	4718      	bx	r3
 8005c8a:	46c0      	nop			@ (mov r8, r8)
 8005c8c:	7fffffff 	.word	0x7fffffff
 8005c90:	2000001c 	.word	0x2000001c
 8005c94:	ffff0208 	.word	0xffff0208

08005c98 <__sread>:
 8005c98:	b570      	push	{r4, r5, r6, lr}
 8005c9a:	000c      	movs	r4, r1
 8005c9c:	250e      	movs	r5, #14
 8005c9e:	5f49      	ldrsh	r1, [r1, r5]
 8005ca0:	f000 f878 	bl	8005d94 <_read_r>
 8005ca4:	2800      	cmp	r0, #0
 8005ca6:	db03      	blt.n	8005cb0 <__sread+0x18>
 8005ca8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005caa:	181b      	adds	r3, r3, r0
 8005cac:	6563      	str	r3, [r4, #84]	@ 0x54
 8005cae:	bd70      	pop	{r4, r5, r6, pc}
 8005cb0:	89a3      	ldrh	r3, [r4, #12]
 8005cb2:	4a02      	ldr	r2, [pc, #8]	@ (8005cbc <__sread+0x24>)
 8005cb4:	4013      	ands	r3, r2
 8005cb6:	81a3      	strh	r3, [r4, #12]
 8005cb8:	e7f9      	b.n	8005cae <__sread+0x16>
 8005cba:	46c0      	nop			@ (mov r8, r8)
 8005cbc:	ffffefff 	.word	0xffffefff

08005cc0 <__swrite>:
 8005cc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005cc2:	001f      	movs	r7, r3
 8005cc4:	898b      	ldrh	r3, [r1, #12]
 8005cc6:	0005      	movs	r5, r0
 8005cc8:	000c      	movs	r4, r1
 8005cca:	0016      	movs	r6, r2
 8005ccc:	05db      	lsls	r3, r3, #23
 8005cce:	d505      	bpl.n	8005cdc <__swrite+0x1c>
 8005cd0:	230e      	movs	r3, #14
 8005cd2:	5ec9      	ldrsh	r1, [r1, r3]
 8005cd4:	2200      	movs	r2, #0
 8005cd6:	2302      	movs	r3, #2
 8005cd8:	f000 f848 	bl	8005d6c <_lseek_r>
 8005cdc:	89a3      	ldrh	r3, [r4, #12]
 8005cde:	4a05      	ldr	r2, [pc, #20]	@ (8005cf4 <__swrite+0x34>)
 8005ce0:	0028      	movs	r0, r5
 8005ce2:	4013      	ands	r3, r2
 8005ce4:	81a3      	strh	r3, [r4, #12]
 8005ce6:	0032      	movs	r2, r6
 8005ce8:	230e      	movs	r3, #14
 8005cea:	5ee1      	ldrsh	r1, [r4, r3]
 8005cec:	003b      	movs	r3, r7
 8005cee:	f000 f865 	bl	8005dbc <_write_r>
 8005cf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005cf4:	ffffefff 	.word	0xffffefff

08005cf8 <__sseek>:
 8005cf8:	b570      	push	{r4, r5, r6, lr}
 8005cfa:	000c      	movs	r4, r1
 8005cfc:	250e      	movs	r5, #14
 8005cfe:	5f49      	ldrsh	r1, [r1, r5]
 8005d00:	f000 f834 	bl	8005d6c <_lseek_r>
 8005d04:	89a3      	ldrh	r3, [r4, #12]
 8005d06:	1c42      	adds	r2, r0, #1
 8005d08:	d103      	bne.n	8005d12 <__sseek+0x1a>
 8005d0a:	4a05      	ldr	r2, [pc, #20]	@ (8005d20 <__sseek+0x28>)
 8005d0c:	4013      	ands	r3, r2
 8005d0e:	81a3      	strh	r3, [r4, #12]
 8005d10:	bd70      	pop	{r4, r5, r6, pc}
 8005d12:	2280      	movs	r2, #128	@ 0x80
 8005d14:	0152      	lsls	r2, r2, #5
 8005d16:	4313      	orrs	r3, r2
 8005d18:	81a3      	strh	r3, [r4, #12]
 8005d1a:	6560      	str	r0, [r4, #84]	@ 0x54
 8005d1c:	e7f8      	b.n	8005d10 <__sseek+0x18>
 8005d1e:	46c0      	nop			@ (mov r8, r8)
 8005d20:	ffffefff 	.word	0xffffefff

08005d24 <__sclose>:
 8005d24:	b510      	push	{r4, lr}
 8005d26:	230e      	movs	r3, #14
 8005d28:	5ec9      	ldrsh	r1, [r1, r3]
 8005d2a:	f000 f80d 	bl	8005d48 <_close_r>
 8005d2e:	bd10      	pop	{r4, pc}

08005d30 <memset>:
 8005d30:	0003      	movs	r3, r0
 8005d32:	1882      	adds	r2, r0, r2
 8005d34:	4293      	cmp	r3, r2
 8005d36:	d100      	bne.n	8005d3a <memset+0xa>
 8005d38:	4770      	bx	lr
 8005d3a:	7019      	strb	r1, [r3, #0]
 8005d3c:	3301      	adds	r3, #1
 8005d3e:	e7f9      	b.n	8005d34 <memset+0x4>

08005d40 <_localeconv_r>:
 8005d40:	4800      	ldr	r0, [pc, #0]	@ (8005d44 <_localeconv_r+0x4>)
 8005d42:	4770      	bx	lr
 8005d44:	2000015c 	.word	0x2000015c

08005d48 <_close_r>:
 8005d48:	2300      	movs	r3, #0
 8005d4a:	b570      	push	{r4, r5, r6, lr}
 8005d4c:	4d06      	ldr	r5, [pc, #24]	@ (8005d68 <_close_r+0x20>)
 8005d4e:	0004      	movs	r4, r0
 8005d50:	0008      	movs	r0, r1
 8005d52:	602b      	str	r3, [r5, #0]
 8005d54:	f7fc ffcc 	bl	8002cf0 <_close>
 8005d58:	1c43      	adds	r3, r0, #1
 8005d5a:	d103      	bne.n	8005d64 <_close_r+0x1c>
 8005d5c:	682b      	ldr	r3, [r5, #0]
 8005d5e:	2b00      	cmp	r3, #0
 8005d60:	d000      	beq.n	8005d64 <_close_r+0x1c>
 8005d62:	6023      	str	r3, [r4, #0]
 8005d64:	bd70      	pop	{r4, r5, r6, pc}
 8005d66:	46c0      	nop			@ (mov r8, r8)
 8005d68:	200003ec 	.word	0x200003ec

08005d6c <_lseek_r>:
 8005d6c:	b570      	push	{r4, r5, r6, lr}
 8005d6e:	0004      	movs	r4, r0
 8005d70:	0008      	movs	r0, r1
 8005d72:	0011      	movs	r1, r2
 8005d74:	001a      	movs	r2, r3
 8005d76:	2300      	movs	r3, #0
 8005d78:	4d05      	ldr	r5, [pc, #20]	@ (8005d90 <_lseek_r+0x24>)
 8005d7a:	602b      	str	r3, [r5, #0]
 8005d7c:	f7fc ffd9 	bl	8002d32 <_lseek>
 8005d80:	1c43      	adds	r3, r0, #1
 8005d82:	d103      	bne.n	8005d8c <_lseek_r+0x20>
 8005d84:	682b      	ldr	r3, [r5, #0]
 8005d86:	2b00      	cmp	r3, #0
 8005d88:	d000      	beq.n	8005d8c <_lseek_r+0x20>
 8005d8a:	6023      	str	r3, [r4, #0]
 8005d8c:	bd70      	pop	{r4, r5, r6, pc}
 8005d8e:	46c0      	nop			@ (mov r8, r8)
 8005d90:	200003ec 	.word	0x200003ec

08005d94 <_read_r>:
 8005d94:	b570      	push	{r4, r5, r6, lr}
 8005d96:	0004      	movs	r4, r0
 8005d98:	0008      	movs	r0, r1
 8005d9a:	0011      	movs	r1, r2
 8005d9c:	001a      	movs	r2, r3
 8005d9e:	2300      	movs	r3, #0
 8005da0:	4d05      	ldr	r5, [pc, #20]	@ (8005db8 <_read_r+0x24>)
 8005da2:	602b      	str	r3, [r5, #0]
 8005da4:	f7fc ff6b 	bl	8002c7e <_read>
 8005da8:	1c43      	adds	r3, r0, #1
 8005daa:	d103      	bne.n	8005db4 <_read_r+0x20>
 8005dac:	682b      	ldr	r3, [r5, #0]
 8005dae:	2b00      	cmp	r3, #0
 8005db0:	d000      	beq.n	8005db4 <_read_r+0x20>
 8005db2:	6023      	str	r3, [r4, #0]
 8005db4:	bd70      	pop	{r4, r5, r6, pc}
 8005db6:	46c0      	nop			@ (mov r8, r8)
 8005db8:	200003ec 	.word	0x200003ec

08005dbc <_write_r>:
 8005dbc:	b570      	push	{r4, r5, r6, lr}
 8005dbe:	0004      	movs	r4, r0
 8005dc0:	0008      	movs	r0, r1
 8005dc2:	0011      	movs	r1, r2
 8005dc4:	001a      	movs	r2, r3
 8005dc6:	2300      	movs	r3, #0
 8005dc8:	4d05      	ldr	r5, [pc, #20]	@ (8005de0 <_write_r+0x24>)
 8005dca:	602b      	str	r3, [r5, #0]
 8005dcc:	f7fc ff74 	bl	8002cb8 <_write>
 8005dd0:	1c43      	adds	r3, r0, #1
 8005dd2:	d103      	bne.n	8005ddc <_write_r+0x20>
 8005dd4:	682b      	ldr	r3, [r5, #0]
 8005dd6:	2b00      	cmp	r3, #0
 8005dd8:	d000      	beq.n	8005ddc <_write_r+0x20>
 8005dda:	6023      	str	r3, [r4, #0]
 8005ddc:	bd70      	pop	{r4, r5, r6, pc}
 8005dde:	46c0      	nop			@ (mov r8, r8)
 8005de0:	200003ec 	.word	0x200003ec

08005de4 <__errno>:
 8005de4:	4b01      	ldr	r3, [pc, #4]	@ (8005dec <__errno+0x8>)
 8005de6:	6818      	ldr	r0, [r3, #0]
 8005de8:	4770      	bx	lr
 8005dea:	46c0      	nop			@ (mov r8, r8)
 8005dec:	2000001c 	.word	0x2000001c

08005df0 <__libc_init_array>:
 8005df0:	b570      	push	{r4, r5, r6, lr}
 8005df2:	2600      	movs	r6, #0
 8005df4:	4c0c      	ldr	r4, [pc, #48]	@ (8005e28 <__libc_init_array+0x38>)
 8005df6:	4d0d      	ldr	r5, [pc, #52]	@ (8005e2c <__libc_init_array+0x3c>)
 8005df8:	1b64      	subs	r4, r4, r5
 8005dfa:	10a4      	asrs	r4, r4, #2
 8005dfc:	42a6      	cmp	r6, r4
 8005dfe:	d109      	bne.n	8005e14 <__libc_init_array+0x24>
 8005e00:	2600      	movs	r6, #0
 8005e02:	f004 f97b 	bl	800a0fc <_init>
 8005e06:	4c0a      	ldr	r4, [pc, #40]	@ (8005e30 <__libc_init_array+0x40>)
 8005e08:	4d0a      	ldr	r5, [pc, #40]	@ (8005e34 <__libc_init_array+0x44>)
 8005e0a:	1b64      	subs	r4, r4, r5
 8005e0c:	10a4      	asrs	r4, r4, #2
 8005e0e:	42a6      	cmp	r6, r4
 8005e10:	d105      	bne.n	8005e1e <__libc_init_array+0x2e>
 8005e12:	bd70      	pop	{r4, r5, r6, pc}
 8005e14:	00b3      	lsls	r3, r6, #2
 8005e16:	58eb      	ldr	r3, [r5, r3]
 8005e18:	4798      	blx	r3
 8005e1a:	3601      	adds	r6, #1
 8005e1c:	e7ee      	b.n	8005dfc <__libc_init_array+0xc>
 8005e1e:	00b3      	lsls	r3, r6, #2
 8005e20:	58eb      	ldr	r3, [r5, r3]
 8005e22:	4798      	blx	r3
 8005e24:	3601      	adds	r6, #1
 8005e26:	e7f2      	b.n	8005e0e <__libc_init_array+0x1e>
 8005e28:	0800a714 	.word	0x0800a714
 8005e2c:	0800a714 	.word	0x0800a714
 8005e30:	0800a718 	.word	0x0800a718
 8005e34:	0800a714 	.word	0x0800a714

08005e38 <__retarget_lock_init_recursive>:
 8005e38:	4770      	bx	lr

08005e3a <__retarget_lock_acquire_recursive>:
 8005e3a:	4770      	bx	lr

08005e3c <__retarget_lock_release_recursive>:
 8005e3c:	4770      	bx	lr

08005e3e <memchr>:
 8005e3e:	b2c9      	uxtb	r1, r1
 8005e40:	1882      	adds	r2, r0, r2
 8005e42:	4290      	cmp	r0, r2
 8005e44:	d101      	bne.n	8005e4a <memchr+0xc>
 8005e46:	2000      	movs	r0, #0
 8005e48:	4770      	bx	lr
 8005e4a:	7803      	ldrb	r3, [r0, #0]
 8005e4c:	428b      	cmp	r3, r1
 8005e4e:	d0fb      	beq.n	8005e48 <memchr+0xa>
 8005e50:	3001      	adds	r0, #1
 8005e52:	e7f6      	b.n	8005e42 <memchr+0x4>

08005e54 <nanf>:
 8005e54:	4800      	ldr	r0, [pc, #0]	@ (8005e58 <nanf+0x4>)
 8005e56:	4770      	bx	lr
 8005e58:	7fc00000 	.word	0x7fc00000

08005e5c <quorem>:
 8005e5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e5e:	6903      	ldr	r3, [r0, #16]
 8005e60:	690c      	ldr	r4, [r1, #16]
 8005e62:	b089      	sub	sp, #36	@ 0x24
 8005e64:	9003      	str	r0, [sp, #12]
 8005e66:	9106      	str	r1, [sp, #24]
 8005e68:	2000      	movs	r0, #0
 8005e6a:	42a3      	cmp	r3, r4
 8005e6c:	db63      	blt.n	8005f36 <quorem+0xda>
 8005e6e:	000b      	movs	r3, r1
 8005e70:	3c01      	subs	r4, #1
 8005e72:	3314      	adds	r3, #20
 8005e74:	00a5      	lsls	r5, r4, #2
 8005e76:	9304      	str	r3, [sp, #16]
 8005e78:	195b      	adds	r3, r3, r5
 8005e7a:	9305      	str	r3, [sp, #20]
 8005e7c:	9b03      	ldr	r3, [sp, #12]
 8005e7e:	3314      	adds	r3, #20
 8005e80:	9301      	str	r3, [sp, #4]
 8005e82:	195d      	adds	r5, r3, r5
 8005e84:	9b05      	ldr	r3, [sp, #20]
 8005e86:	682f      	ldr	r7, [r5, #0]
 8005e88:	681e      	ldr	r6, [r3, #0]
 8005e8a:	0038      	movs	r0, r7
 8005e8c:	3601      	adds	r6, #1
 8005e8e:	0031      	movs	r1, r6
 8005e90:	f7fa f956 	bl	8000140 <__udivsi3>
 8005e94:	9002      	str	r0, [sp, #8]
 8005e96:	42b7      	cmp	r7, r6
 8005e98:	d327      	bcc.n	8005eea <quorem+0x8e>
 8005e9a:	9b04      	ldr	r3, [sp, #16]
 8005e9c:	2700      	movs	r7, #0
 8005e9e:	469c      	mov	ip, r3
 8005ea0:	9e01      	ldr	r6, [sp, #4]
 8005ea2:	9707      	str	r7, [sp, #28]
 8005ea4:	4662      	mov	r2, ip
 8005ea6:	ca08      	ldmia	r2!, {r3}
 8005ea8:	6830      	ldr	r0, [r6, #0]
 8005eaa:	4694      	mov	ip, r2
 8005eac:	9a02      	ldr	r2, [sp, #8]
 8005eae:	b299      	uxth	r1, r3
 8005eb0:	4351      	muls	r1, r2
 8005eb2:	0c1b      	lsrs	r3, r3, #16
 8005eb4:	4353      	muls	r3, r2
 8005eb6:	19c9      	adds	r1, r1, r7
 8005eb8:	0c0a      	lsrs	r2, r1, #16
 8005eba:	189b      	adds	r3, r3, r2
 8005ebc:	b289      	uxth	r1, r1
 8005ebe:	b282      	uxth	r2, r0
 8005ec0:	1a52      	subs	r2, r2, r1
 8005ec2:	9907      	ldr	r1, [sp, #28]
 8005ec4:	0c1f      	lsrs	r7, r3, #16
 8005ec6:	1852      	adds	r2, r2, r1
 8005ec8:	0c00      	lsrs	r0, r0, #16
 8005eca:	b29b      	uxth	r3, r3
 8005ecc:	1411      	asrs	r1, r2, #16
 8005ece:	1ac3      	subs	r3, r0, r3
 8005ed0:	185b      	adds	r3, r3, r1
 8005ed2:	1419      	asrs	r1, r3, #16
 8005ed4:	b292      	uxth	r2, r2
 8005ed6:	041b      	lsls	r3, r3, #16
 8005ed8:	431a      	orrs	r2, r3
 8005eda:	9b05      	ldr	r3, [sp, #20]
 8005edc:	9107      	str	r1, [sp, #28]
 8005ede:	c604      	stmia	r6!, {r2}
 8005ee0:	4563      	cmp	r3, ip
 8005ee2:	d2df      	bcs.n	8005ea4 <quorem+0x48>
 8005ee4:	682b      	ldr	r3, [r5, #0]
 8005ee6:	2b00      	cmp	r3, #0
 8005ee8:	d02b      	beq.n	8005f42 <quorem+0xe6>
 8005eea:	9906      	ldr	r1, [sp, #24]
 8005eec:	9803      	ldr	r0, [sp, #12]
 8005eee:	f001 fa03 	bl	80072f8 <__mcmp>
 8005ef2:	2800      	cmp	r0, #0
 8005ef4:	db1e      	blt.n	8005f34 <quorem+0xd8>
 8005ef6:	2600      	movs	r6, #0
 8005ef8:	9d01      	ldr	r5, [sp, #4]
 8005efa:	9904      	ldr	r1, [sp, #16]
 8005efc:	c901      	ldmia	r1!, {r0}
 8005efe:	682b      	ldr	r3, [r5, #0]
 8005f00:	b287      	uxth	r7, r0
 8005f02:	b29a      	uxth	r2, r3
 8005f04:	1bd2      	subs	r2, r2, r7
 8005f06:	1992      	adds	r2, r2, r6
 8005f08:	0c00      	lsrs	r0, r0, #16
 8005f0a:	0c1b      	lsrs	r3, r3, #16
 8005f0c:	1a1b      	subs	r3, r3, r0
 8005f0e:	1410      	asrs	r0, r2, #16
 8005f10:	181b      	adds	r3, r3, r0
 8005f12:	141e      	asrs	r6, r3, #16
 8005f14:	b292      	uxth	r2, r2
 8005f16:	041b      	lsls	r3, r3, #16
 8005f18:	431a      	orrs	r2, r3
 8005f1a:	9b05      	ldr	r3, [sp, #20]
 8005f1c:	c504      	stmia	r5!, {r2}
 8005f1e:	428b      	cmp	r3, r1
 8005f20:	d2ec      	bcs.n	8005efc <quorem+0xa0>
 8005f22:	9a01      	ldr	r2, [sp, #4]
 8005f24:	00a3      	lsls	r3, r4, #2
 8005f26:	18d3      	adds	r3, r2, r3
 8005f28:	681a      	ldr	r2, [r3, #0]
 8005f2a:	2a00      	cmp	r2, #0
 8005f2c:	d014      	beq.n	8005f58 <quorem+0xfc>
 8005f2e:	9b02      	ldr	r3, [sp, #8]
 8005f30:	3301      	adds	r3, #1
 8005f32:	9302      	str	r3, [sp, #8]
 8005f34:	9802      	ldr	r0, [sp, #8]
 8005f36:	b009      	add	sp, #36	@ 0x24
 8005f38:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005f3a:	682b      	ldr	r3, [r5, #0]
 8005f3c:	2b00      	cmp	r3, #0
 8005f3e:	d104      	bne.n	8005f4a <quorem+0xee>
 8005f40:	3c01      	subs	r4, #1
 8005f42:	9b01      	ldr	r3, [sp, #4]
 8005f44:	3d04      	subs	r5, #4
 8005f46:	42ab      	cmp	r3, r5
 8005f48:	d3f7      	bcc.n	8005f3a <quorem+0xde>
 8005f4a:	9b03      	ldr	r3, [sp, #12]
 8005f4c:	611c      	str	r4, [r3, #16]
 8005f4e:	e7cc      	b.n	8005eea <quorem+0x8e>
 8005f50:	681a      	ldr	r2, [r3, #0]
 8005f52:	2a00      	cmp	r2, #0
 8005f54:	d104      	bne.n	8005f60 <quorem+0x104>
 8005f56:	3c01      	subs	r4, #1
 8005f58:	9a01      	ldr	r2, [sp, #4]
 8005f5a:	3b04      	subs	r3, #4
 8005f5c:	429a      	cmp	r2, r3
 8005f5e:	d3f7      	bcc.n	8005f50 <quorem+0xf4>
 8005f60:	9b03      	ldr	r3, [sp, #12]
 8005f62:	611c      	str	r4, [r3, #16]
 8005f64:	e7e3      	b.n	8005f2e <quorem+0xd2>
	...

08005f68 <_dtoa_r>:
 8005f68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005f6a:	0014      	movs	r4, r2
 8005f6c:	001d      	movs	r5, r3
 8005f6e:	69c6      	ldr	r6, [r0, #28]
 8005f70:	b09d      	sub	sp, #116	@ 0x74
 8005f72:	940a      	str	r4, [sp, #40]	@ 0x28
 8005f74:	950b      	str	r5, [sp, #44]	@ 0x2c
 8005f76:	9f25      	ldr	r7, [sp, #148]	@ 0x94
 8005f78:	9003      	str	r0, [sp, #12]
 8005f7a:	2e00      	cmp	r6, #0
 8005f7c:	d10f      	bne.n	8005f9e <_dtoa_r+0x36>
 8005f7e:	2010      	movs	r0, #16
 8005f80:	f000 fe2c 	bl	8006bdc <malloc>
 8005f84:	9b03      	ldr	r3, [sp, #12]
 8005f86:	1e02      	subs	r2, r0, #0
 8005f88:	61d8      	str	r0, [r3, #28]
 8005f8a:	d104      	bne.n	8005f96 <_dtoa_r+0x2e>
 8005f8c:	21ef      	movs	r1, #239	@ 0xef
 8005f8e:	4bc7      	ldr	r3, [pc, #796]	@ (80062ac <_dtoa_r+0x344>)
 8005f90:	48c7      	ldr	r0, [pc, #796]	@ (80062b0 <_dtoa_r+0x348>)
 8005f92:	f003 fbcf 	bl	8009734 <__assert_func>
 8005f96:	6046      	str	r6, [r0, #4]
 8005f98:	6086      	str	r6, [r0, #8]
 8005f9a:	6006      	str	r6, [r0, #0]
 8005f9c:	60c6      	str	r6, [r0, #12]
 8005f9e:	9b03      	ldr	r3, [sp, #12]
 8005fa0:	69db      	ldr	r3, [r3, #28]
 8005fa2:	6819      	ldr	r1, [r3, #0]
 8005fa4:	2900      	cmp	r1, #0
 8005fa6:	d00b      	beq.n	8005fc0 <_dtoa_r+0x58>
 8005fa8:	685a      	ldr	r2, [r3, #4]
 8005faa:	2301      	movs	r3, #1
 8005fac:	4093      	lsls	r3, r2
 8005fae:	604a      	str	r2, [r1, #4]
 8005fb0:	608b      	str	r3, [r1, #8]
 8005fb2:	9803      	ldr	r0, [sp, #12]
 8005fb4:	f000 ff12 	bl	8006ddc <_Bfree>
 8005fb8:	2200      	movs	r2, #0
 8005fba:	9b03      	ldr	r3, [sp, #12]
 8005fbc:	69db      	ldr	r3, [r3, #28]
 8005fbe:	601a      	str	r2, [r3, #0]
 8005fc0:	2d00      	cmp	r5, #0
 8005fc2:	da1e      	bge.n	8006002 <_dtoa_r+0x9a>
 8005fc4:	2301      	movs	r3, #1
 8005fc6:	603b      	str	r3, [r7, #0]
 8005fc8:	006b      	lsls	r3, r5, #1
 8005fca:	085b      	lsrs	r3, r3, #1
 8005fcc:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005fce:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8005fd0:	4bb8      	ldr	r3, [pc, #736]	@ (80062b4 <_dtoa_r+0x34c>)
 8005fd2:	4ab8      	ldr	r2, [pc, #736]	@ (80062b4 <_dtoa_r+0x34c>)
 8005fd4:	403b      	ands	r3, r7
 8005fd6:	4293      	cmp	r3, r2
 8005fd8:	d116      	bne.n	8006008 <_dtoa_r+0xa0>
 8005fda:	4bb7      	ldr	r3, [pc, #732]	@ (80062b8 <_dtoa_r+0x350>)
 8005fdc:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8005fde:	6013      	str	r3, [r2, #0]
 8005fe0:	033b      	lsls	r3, r7, #12
 8005fe2:	0b1b      	lsrs	r3, r3, #12
 8005fe4:	4323      	orrs	r3, r4
 8005fe6:	d101      	bne.n	8005fec <_dtoa_r+0x84>
 8005fe8:	f000 fd80 	bl	8006aec <_dtoa_r+0xb84>
 8005fec:	4bb3      	ldr	r3, [pc, #716]	@ (80062bc <_dtoa_r+0x354>)
 8005fee:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8005ff0:	9308      	str	r3, [sp, #32]
 8005ff2:	2a00      	cmp	r2, #0
 8005ff4:	d002      	beq.n	8005ffc <_dtoa_r+0x94>
 8005ff6:	4bb2      	ldr	r3, [pc, #712]	@ (80062c0 <_dtoa_r+0x358>)
 8005ff8:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8005ffa:	6013      	str	r3, [r2, #0]
 8005ffc:	9808      	ldr	r0, [sp, #32]
 8005ffe:	b01d      	add	sp, #116	@ 0x74
 8006000:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006002:	2300      	movs	r3, #0
 8006004:	603b      	str	r3, [r7, #0]
 8006006:	e7e2      	b.n	8005fce <_dtoa_r+0x66>
 8006008:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800600a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800600c:	9212      	str	r2, [sp, #72]	@ 0x48
 800600e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8006010:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8006012:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8006014:	2200      	movs	r2, #0
 8006016:	2300      	movs	r3, #0
 8006018:	f7fa fa18 	bl	800044c <__aeabi_dcmpeq>
 800601c:	1e06      	subs	r6, r0, #0
 800601e:	d00b      	beq.n	8006038 <_dtoa_r+0xd0>
 8006020:	2301      	movs	r3, #1
 8006022:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8006024:	6013      	str	r3, [r2, #0]
 8006026:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8006028:	2b00      	cmp	r3, #0
 800602a:	d002      	beq.n	8006032 <_dtoa_r+0xca>
 800602c:	4ba5      	ldr	r3, [pc, #660]	@ (80062c4 <_dtoa_r+0x35c>)
 800602e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8006030:	6013      	str	r3, [r2, #0]
 8006032:	4ba5      	ldr	r3, [pc, #660]	@ (80062c8 <_dtoa_r+0x360>)
 8006034:	9308      	str	r3, [sp, #32]
 8006036:	e7e1      	b.n	8005ffc <_dtoa_r+0x94>
 8006038:	ab1a      	add	r3, sp, #104	@ 0x68
 800603a:	9301      	str	r3, [sp, #4]
 800603c:	ab1b      	add	r3, sp, #108	@ 0x6c
 800603e:	9300      	str	r3, [sp, #0]
 8006040:	9803      	ldr	r0, [sp, #12]
 8006042:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8006044:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8006046:	f001 fa79 	bl	800753c <__d2b>
 800604a:	007a      	lsls	r2, r7, #1
 800604c:	9005      	str	r0, [sp, #20]
 800604e:	0d52      	lsrs	r2, r2, #21
 8006050:	d100      	bne.n	8006054 <_dtoa_r+0xec>
 8006052:	e07b      	b.n	800614c <_dtoa_r+0x1e4>
 8006054:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8006056:	9618      	str	r6, [sp, #96]	@ 0x60
 8006058:	0319      	lsls	r1, r3, #12
 800605a:	4b9c      	ldr	r3, [pc, #624]	@ (80062cc <_dtoa_r+0x364>)
 800605c:	0b09      	lsrs	r1, r1, #12
 800605e:	430b      	orrs	r3, r1
 8006060:	499b      	ldr	r1, [pc, #620]	@ (80062d0 <_dtoa_r+0x368>)
 8006062:	1857      	adds	r7, r2, r1
 8006064:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8006066:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8006068:	0019      	movs	r1, r3
 800606a:	2200      	movs	r2, #0
 800606c:	4b99      	ldr	r3, [pc, #612]	@ (80062d4 <_dtoa_r+0x36c>)
 800606e:	f7fb fd6f 	bl	8001b50 <__aeabi_dsub>
 8006072:	4a99      	ldr	r2, [pc, #612]	@ (80062d8 <_dtoa_r+0x370>)
 8006074:	4b99      	ldr	r3, [pc, #612]	@ (80062dc <_dtoa_r+0x374>)
 8006076:	f7fb fa85 	bl	8001584 <__aeabi_dmul>
 800607a:	4a99      	ldr	r2, [pc, #612]	@ (80062e0 <_dtoa_r+0x378>)
 800607c:	4b99      	ldr	r3, [pc, #612]	@ (80062e4 <_dtoa_r+0x37c>)
 800607e:	f7fa fa81 	bl	8000584 <__aeabi_dadd>
 8006082:	0004      	movs	r4, r0
 8006084:	0038      	movs	r0, r7
 8006086:	000d      	movs	r5, r1
 8006088:	f7fc f9ca 	bl	8002420 <__aeabi_i2d>
 800608c:	4a96      	ldr	r2, [pc, #600]	@ (80062e8 <_dtoa_r+0x380>)
 800608e:	4b97      	ldr	r3, [pc, #604]	@ (80062ec <_dtoa_r+0x384>)
 8006090:	f7fb fa78 	bl	8001584 <__aeabi_dmul>
 8006094:	0002      	movs	r2, r0
 8006096:	000b      	movs	r3, r1
 8006098:	0020      	movs	r0, r4
 800609a:	0029      	movs	r1, r5
 800609c:	f7fa fa72 	bl	8000584 <__aeabi_dadd>
 80060a0:	0004      	movs	r4, r0
 80060a2:	000d      	movs	r5, r1
 80060a4:	f7fc f980 	bl	80023a8 <__aeabi_d2iz>
 80060a8:	2200      	movs	r2, #0
 80060aa:	9004      	str	r0, [sp, #16]
 80060ac:	2300      	movs	r3, #0
 80060ae:	0020      	movs	r0, r4
 80060b0:	0029      	movs	r1, r5
 80060b2:	f7fa f9d1 	bl	8000458 <__aeabi_dcmplt>
 80060b6:	2800      	cmp	r0, #0
 80060b8:	d00b      	beq.n	80060d2 <_dtoa_r+0x16a>
 80060ba:	9804      	ldr	r0, [sp, #16]
 80060bc:	f7fc f9b0 	bl	8002420 <__aeabi_i2d>
 80060c0:	002b      	movs	r3, r5
 80060c2:	0022      	movs	r2, r4
 80060c4:	f7fa f9c2 	bl	800044c <__aeabi_dcmpeq>
 80060c8:	4243      	negs	r3, r0
 80060ca:	4158      	adcs	r0, r3
 80060cc:	9b04      	ldr	r3, [sp, #16]
 80060ce:	1a1b      	subs	r3, r3, r0
 80060d0:	9304      	str	r3, [sp, #16]
 80060d2:	2301      	movs	r3, #1
 80060d4:	9315      	str	r3, [sp, #84]	@ 0x54
 80060d6:	9b04      	ldr	r3, [sp, #16]
 80060d8:	2b16      	cmp	r3, #22
 80060da:	d810      	bhi.n	80060fe <_dtoa_r+0x196>
 80060dc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80060de:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80060e0:	9a04      	ldr	r2, [sp, #16]
 80060e2:	4b83      	ldr	r3, [pc, #524]	@ (80062f0 <_dtoa_r+0x388>)
 80060e4:	00d2      	lsls	r2, r2, #3
 80060e6:	189b      	adds	r3, r3, r2
 80060e8:	681a      	ldr	r2, [r3, #0]
 80060ea:	685b      	ldr	r3, [r3, #4]
 80060ec:	f7fa f9b4 	bl	8000458 <__aeabi_dcmplt>
 80060f0:	2800      	cmp	r0, #0
 80060f2:	d047      	beq.n	8006184 <_dtoa_r+0x21c>
 80060f4:	9b04      	ldr	r3, [sp, #16]
 80060f6:	3b01      	subs	r3, #1
 80060f8:	9304      	str	r3, [sp, #16]
 80060fa:	2300      	movs	r3, #0
 80060fc:	9315      	str	r3, [sp, #84]	@ 0x54
 80060fe:	2200      	movs	r2, #0
 8006100:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8006102:	9206      	str	r2, [sp, #24]
 8006104:	1bdb      	subs	r3, r3, r7
 8006106:	1e5a      	subs	r2, r3, #1
 8006108:	d53e      	bpl.n	8006188 <_dtoa_r+0x220>
 800610a:	2201      	movs	r2, #1
 800610c:	1ad3      	subs	r3, r2, r3
 800610e:	9306      	str	r3, [sp, #24]
 8006110:	2300      	movs	r3, #0
 8006112:	930d      	str	r3, [sp, #52]	@ 0x34
 8006114:	9b04      	ldr	r3, [sp, #16]
 8006116:	2b00      	cmp	r3, #0
 8006118:	db38      	blt.n	800618c <_dtoa_r+0x224>
 800611a:	9a04      	ldr	r2, [sp, #16]
 800611c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800611e:	4694      	mov	ip, r2
 8006120:	4463      	add	r3, ip
 8006122:	930d      	str	r3, [sp, #52]	@ 0x34
 8006124:	2300      	movs	r3, #0
 8006126:	9214      	str	r2, [sp, #80]	@ 0x50
 8006128:	930f      	str	r3, [sp, #60]	@ 0x3c
 800612a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 800612c:	2401      	movs	r4, #1
 800612e:	2b09      	cmp	r3, #9
 8006130:	d862      	bhi.n	80061f8 <_dtoa_r+0x290>
 8006132:	2b05      	cmp	r3, #5
 8006134:	dd02      	ble.n	800613c <_dtoa_r+0x1d4>
 8006136:	2400      	movs	r4, #0
 8006138:	3b04      	subs	r3, #4
 800613a:	9322      	str	r3, [sp, #136]	@ 0x88
 800613c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 800613e:	1e98      	subs	r0, r3, #2
 8006140:	2803      	cmp	r0, #3
 8006142:	d863      	bhi.n	800620c <_dtoa_r+0x2a4>
 8006144:	f7f9 ffe8 	bl	8000118 <__gnu_thumb1_case_uqi>
 8006148:	2b385654 	.word	0x2b385654
 800614c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 800614e:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 8006150:	18f6      	adds	r6, r6, r3
 8006152:	4b68      	ldr	r3, [pc, #416]	@ (80062f4 <_dtoa_r+0x38c>)
 8006154:	18f2      	adds	r2, r6, r3
 8006156:	2a20      	cmp	r2, #32
 8006158:	dd0f      	ble.n	800617a <_dtoa_r+0x212>
 800615a:	2340      	movs	r3, #64	@ 0x40
 800615c:	1a9b      	subs	r3, r3, r2
 800615e:	409f      	lsls	r7, r3
 8006160:	4b65      	ldr	r3, [pc, #404]	@ (80062f8 <_dtoa_r+0x390>)
 8006162:	0038      	movs	r0, r7
 8006164:	18f3      	adds	r3, r6, r3
 8006166:	40dc      	lsrs	r4, r3
 8006168:	4320      	orrs	r0, r4
 800616a:	f7fc f987 	bl	800247c <__aeabi_ui2d>
 800616e:	2201      	movs	r2, #1
 8006170:	4b62      	ldr	r3, [pc, #392]	@ (80062fc <_dtoa_r+0x394>)
 8006172:	1e77      	subs	r7, r6, #1
 8006174:	18cb      	adds	r3, r1, r3
 8006176:	9218      	str	r2, [sp, #96]	@ 0x60
 8006178:	e776      	b.n	8006068 <_dtoa_r+0x100>
 800617a:	2320      	movs	r3, #32
 800617c:	0020      	movs	r0, r4
 800617e:	1a9b      	subs	r3, r3, r2
 8006180:	4098      	lsls	r0, r3
 8006182:	e7f2      	b.n	800616a <_dtoa_r+0x202>
 8006184:	9015      	str	r0, [sp, #84]	@ 0x54
 8006186:	e7ba      	b.n	80060fe <_dtoa_r+0x196>
 8006188:	920d      	str	r2, [sp, #52]	@ 0x34
 800618a:	e7c3      	b.n	8006114 <_dtoa_r+0x1ac>
 800618c:	9b06      	ldr	r3, [sp, #24]
 800618e:	9a04      	ldr	r2, [sp, #16]
 8006190:	1a9b      	subs	r3, r3, r2
 8006192:	9306      	str	r3, [sp, #24]
 8006194:	4253      	negs	r3, r2
 8006196:	930f      	str	r3, [sp, #60]	@ 0x3c
 8006198:	2300      	movs	r3, #0
 800619a:	9314      	str	r3, [sp, #80]	@ 0x50
 800619c:	e7c5      	b.n	800612a <_dtoa_r+0x1c2>
 800619e:	2301      	movs	r3, #1
 80061a0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80061a2:	9310      	str	r3, [sp, #64]	@ 0x40
 80061a4:	4694      	mov	ip, r2
 80061a6:	9b04      	ldr	r3, [sp, #16]
 80061a8:	4463      	add	r3, ip
 80061aa:	930e      	str	r3, [sp, #56]	@ 0x38
 80061ac:	3301      	adds	r3, #1
 80061ae:	9309      	str	r3, [sp, #36]	@ 0x24
 80061b0:	2b00      	cmp	r3, #0
 80061b2:	dc08      	bgt.n	80061c6 <_dtoa_r+0x25e>
 80061b4:	2301      	movs	r3, #1
 80061b6:	e006      	b.n	80061c6 <_dtoa_r+0x25e>
 80061b8:	2301      	movs	r3, #1
 80061ba:	9310      	str	r3, [sp, #64]	@ 0x40
 80061bc:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80061be:	2b00      	cmp	r3, #0
 80061c0:	dd28      	ble.n	8006214 <_dtoa_r+0x2ac>
 80061c2:	930e      	str	r3, [sp, #56]	@ 0x38
 80061c4:	9309      	str	r3, [sp, #36]	@ 0x24
 80061c6:	9a03      	ldr	r2, [sp, #12]
 80061c8:	2100      	movs	r1, #0
 80061ca:	69d0      	ldr	r0, [r2, #28]
 80061cc:	2204      	movs	r2, #4
 80061ce:	0015      	movs	r5, r2
 80061d0:	3514      	adds	r5, #20
 80061d2:	429d      	cmp	r5, r3
 80061d4:	d923      	bls.n	800621e <_dtoa_r+0x2b6>
 80061d6:	6041      	str	r1, [r0, #4]
 80061d8:	9803      	ldr	r0, [sp, #12]
 80061da:	f000 fdbb 	bl	8006d54 <_Balloc>
 80061de:	9008      	str	r0, [sp, #32]
 80061e0:	2800      	cmp	r0, #0
 80061e2:	d11f      	bne.n	8006224 <_dtoa_r+0x2bc>
 80061e4:	21b0      	movs	r1, #176	@ 0xb0
 80061e6:	4b46      	ldr	r3, [pc, #280]	@ (8006300 <_dtoa_r+0x398>)
 80061e8:	4831      	ldr	r0, [pc, #196]	@ (80062b0 <_dtoa_r+0x348>)
 80061ea:	9a08      	ldr	r2, [sp, #32]
 80061ec:	31ff      	adds	r1, #255	@ 0xff
 80061ee:	e6d0      	b.n	8005f92 <_dtoa_r+0x2a>
 80061f0:	2300      	movs	r3, #0
 80061f2:	e7e2      	b.n	80061ba <_dtoa_r+0x252>
 80061f4:	2300      	movs	r3, #0
 80061f6:	e7d3      	b.n	80061a0 <_dtoa_r+0x238>
 80061f8:	2300      	movs	r3, #0
 80061fa:	9410      	str	r4, [sp, #64]	@ 0x40
 80061fc:	9322      	str	r3, [sp, #136]	@ 0x88
 80061fe:	3b01      	subs	r3, #1
 8006200:	2200      	movs	r2, #0
 8006202:	930e      	str	r3, [sp, #56]	@ 0x38
 8006204:	9309      	str	r3, [sp, #36]	@ 0x24
 8006206:	3313      	adds	r3, #19
 8006208:	9223      	str	r2, [sp, #140]	@ 0x8c
 800620a:	e7dc      	b.n	80061c6 <_dtoa_r+0x25e>
 800620c:	2301      	movs	r3, #1
 800620e:	9310      	str	r3, [sp, #64]	@ 0x40
 8006210:	3b02      	subs	r3, #2
 8006212:	e7f5      	b.n	8006200 <_dtoa_r+0x298>
 8006214:	2301      	movs	r3, #1
 8006216:	001a      	movs	r2, r3
 8006218:	930e      	str	r3, [sp, #56]	@ 0x38
 800621a:	9309      	str	r3, [sp, #36]	@ 0x24
 800621c:	e7f4      	b.n	8006208 <_dtoa_r+0x2a0>
 800621e:	3101      	adds	r1, #1
 8006220:	0052      	lsls	r2, r2, #1
 8006222:	e7d4      	b.n	80061ce <_dtoa_r+0x266>
 8006224:	9b03      	ldr	r3, [sp, #12]
 8006226:	9a08      	ldr	r2, [sp, #32]
 8006228:	69db      	ldr	r3, [r3, #28]
 800622a:	601a      	str	r2, [r3, #0]
 800622c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800622e:	2b0e      	cmp	r3, #14
 8006230:	d900      	bls.n	8006234 <_dtoa_r+0x2cc>
 8006232:	e0d6      	b.n	80063e2 <_dtoa_r+0x47a>
 8006234:	2c00      	cmp	r4, #0
 8006236:	d100      	bne.n	800623a <_dtoa_r+0x2d2>
 8006238:	e0d3      	b.n	80063e2 <_dtoa_r+0x47a>
 800623a:	9b04      	ldr	r3, [sp, #16]
 800623c:	2b00      	cmp	r3, #0
 800623e:	dd63      	ble.n	8006308 <_dtoa_r+0x3a0>
 8006240:	210f      	movs	r1, #15
 8006242:	9a04      	ldr	r2, [sp, #16]
 8006244:	4b2a      	ldr	r3, [pc, #168]	@ (80062f0 <_dtoa_r+0x388>)
 8006246:	400a      	ands	r2, r1
 8006248:	00d2      	lsls	r2, r2, #3
 800624a:	189b      	adds	r3, r3, r2
 800624c:	681e      	ldr	r6, [r3, #0]
 800624e:	685f      	ldr	r7, [r3, #4]
 8006250:	9b04      	ldr	r3, [sp, #16]
 8006252:	2402      	movs	r4, #2
 8006254:	111d      	asrs	r5, r3, #4
 8006256:	05db      	lsls	r3, r3, #23
 8006258:	d50a      	bpl.n	8006270 <_dtoa_r+0x308>
 800625a:	4b2a      	ldr	r3, [pc, #168]	@ (8006304 <_dtoa_r+0x39c>)
 800625c:	400d      	ands	r5, r1
 800625e:	6a1a      	ldr	r2, [r3, #32]
 8006260:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006262:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8006264:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8006266:	f7fa fd53 	bl	8000d10 <__aeabi_ddiv>
 800626a:	900a      	str	r0, [sp, #40]	@ 0x28
 800626c:	910b      	str	r1, [sp, #44]	@ 0x2c
 800626e:	3401      	adds	r4, #1
 8006270:	4b24      	ldr	r3, [pc, #144]	@ (8006304 <_dtoa_r+0x39c>)
 8006272:	930c      	str	r3, [sp, #48]	@ 0x30
 8006274:	2d00      	cmp	r5, #0
 8006276:	d108      	bne.n	800628a <_dtoa_r+0x322>
 8006278:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800627a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800627c:	0032      	movs	r2, r6
 800627e:	003b      	movs	r3, r7
 8006280:	f7fa fd46 	bl	8000d10 <__aeabi_ddiv>
 8006284:	900a      	str	r0, [sp, #40]	@ 0x28
 8006286:	910b      	str	r1, [sp, #44]	@ 0x2c
 8006288:	e059      	b.n	800633e <_dtoa_r+0x3d6>
 800628a:	2301      	movs	r3, #1
 800628c:	421d      	tst	r5, r3
 800628e:	d009      	beq.n	80062a4 <_dtoa_r+0x33c>
 8006290:	18e4      	adds	r4, r4, r3
 8006292:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8006294:	0030      	movs	r0, r6
 8006296:	681a      	ldr	r2, [r3, #0]
 8006298:	685b      	ldr	r3, [r3, #4]
 800629a:	0039      	movs	r1, r7
 800629c:	f7fb f972 	bl	8001584 <__aeabi_dmul>
 80062a0:	0006      	movs	r6, r0
 80062a2:	000f      	movs	r7, r1
 80062a4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80062a6:	106d      	asrs	r5, r5, #1
 80062a8:	3308      	adds	r3, #8
 80062aa:	e7e2      	b.n	8006272 <_dtoa_r+0x30a>
 80062ac:	0800a318 	.word	0x0800a318
 80062b0:	0800a32f 	.word	0x0800a32f
 80062b4:	7ff00000 	.word	0x7ff00000
 80062b8:	0000270f 	.word	0x0000270f
 80062bc:	0800a314 	.word	0x0800a314
 80062c0:	0800a317 	.word	0x0800a317
 80062c4:	0800a41b 	.word	0x0800a41b
 80062c8:	0800a41a 	.word	0x0800a41a
 80062cc:	3ff00000 	.word	0x3ff00000
 80062d0:	fffffc01 	.word	0xfffffc01
 80062d4:	3ff80000 	.word	0x3ff80000
 80062d8:	636f4361 	.word	0x636f4361
 80062dc:	3fd287a7 	.word	0x3fd287a7
 80062e0:	8b60c8b3 	.word	0x8b60c8b3
 80062e4:	3fc68a28 	.word	0x3fc68a28
 80062e8:	509f79fb 	.word	0x509f79fb
 80062ec:	3fd34413 	.word	0x3fd34413
 80062f0:	0800a4f8 	.word	0x0800a4f8
 80062f4:	00000432 	.word	0x00000432
 80062f8:	00000412 	.word	0x00000412
 80062fc:	fe100000 	.word	0xfe100000
 8006300:	0800a387 	.word	0x0800a387
 8006304:	0800a4d0 	.word	0x0800a4d0
 8006308:	9b04      	ldr	r3, [sp, #16]
 800630a:	2402      	movs	r4, #2
 800630c:	2b00      	cmp	r3, #0
 800630e:	d016      	beq.n	800633e <_dtoa_r+0x3d6>
 8006310:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8006312:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8006314:	220f      	movs	r2, #15
 8006316:	425d      	negs	r5, r3
 8006318:	402a      	ands	r2, r5
 800631a:	4bd5      	ldr	r3, [pc, #852]	@ (8006670 <_dtoa_r+0x708>)
 800631c:	00d2      	lsls	r2, r2, #3
 800631e:	189b      	adds	r3, r3, r2
 8006320:	681a      	ldr	r2, [r3, #0]
 8006322:	685b      	ldr	r3, [r3, #4]
 8006324:	f7fb f92e 	bl	8001584 <__aeabi_dmul>
 8006328:	2701      	movs	r7, #1
 800632a:	2300      	movs	r3, #0
 800632c:	900a      	str	r0, [sp, #40]	@ 0x28
 800632e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8006330:	4ed0      	ldr	r6, [pc, #832]	@ (8006674 <_dtoa_r+0x70c>)
 8006332:	112d      	asrs	r5, r5, #4
 8006334:	2d00      	cmp	r5, #0
 8006336:	d000      	beq.n	800633a <_dtoa_r+0x3d2>
 8006338:	e095      	b.n	8006466 <_dtoa_r+0x4fe>
 800633a:	2b00      	cmp	r3, #0
 800633c:	d1a2      	bne.n	8006284 <_dtoa_r+0x31c>
 800633e:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8006340:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8006342:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8006344:	2b00      	cmp	r3, #0
 8006346:	d100      	bne.n	800634a <_dtoa_r+0x3e2>
 8006348:	e098      	b.n	800647c <_dtoa_r+0x514>
 800634a:	2200      	movs	r2, #0
 800634c:	0030      	movs	r0, r6
 800634e:	0039      	movs	r1, r7
 8006350:	4bc9      	ldr	r3, [pc, #804]	@ (8006678 <_dtoa_r+0x710>)
 8006352:	f7fa f881 	bl	8000458 <__aeabi_dcmplt>
 8006356:	2800      	cmp	r0, #0
 8006358:	d100      	bne.n	800635c <_dtoa_r+0x3f4>
 800635a:	e08f      	b.n	800647c <_dtoa_r+0x514>
 800635c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800635e:	2b00      	cmp	r3, #0
 8006360:	d100      	bne.n	8006364 <_dtoa_r+0x3fc>
 8006362:	e08b      	b.n	800647c <_dtoa_r+0x514>
 8006364:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006366:	2b00      	cmp	r3, #0
 8006368:	dd37      	ble.n	80063da <_dtoa_r+0x472>
 800636a:	9b04      	ldr	r3, [sp, #16]
 800636c:	2200      	movs	r2, #0
 800636e:	3b01      	subs	r3, #1
 8006370:	930c      	str	r3, [sp, #48]	@ 0x30
 8006372:	0030      	movs	r0, r6
 8006374:	4bc1      	ldr	r3, [pc, #772]	@ (800667c <_dtoa_r+0x714>)
 8006376:	0039      	movs	r1, r7
 8006378:	f7fb f904 	bl	8001584 <__aeabi_dmul>
 800637c:	900a      	str	r0, [sp, #40]	@ 0x28
 800637e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8006380:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006382:	3401      	adds	r4, #1
 8006384:	0020      	movs	r0, r4
 8006386:	9311      	str	r3, [sp, #68]	@ 0x44
 8006388:	f7fc f84a 	bl	8002420 <__aeabi_i2d>
 800638c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800638e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006390:	f7fb f8f8 	bl	8001584 <__aeabi_dmul>
 8006394:	4bba      	ldr	r3, [pc, #744]	@ (8006680 <_dtoa_r+0x718>)
 8006396:	2200      	movs	r2, #0
 8006398:	f7fa f8f4 	bl	8000584 <__aeabi_dadd>
 800639c:	4bb9      	ldr	r3, [pc, #740]	@ (8006684 <_dtoa_r+0x71c>)
 800639e:	0006      	movs	r6, r0
 80063a0:	18cf      	adds	r7, r1, r3
 80063a2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80063a4:	2b00      	cmp	r3, #0
 80063a6:	d16d      	bne.n	8006484 <_dtoa_r+0x51c>
 80063a8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80063aa:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80063ac:	2200      	movs	r2, #0
 80063ae:	4bb6      	ldr	r3, [pc, #728]	@ (8006688 <_dtoa_r+0x720>)
 80063b0:	f7fb fbce 	bl	8001b50 <__aeabi_dsub>
 80063b4:	0032      	movs	r2, r6
 80063b6:	003b      	movs	r3, r7
 80063b8:	0004      	movs	r4, r0
 80063ba:	000d      	movs	r5, r1
 80063bc:	f7fa f860 	bl	8000480 <__aeabi_dcmpgt>
 80063c0:	2800      	cmp	r0, #0
 80063c2:	d000      	beq.n	80063c6 <_dtoa_r+0x45e>
 80063c4:	e2b6      	b.n	8006934 <_dtoa_r+0x9cc>
 80063c6:	2180      	movs	r1, #128	@ 0x80
 80063c8:	0609      	lsls	r1, r1, #24
 80063ca:	187b      	adds	r3, r7, r1
 80063cc:	0032      	movs	r2, r6
 80063ce:	0020      	movs	r0, r4
 80063d0:	0029      	movs	r1, r5
 80063d2:	f7fa f841 	bl	8000458 <__aeabi_dcmplt>
 80063d6:	2800      	cmp	r0, #0
 80063d8:	d128      	bne.n	800642c <_dtoa_r+0x4c4>
 80063da:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80063dc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80063de:	930a      	str	r3, [sp, #40]	@ 0x28
 80063e0:	940b      	str	r4, [sp, #44]	@ 0x2c
 80063e2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80063e4:	2b00      	cmp	r3, #0
 80063e6:	da00      	bge.n	80063ea <_dtoa_r+0x482>
 80063e8:	e174      	b.n	80066d4 <_dtoa_r+0x76c>
 80063ea:	9a04      	ldr	r2, [sp, #16]
 80063ec:	2a0e      	cmp	r2, #14
 80063ee:	dd00      	ble.n	80063f2 <_dtoa_r+0x48a>
 80063f0:	e170      	b.n	80066d4 <_dtoa_r+0x76c>
 80063f2:	4b9f      	ldr	r3, [pc, #636]	@ (8006670 <_dtoa_r+0x708>)
 80063f4:	00d2      	lsls	r2, r2, #3
 80063f6:	189b      	adds	r3, r3, r2
 80063f8:	685c      	ldr	r4, [r3, #4]
 80063fa:	681b      	ldr	r3, [r3, #0]
 80063fc:	9306      	str	r3, [sp, #24]
 80063fe:	9407      	str	r4, [sp, #28]
 8006400:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8006402:	2b00      	cmp	r3, #0
 8006404:	db00      	blt.n	8006408 <_dtoa_r+0x4a0>
 8006406:	e0e7      	b.n	80065d8 <_dtoa_r+0x670>
 8006408:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800640a:	2b00      	cmp	r3, #0
 800640c:	dd00      	ble.n	8006410 <_dtoa_r+0x4a8>
 800640e:	e0e3      	b.n	80065d8 <_dtoa_r+0x670>
 8006410:	d10c      	bne.n	800642c <_dtoa_r+0x4c4>
 8006412:	9806      	ldr	r0, [sp, #24]
 8006414:	9907      	ldr	r1, [sp, #28]
 8006416:	2200      	movs	r2, #0
 8006418:	4b9b      	ldr	r3, [pc, #620]	@ (8006688 <_dtoa_r+0x720>)
 800641a:	f7fb f8b3 	bl	8001584 <__aeabi_dmul>
 800641e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8006420:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006422:	f7fa f837 	bl	8000494 <__aeabi_dcmpge>
 8006426:	2800      	cmp	r0, #0
 8006428:	d100      	bne.n	800642c <_dtoa_r+0x4c4>
 800642a:	e286      	b.n	800693a <_dtoa_r+0x9d2>
 800642c:	2600      	movs	r6, #0
 800642e:	0037      	movs	r7, r6
 8006430:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8006432:	9c08      	ldr	r4, [sp, #32]
 8006434:	43db      	mvns	r3, r3
 8006436:	930c      	str	r3, [sp, #48]	@ 0x30
 8006438:	9704      	str	r7, [sp, #16]
 800643a:	2700      	movs	r7, #0
 800643c:	0031      	movs	r1, r6
 800643e:	9803      	ldr	r0, [sp, #12]
 8006440:	f000 fccc 	bl	8006ddc <_Bfree>
 8006444:	9b04      	ldr	r3, [sp, #16]
 8006446:	2b00      	cmp	r3, #0
 8006448:	d100      	bne.n	800644c <_dtoa_r+0x4e4>
 800644a:	e0bb      	b.n	80065c4 <_dtoa_r+0x65c>
 800644c:	2f00      	cmp	r7, #0
 800644e:	d005      	beq.n	800645c <_dtoa_r+0x4f4>
 8006450:	429f      	cmp	r7, r3
 8006452:	d003      	beq.n	800645c <_dtoa_r+0x4f4>
 8006454:	0039      	movs	r1, r7
 8006456:	9803      	ldr	r0, [sp, #12]
 8006458:	f000 fcc0 	bl	8006ddc <_Bfree>
 800645c:	9904      	ldr	r1, [sp, #16]
 800645e:	9803      	ldr	r0, [sp, #12]
 8006460:	f000 fcbc 	bl	8006ddc <_Bfree>
 8006464:	e0ae      	b.n	80065c4 <_dtoa_r+0x65c>
 8006466:	423d      	tst	r5, r7
 8006468:	d005      	beq.n	8006476 <_dtoa_r+0x50e>
 800646a:	6832      	ldr	r2, [r6, #0]
 800646c:	6873      	ldr	r3, [r6, #4]
 800646e:	f7fb f889 	bl	8001584 <__aeabi_dmul>
 8006472:	003b      	movs	r3, r7
 8006474:	3401      	adds	r4, #1
 8006476:	106d      	asrs	r5, r5, #1
 8006478:	3608      	adds	r6, #8
 800647a:	e75b      	b.n	8006334 <_dtoa_r+0x3cc>
 800647c:	9b04      	ldr	r3, [sp, #16]
 800647e:	930c      	str	r3, [sp, #48]	@ 0x30
 8006480:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006482:	e77f      	b.n	8006384 <_dtoa_r+0x41c>
 8006484:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8006486:	4b7a      	ldr	r3, [pc, #488]	@ (8006670 <_dtoa_r+0x708>)
 8006488:	3a01      	subs	r2, #1
 800648a:	00d2      	lsls	r2, r2, #3
 800648c:	9910      	ldr	r1, [sp, #64]	@ 0x40
 800648e:	189b      	adds	r3, r3, r2
 8006490:	681a      	ldr	r2, [r3, #0]
 8006492:	685b      	ldr	r3, [r3, #4]
 8006494:	2900      	cmp	r1, #0
 8006496:	d04c      	beq.n	8006532 <_dtoa_r+0x5ca>
 8006498:	2000      	movs	r0, #0
 800649a:	497c      	ldr	r1, [pc, #496]	@ (800668c <_dtoa_r+0x724>)
 800649c:	f7fa fc38 	bl	8000d10 <__aeabi_ddiv>
 80064a0:	0032      	movs	r2, r6
 80064a2:	003b      	movs	r3, r7
 80064a4:	f7fb fb54 	bl	8001b50 <__aeabi_dsub>
 80064a8:	9a08      	ldr	r2, [sp, #32]
 80064aa:	0006      	movs	r6, r0
 80064ac:	4694      	mov	ip, r2
 80064ae:	000f      	movs	r7, r1
 80064b0:	9b08      	ldr	r3, [sp, #32]
 80064b2:	9316      	str	r3, [sp, #88]	@ 0x58
 80064b4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80064b6:	4463      	add	r3, ip
 80064b8:	9311      	str	r3, [sp, #68]	@ 0x44
 80064ba:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80064bc:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80064be:	f7fb ff73 	bl	80023a8 <__aeabi_d2iz>
 80064c2:	0005      	movs	r5, r0
 80064c4:	f7fb ffac 	bl	8002420 <__aeabi_i2d>
 80064c8:	0002      	movs	r2, r0
 80064ca:	000b      	movs	r3, r1
 80064cc:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80064ce:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80064d0:	f7fb fb3e 	bl	8001b50 <__aeabi_dsub>
 80064d4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80064d6:	3530      	adds	r5, #48	@ 0x30
 80064d8:	1c5c      	adds	r4, r3, #1
 80064da:	701d      	strb	r5, [r3, #0]
 80064dc:	0032      	movs	r2, r6
 80064de:	003b      	movs	r3, r7
 80064e0:	900a      	str	r0, [sp, #40]	@ 0x28
 80064e2:	910b      	str	r1, [sp, #44]	@ 0x2c
 80064e4:	f7f9 ffb8 	bl	8000458 <__aeabi_dcmplt>
 80064e8:	2800      	cmp	r0, #0
 80064ea:	d16b      	bne.n	80065c4 <_dtoa_r+0x65c>
 80064ec:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80064ee:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80064f0:	2000      	movs	r0, #0
 80064f2:	4961      	ldr	r1, [pc, #388]	@ (8006678 <_dtoa_r+0x710>)
 80064f4:	f7fb fb2c 	bl	8001b50 <__aeabi_dsub>
 80064f8:	0032      	movs	r2, r6
 80064fa:	003b      	movs	r3, r7
 80064fc:	f7f9 ffac 	bl	8000458 <__aeabi_dcmplt>
 8006500:	2800      	cmp	r0, #0
 8006502:	d000      	beq.n	8006506 <_dtoa_r+0x59e>
 8006504:	e0c6      	b.n	8006694 <_dtoa_r+0x72c>
 8006506:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8006508:	42a3      	cmp	r3, r4
 800650a:	d100      	bne.n	800650e <_dtoa_r+0x5a6>
 800650c:	e765      	b.n	80063da <_dtoa_r+0x472>
 800650e:	2200      	movs	r2, #0
 8006510:	0030      	movs	r0, r6
 8006512:	0039      	movs	r1, r7
 8006514:	4b59      	ldr	r3, [pc, #356]	@ (800667c <_dtoa_r+0x714>)
 8006516:	f7fb f835 	bl	8001584 <__aeabi_dmul>
 800651a:	2200      	movs	r2, #0
 800651c:	0006      	movs	r6, r0
 800651e:	000f      	movs	r7, r1
 8006520:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006522:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006524:	4b55      	ldr	r3, [pc, #340]	@ (800667c <_dtoa_r+0x714>)
 8006526:	f7fb f82d 	bl	8001584 <__aeabi_dmul>
 800652a:	9416      	str	r4, [sp, #88]	@ 0x58
 800652c:	900a      	str	r0, [sp, #40]	@ 0x28
 800652e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8006530:	e7c3      	b.n	80064ba <_dtoa_r+0x552>
 8006532:	0030      	movs	r0, r6
 8006534:	0039      	movs	r1, r7
 8006536:	f7fb f825 	bl	8001584 <__aeabi_dmul>
 800653a:	9d08      	ldr	r5, [sp, #32]
 800653c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800653e:	002b      	movs	r3, r5
 8006540:	4694      	mov	ip, r2
 8006542:	9016      	str	r0, [sp, #88]	@ 0x58
 8006544:	9117      	str	r1, [sp, #92]	@ 0x5c
 8006546:	4463      	add	r3, ip
 8006548:	9319      	str	r3, [sp, #100]	@ 0x64
 800654a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800654c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800654e:	f7fb ff2b 	bl	80023a8 <__aeabi_d2iz>
 8006552:	0004      	movs	r4, r0
 8006554:	f7fb ff64 	bl	8002420 <__aeabi_i2d>
 8006558:	000b      	movs	r3, r1
 800655a:	0002      	movs	r2, r0
 800655c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800655e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006560:	f7fb faf6 	bl	8001b50 <__aeabi_dsub>
 8006564:	3430      	adds	r4, #48	@ 0x30
 8006566:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8006568:	702c      	strb	r4, [r5, #0]
 800656a:	3501      	adds	r5, #1
 800656c:	0006      	movs	r6, r0
 800656e:	000f      	movs	r7, r1
 8006570:	42ab      	cmp	r3, r5
 8006572:	d12a      	bne.n	80065ca <_dtoa_r+0x662>
 8006574:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8006576:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8006578:	9b08      	ldr	r3, [sp, #32]
 800657a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 800657c:	469c      	mov	ip, r3
 800657e:	2200      	movs	r2, #0
 8006580:	4b42      	ldr	r3, [pc, #264]	@ (800668c <_dtoa_r+0x724>)
 8006582:	4464      	add	r4, ip
 8006584:	f7f9 fffe 	bl	8000584 <__aeabi_dadd>
 8006588:	0002      	movs	r2, r0
 800658a:	000b      	movs	r3, r1
 800658c:	0030      	movs	r0, r6
 800658e:	0039      	movs	r1, r7
 8006590:	f7f9 ff76 	bl	8000480 <__aeabi_dcmpgt>
 8006594:	2800      	cmp	r0, #0
 8006596:	d000      	beq.n	800659a <_dtoa_r+0x632>
 8006598:	e07c      	b.n	8006694 <_dtoa_r+0x72c>
 800659a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 800659c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800659e:	2000      	movs	r0, #0
 80065a0:	493a      	ldr	r1, [pc, #232]	@ (800668c <_dtoa_r+0x724>)
 80065a2:	f7fb fad5 	bl	8001b50 <__aeabi_dsub>
 80065a6:	0002      	movs	r2, r0
 80065a8:	000b      	movs	r3, r1
 80065aa:	0030      	movs	r0, r6
 80065ac:	0039      	movs	r1, r7
 80065ae:	f7f9 ff53 	bl	8000458 <__aeabi_dcmplt>
 80065b2:	2800      	cmp	r0, #0
 80065b4:	d100      	bne.n	80065b8 <_dtoa_r+0x650>
 80065b6:	e710      	b.n	80063da <_dtoa_r+0x472>
 80065b8:	0023      	movs	r3, r4
 80065ba:	3c01      	subs	r4, #1
 80065bc:	7822      	ldrb	r2, [r4, #0]
 80065be:	2a30      	cmp	r2, #48	@ 0x30
 80065c0:	d0fa      	beq.n	80065b8 <_dtoa_r+0x650>
 80065c2:	001c      	movs	r4, r3
 80065c4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80065c6:	9304      	str	r3, [sp, #16]
 80065c8:	e042      	b.n	8006650 <_dtoa_r+0x6e8>
 80065ca:	2200      	movs	r2, #0
 80065cc:	4b2b      	ldr	r3, [pc, #172]	@ (800667c <_dtoa_r+0x714>)
 80065ce:	f7fa ffd9 	bl	8001584 <__aeabi_dmul>
 80065d2:	900a      	str	r0, [sp, #40]	@ 0x28
 80065d4:	910b      	str	r1, [sp, #44]	@ 0x2c
 80065d6:	e7b8      	b.n	800654a <_dtoa_r+0x5e2>
 80065d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80065da:	9d08      	ldr	r5, [sp, #32]
 80065dc:	3b01      	subs	r3, #1
 80065de:	195b      	adds	r3, r3, r5
 80065e0:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 80065e2:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80065e4:	930a      	str	r3, [sp, #40]	@ 0x28
 80065e6:	9a06      	ldr	r2, [sp, #24]
 80065e8:	9b07      	ldr	r3, [sp, #28]
 80065ea:	0030      	movs	r0, r6
 80065ec:	0039      	movs	r1, r7
 80065ee:	f7fa fb8f 	bl	8000d10 <__aeabi_ddiv>
 80065f2:	f7fb fed9 	bl	80023a8 <__aeabi_d2iz>
 80065f6:	9009      	str	r0, [sp, #36]	@ 0x24
 80065f8:	f7fb ff12 	bl	8002420 <__aeabi_i2d>
 80065fc:	9a06      	ldr	r2, [sp, #24]
 80065fe:	9b07      	ldr	r3, [sp, #28]
 8006600:	f7fa ffc0 	bl	8001584 <__aeabi_dmul>
 8006604:	0002      	movs	r2, r0
 8006606:	000b      	movs	r3, r1
 8006608:	0030      	movs	r0, r6
 800660a:	0039      	movs	r1, r7
 800660c:	f7fb faa0 	bl	8001b50 <__aeabi_dsub>
 8006610:	002b      	movs	r3, r5
 8006612:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006614:	3501      	adds	r5, #1
 8006616:	3230      	adds	r2, #48	@ 0x30
 8006618:	701a      	strb	r2, [r3, #0]
 800661a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800661c:	002c      	movs	r4, r5
 800661e:	429a      	cmp	r2, r3
 8006620:	d14b      	bne.n	80066ba <_dtoa_r+0x752>
 8006622:	0002      	movs	r2, r0
 8006624:	000b      	movs	r3, r1
 8006626:	f7f9 ffad 	bl	8000584 <__aeabi_dadd>
 800662a:	9a06      	ldr	r2, [sp, #24]
 800662c:	9b07      	ldr	r3, [sp, #28]
 800662e:	0006      	movs	r6, r0
 8006630:	000f      	movs	r7, r1
 8006632:	f7f9 ff25 	bl	8000480 <__aeabi_dcmpgt>
 8006636:	2800      	cmp	r0, #0
 8006638:	d12a      	bne.n	8006690 <_dtoa_r+0x728>
 800663a:	9a06      	ldr	r2, [sp, #24]
 800663c:	9b07      	ldr	r3, [sp, #28]
 800663e:	0030      	movs	r0, r6
 8006640:	0039      	movs	r1, r7
 8006642:	f7f9 ff03 	bl	800044c <__aeabi_dcmpeq>
 8006646:	2800      	cmp	r0, #0
 8006648:	d002      	beq.n	8006650 <_dtoa_r+0x6e8>
 800664a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800664c:	07dd      	lsls	r5, r3, #31
 800664e:	d41f      	bmi.n	8006690 <_dtoa_r+0x728>
 8006650:	9905      	ldr	r1, [sp, #20]
 8006652:	9803      	ldr	r0, [sp, #12]
 8006654:	f000 fbc2 	bl	8006ddc <_Bfree>
 8006658:	2300      	movs	r3, #0
 800665a:	7023      	strb	r3, [r4, #0]
 800665c:	9b04      	ldr	r3, [sp, #16]
 800665e:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8006660:	3301      	adds	r3, #1
 8006662:	6013      	str	r3, [r2, #0]
 8006664:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8006666:	2b00      	cmp	r3, #0
 8006668:	d100      	bne.n	800666c <_dtoa_r+0x704>
 800666a:	e4c7      	b.n	8005ffc <_dtoa_r+0x94>
 800666c:	601c      	str	r4, [r3, #0]
 800666e:	e4c5      	b.n	8005ffc <_dtoa_r+0x94>
 8006670:	0800a4f8 	.word	0x0800a4f8
 8006674:	0800a4d0 	.word	0x0800a4d0
 8006678:	3ff00000 	.word	0x3ff00000
 800667c:	40240000 	.word	0x40240000
 8006680:	401c0000 	.word	0x401c0000
 8006684:	fcc00000 	.word	0xfcc00000
 8006688:	40140000 	.word	0x40140000
 800668c:	3fe00000 	.word	0x3fe00000
 8006690:	9b04      	ldr	r3, [sp, #16]
 8006692:	930c      	str	r3, [sp, #48]	@ 0x30
 8006694:	0023      	movs	r3, r4
 8006696:	001c      	movs	r4, r3
 8006698:	3b01      	subs	r3, #1
 800669a:	781a      	ldrb	r2, [r3, #0]
 800669c:	2a39      	cmp	r2, #57	@ 0x39
 800669e:	d108      	bne.n	80066b2 <_dtoa_r+0x74a>
 80066a0:	9a08      	ldr	r2, [sp, #32]
 80066a2:	429a      	cmp	r2, r3
 80066a4:	d1f7      	bne.n	8006696 <_dtoa_r+0x72e>
 80066a6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80066a8:	9908      	ldr	r1, [sp, #32]
 80066aa:	3201      	adds	r2, #1
 80066ac:	920c      	str	r2, [sp, #48]	@ 0x30
 80066ae:	2230      	movs	r2, #48	@ 0x30
 80066b0:	700a      	strb	r2, [r1, #0]
 80066b2:	781a      	ldrb	r2, [r3, #0]
 80066b4:	3201      	adds	r2, #1
 80066b6:	701a      	strb	r2, [r3, #0]
 80066b8:	e784      	b.n	80065c4 <_dtoa_r+0x65c>
 80066ba:	2200      	movs	r2, #0
 80066bc:	4bc6      	ldr	r3, [pc, #792]	@ (80069d8 <_dtoa_r+0xa70>)
 80066be:	f7fa ff61 	bl	8001584 <__aeabi_dmul>
 80066c2:	2200      	movs	r2, #0
 80066c4:	2300      	movs	r3, #0
 80066c6:	0006      	movs	r6, r0
 80066c8:	000f      	movs	r7, r1
 80066ca:	f7f9 febf 	bl	800044c <__aeabi_dcmpeq>
 80066ce:	2800      	cmp	r0, #0
 80066d0:	d089      	beq.n	80065e6 <_dtoa_r+0x67e>
 80066d2:	e7bd      	b.n	8006650 <_dtoa_r+0x6e8>
 80066d4:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 80066d6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80066d8:	9c06      	ldr	r4, [sp, #24]
 80066da:	2f00      	cmp	r7, #0
 80066dc:	d014      	beq.n	8006708 <_dtoa_r+0x7a0>
 80066de:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80066e0:	2a01      	cmp	r2, #1
 80066e2:	dd00      	ble.n	80066e6 <_dtoa_r+0x77e>
 80066e4:	e0e4      	b.n	80068b0 <_dtoa_r+0x948>
 80066e6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80066e8:	2a00      	cmp	r2, #0
 80066ea:	d100      	bne.n	80066ee <_dtoa_r+0x786>
 80066ec:	e0da      	b.n	80068a4 <_dtoa_r+0x93c>
 80066ee:	4abb      	ldr	r2, [pc, #748]	@ (80069dc <_dtoa_r+0xa74>)
 80066f0:	189b      	adds	r3, r3, r2
 80066f2:	9a06      	ldr	r2, [sp, #24]
 80066f4:	2101      	movs	r1, #1
 80066f6:	18d2      	adds	r2, r2, r3
 80066f8:	9206      	str	r2, [sp, #24]
 80066fa:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80066fc:	9803      	ldr	r0, [sp, #12]
 80066fe:	18d3      	adds	r3, r2, r3
 8006700:	930d      	str	r3, [sp, #52]	@ 0x34
 8006702:	f000 fc6f 	bl	8006fe4 <__i2b>
 8006706:	0007      	movs	r7, r0
 8006708:	2c00      	cmp	r4, #0
 800670a:	d00e      	beq.n	800672a <_dtoa_r+0x7c2>
 800670c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800670e:	2b00      	cmp	r3, #0
 8006710:	dd0b      	ble.n	800672a <_dtoa_r+0x7c2>
 8006712:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8006714:	0023      	movs	r3, r4
 8006716:	4294      	cmp	r4, r2
 8006718:	dd00      	ble.n	800671c <_dtoa_r+0x7b4>
 800671a:	0013      	movs	r3, r2
 800671c:	9a06      	ldr	r2, [sp, #24]
 800671e:	1ae4      	subs	r4, r4, r3
 8006720:	1ad2      	subs	r2, r2, r3
 8006722:	9206      	str	r2, [sp, #24]
 8006724:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8006726:	1ad3      	subs	r3, r2, r3
 8006728:	930d      	str	r3, [sp, #52]	@ 0x34
 800672a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800672c:	2b00      	cmp	r3, #0
 800672e:	d021      	beq.n	8006774 <_dtoa_r+0x80c>
 8006730:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8006732:	2b00      	cmp	r3, #0
 8006734:	d100      	bne.n	8006738 <_dtoa_r+0x7d0>
 8006736:	e0d3      	b.n	80068e0 <_dtoa_r+0x978>
 8006738:	9e05      	ldr	r6, [sp, #20]
 800673a:	2d00      	cmp	r5, #0
 800673c:	d014      	beq.n	8006768 <_dtoa_r+0x800>
 800673e:	0039      	movs	r1, r7
 8006740:	002a      	movs	r2, r5
 8006742:	9803      	ldr	r0, [sp, #12]
 8006744:	f000 fd10 	bl	8007168 <__pow5mult>
 8006748:	9a05      	ldr	r2, [sp, #20]
 800674a:	0001      	movs	r1, r0
 800674c:	0007      	movs	r7, r0
 800674e:	9803      	ldr	r0, [sp, #12]
 8006750:	f000 fc60 	bl	8007014 <__multiply>
 8006754:	0006      	movs	r6, r0
 8006756:	9905      	ldr	r1, [sp, #20]
 8006758:	9803      	ldr	r0, [sp, #12]
 800675a:	f000 fb3f 	bl	8006ddc <_Bfree>
 800675e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006760:	9605      	str	r6, [sp, #20]
 8006762:	1b5b      	subs	r3, r3, r5
 8006764:	930f      	str	r3, [sp, #60]	@ 0x3c
 8006766:	d005      	beq.n	8006774 <_dtoa_r+0x80c>
 8006768:	0031      	movs	r1, r6
 800676a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800676c:	9803      	ldr	r0, [sp, #12]
 800676e:	f000 fcfb 	bl	8007168 <__pow5mult>
 8006772:	9005      	str	r0, [sp, #20]
 8006774:	2101      	movs	r1, #1
 8006776:	9803      	ldr	r0, [sp, #12]
 8006778:	f000 fc34 	bl	8006fe4 <__i2b>
 800677c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800677e:	0006      	movs	r6, r0
 8006780:	2b00      	cmp	r3, #0
 8006782:	d100      	bne.n	8006786 <_dtoa_r+0x81e>
 8006784:	e1bc      	b.n	8006b00 <_dtoa_r+0xb98>
 8006786:	001a      	movs	r2, r3
 8006788:	0001      	movs	r1, r0
 800678a:	9803      	ldr	r0, [sp, #12]
 800678c:	f000 fcec 	bl	8007168 <__pow5mult>
 8006790:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8006792:	0006      	movs	r6, r0
 8006794:	2500      	movs	r5, #0
 8006796:	2b01      	cmp	r3, #1
 8006798:	dc16      	bgt.n	80067c8 <_dtoa_r+0x860>
 800679a:	2500      	movs	r5, #0
 800679c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800679e:	42ab      	cmp	r3, r5
 80067a0:	d10e      	bne.n	80067c0 <_dtoa_r+0x858>
 80067a2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80067a4:	031b      	lsls	r3, r3, #12
 80067a6:	42ab      	cmp	r3, r5
 80067a8:	d10a      	bne.n	80067c0 <_dtoa_r+0x858>
 80067aa:	4b8d      	ldr	r3, [pc, #564]	@ (80069e0 <_dtoa_r+0xa78>)
 80067ac:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80067ae:	4213      	tst	r3, r2
 80067b0:	d006      	beq.n	80067c0 <_dtoa_r+0x858>
 80067b2:	9b06      	ldr	r3, [sp, #24]
 80067b4:	3501      	adds	r5, #1
 80067b6:	3301      	adds	r3, #1
 80067b8:	9306      	str	r3, [sp, #24]
 80067ba:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80067bc:	3301      	adds	r3, #1
 80067be:	930d      	str	r3, [sp, #52]	@ 0x34
 80067c0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80067c2:	2001      	movs	r0, #1
 80067c4:	2b00      	cmp	r3, #0
 80067c6:	d008      	beq.n	80067da <_dtoa_r+0x872>
 80067c8:	6933      	ldr	r3, [r6, #16]
 80067ca:	3303      	adds	r3, #3
 80067cc:	009b      	lsls	r3, r3, #2
 80067ce:	18f3      	adds	r3, r6, r3
 80067d0:	6858      	ldr	r0, [r3, #4]
 80067d2:	f000 fbb7 	bl	8006f44 <__hi0bits>
 80067d6:	2320      	movs	r3, #32
 80067d8:	1a18      	subs	r0, r3, r0
 80067da:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80067dc:	1818      	adds	r0, r3, r0
 80067de:	0002      	movs	r2, r0
 80067e0:	231f      	movs	r3, #31
 80067e2:	401a      	ands	r2, r3
 80067e4:	4218      	tst	r0, r3
 80067e6:	d100      	bne.n	80067ea <_dtoa_r+0x882>
 80067e8:	e081      	b.n	80068ee <_dtoa_r+0x986>
 80067ea:	3301      	adds	r3, #1
 80067ec:	1a9b      	subs	r3, r3, r2
 80067ee:	2b04      	cmp	r3, #4
 80067f0:	dd79      	ble.n	80068e6 <_dtoa_r+0x97e>
 80067f2:	231c      	movs	r3, #28
 80067f4:	1a9b      	subs	r3, r3, r2
 80067f6:	9a06      	ldr	r2, [sp, #24]
 80067f8:	18e4      	adds	r4, r4, r3
 80067fa:	18d2      	adds	r2, r2, r3
 80067fc:	9206      	str	r2, [sp, #24]
 80067fe:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8006800:	18d3      	adds	r3, r2, r3
 8006802:	930d      	str	r3, [sp, #52]	@ 0x34
 8006804:	9b06      	ldr	r3, [sp, #24]
 8006806:	2b00      	cmp	r3, #0
 8006808:	dd05      	ble.n	8006816 <_dtoa_r+0x8ae>
 800680a:	001a      	movs	r2, r3
 800680c:	9905      	ldr	r1, [sp, #20]
 800680e:	9803      	ldr	r0, [sp, #12]
 8006810:	f000 fd06 	bl	8007220 <__lshift>
 8006814:	9005      	str	r0, [sp, #20]
 8006816:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8006818:	2b00      	cmp	r3, #0
 800681a:	dd05      	ble.n	8006828 <_dtoa_r+0x8c0>
 800681c:	0031      	movs	r1, r6
 800681e:	001a      	movs	r2, r3
 8006820:	9803      	ldr	r0, [sp, #12]
 8006822:	f000 fcfd 	bl	8007220 <__lshift>
 8006826:	0006      	movs	r6, r0
 8006828:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 800682a:	2b00      	cmp	r3, #0
 800682c:	d061      	beq.n	80068f2 <_dtoa_r+0x98a>
 800682e:	0031      	movs	r1, r6
 8006830:	9805      	ldr	r0, [sp, #20]
 8006832:	f000 fd61 	bl	80072f8 <__mcmp>
 8006836:	2800      	cmp	r0, #0
 8006838:	da5b      	bge.n	80068f2 <_dtoa_r+0x98a>
 800683a:	9b04      	ldr	r3, [sp, #16]
 800683c:	220a      	movs	r2, #10
 800683e:	3b01      	subs	r3, #1
 8006840:	930c      	str	r3, [sp, #48]	@ 0x30
 8006842:	9905      	ldr	r1, [sp, #20]
 8006844:	2300      	movs	r3, #0
 8006846:	9803      	ldr	r0, [sp, #12]
 8006848:	f000 faec 	bl	8006e24 <__multadd>
 800684c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800684e:	9005      	str	r0, [sp, #20]
 8006850:	2b00      	cmp	r3, #0
 8006852:	d100      	bne.n	8006856 <_dtoa_r+0x8ee>
 8006854:	e15b      	b.n	8006b0e <_dtoa_r+0xba6>
 8006856:	2300      	movs	r3, #0
 8006858:	0039      	movs	r1, r7
 800685a:	220a      	movs	r2, #10
 800685c:	9803      	ldr	r0, [sp, #12]
 800685e:	f000 fae1 	bl	8006e24 <__multadd>
 8006862:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006864:	0007      	movs	r7, r0
 8006866:	2b00      	cmp	r3, #0
 8006868:	dc4d      	bgt.n	8006906 <_dtoa_r+0x99e>
 800686a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 800686c:	2b02      	cmp	r3, #2
 800686e:	dd46      	ble.n	80068fe <_dtoa_r+0x996>
 8006870:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006872:	2b00      	cmp	r3, #0
 8006874:	d000      	beq.n	8006878 <_dtoa_r+0x910>
 8006876:	e5db      	b.n	8006430 <_dtoa_r+0x4c8>
 8006878:	0031      	movs	r1, r6
 800687a:	2205      	movs	r2, #5
 800687c:	9803      	ldr	r0, [sp, #12]
 800687e:	f000 fad1 	bl	8006e24 <__multadd>
 8006882:	0006      	movs	r6, r0
 8006884:	0001      	movs	r1, r0
 8006886:	9805      	ldr	r0, [sp, #20]
 8006888:	f000 fd36 	bl	80072f8 <__mcmp>
 800688c:	2800      	cmp	r0, #0
 800688e:	dc00      	bgt.n	8006892 <_dtoa_r+0x92a>
 8006890:	e5ce      	b.n	8006430 <_dtoa_r+0x4c8>
 8006892:	9b08      	ldr	r3, [sp, #32]
 8006894:	9a08      	ldr	r2, [sp, #32]
 8006896:	1c5c      	adds	r4, r3, #1
 8006898:	2331      	movs	r3, #49	@ 0x31
 800689a:	7013      	strb	r3, [r2, #0]
 800689c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800689e:	3301      	adds	r3, #1
 80068a0:	930c      	str	r3, [sp, #48]	@ 0x30
 80068a2:	e5c9      	b.n	8006438 <_dtoa_r+0x4d0>
 80068a4:	2336      	movs	r3, #54	@ 0x36
 80068a6:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 80068a8:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80068aa:	1a9b      	subs	r3, r3, r2
 80068ac:	9c06      	ldr	r4, [sp, #24]
 80068ae:	e720      	b.n	80066f2 <_dtoa_r+0x78a>
 80068b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80068b2:	1e5d      	subs	r5, r3, #1
 80068b4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80068b6:	42ab      	cmp	r3, r5
 80068b8:	db08      	blt.n	80068cc <_dtoa_r+0x964>
 80068ba:	1b5d      	subs	r5, r3, r5
 80068bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80068be:	2b00      	cmp	r3, #0
 80068c0:	daf4      	bge.n	80068ac <_dtoa_r+0x944>
 80068c2:	9b06      	ldr	r3, [sp, #24]
 80068c4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80068c6:	1a9c      	subs	r4, r3, r2
 80068c8:	2300      	movs	r3, #0
 80068ca:	e712      	b.n	80066f2 <_dtoa_r+0x78a>
 80068cc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80068ce:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80068d0:	1aeb      	subs	r3, r5, r3
 80068d2:	18d3      	adds	r3, r2, r3
 80068d4:	9314      	str	r3, [sp, #80]	@ 0x50
 80068d6:	950f      	str	r5, [sp, #60]	@ 0x3c
 80068d8:	9c06      	ldr	r4, [sp, #24]
 80068da:	2500      	movs	r5, #0
 80068dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80068de:	e708      	b.n	80066f2 <_dtoa_r+0x78a>
 80068e0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80068e2:	9905      	ldr	r1, [sp, #20]
 80068e4:	e742      	b.n	800676c <_dtoa_r+0x804>
 80068e6:	2b04      	cmp	r3, #4
 80068e8:	d08c      	beq.n	8006804 <_dtoa_r+0x89c>
 80068ea:	331c      	adds	r3, #28
 80068ec:	e783      	b.n	80067f6 <_dtoa_r+0x88e>
 80068ee:	0013      	movs	r3, r2
 80068f0:	e7fb      	b.n	80068ea <_dtoa_r+0x982>
 80068f2:	9b04      	ldr	r3, [sp, #16]
 80068f4:	930c      	str	r3, [sp, #48]	@ 0x30
 80068f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80068f8:	930e      	str	r3, [sp, #56]	@ 0x38
 80068fa:	2b00      	cmp	r3, #0
 80068fc:	ddb5      	ble.n	800686a <_dtoa_r+0x902>
 80068fe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8006900:	2b00      	cmp	r3, #0
 8006902:	d100      	bne.n	8006906 <_dtoa_r+0x99e>
 8006904:	e107      	b.n	8006b16 <_dtoa_r+0xbae>
 8006906:	2c00      	cmp	r4, #0
 8006908:	dd05      	ble.n	8006916 <_dtoa_r+0x9ae>
 800690a:	0039      	movs	r1, r7
 800690c:	0022      	movs	r2, r4
 800690e:	9803      	ldr	r0, [sp, #12]
 8006910:	f000 fc86 	bl	8007220 <__lshift>
 8006914:	0007      	movs	r7, r0
 8006916:	9704      	str	r7, [sp, #16]
 8006918:	2d00      	cmp	r5, #0
 800691a:	d020      	beq.n	800695e <_dtoa_r+0x9f6>
 800691c:	6879      	ldr	r1, [r7, #4]
 800691e:	9803      	ldr	r0, [sp, #12]
 8006920:	f000 fa18 	bl	8006d54 <_Balloc>
 8006924:	1e04      	subs	r4, r0, #0
 8006926:	d10c      	bne.n	8006942 <_dtoa_r+0x9da>
 8006928:	0022      	movs	r2, r4
 800692a:	4b2e      	ldr	r3, [pc, #184]	@ (80069e4 <_dtoa_r+0xa7c>)
 800692c:	482e      	ldr	r0, [pc, #184]	@ (80069e8 <_dtoa_r+0xa80>)
 800692e:	492f      	ldr	r1, [pc, #188]	@ (80069ec <_dtoa_r+0xa84>)
 8006930:	f7ff fb2f 	bl	8005f92 <_dtoa_r+0x2a>
 8006934:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8006936:	0037      	movs	r7, r6
 8006938:	e7ab      	b.n	8006892 <_dtoa_r+0x92a>
 800693a:	9b04      	ldr	r3, [sp, #16]
 800693c:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 800693e:	930c      	str	r3, [sp, #48]	@ 0x30
 8006940:	e7f9      	b.n	8006936 <_dtoa_r+0x9ce>
 8006942:	0039      	movs	r1, r7
 8006944:	693a      	ldr	r2, [r7, #16]
 8006946:	310c      	adds	r1, #12
 8006948:	3202      	adds	r2, #2
 800694a:	0092      	lsls	r2, r2, #2
 800694c:	300c      	adds	r0, #12
 800694e:	f002 fee1 	bl	8009714 <memcpy>
 8006952:	2201      	movs	r2, #1
 8006954:	0021      	movs	r1, r4
 8006956:	9803      	ldr	r0, [sp, #12]
 8006958:	f000 fc62 	bl	8007220 <__lshift>
 800695c:	9004      	str	r0, [sp, #16]
 800695e:	9b08      	ldr	r3, [sp, #32]
 8006960:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8006962:	9306      	str	r3, [sp, #24]
 8006964:	3b01      	subs	r3, #1
 8006966:	189b      	adds	r3, r3, r2
 8006968:	2201      	movs	r2, #1
 800696a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800696c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800696e:	4013      	ands	r3, r2
 8006970:	930e      	str	r3, [sp, #56]	@ 0x38
 8006972:	0031      	movs	r1, r6
 8006974:	9805      	ldr	r0, [sp, #20]
 8006976:	f7ff fa71 	bl	8005e5c <quorem>
 800697a:	0039      	movs	r1, r7
 800697c:	0005      	movs	r5, r0
 800697e:	900a      	str	r0, [sp, #40]	@ 0x28
 8006980:	9805      	ldr	r0, [sp, #20]
 8006982:	f000 fcb9 	bl	80072f8 <__mcmp>
 8006986:	9a04      	ldr	r2, [sp, #16]
 8006988:	900d      	str	r0, [sp, #52]	@ 0x34
 800698a:	0031      	movs	r1, r6
 800698c:	9803      	ldr	r0, [sp, #12]
 800698e:	f000 fccf 	bl	8007330 <__mdiff>
 8006992:	2201      	movs	r2, #1
 8006994:	68c3      	ldr	r3, [r0, #12]
 8006996:	0004      	movs	r4, r0
 8006998:	3530      	adds	r5, #48	@ 0x30
 800699a:	9209      	str	r2, [sp, #36]	@ 0x24
 800699c:	2b00      	cmp	r3, #0
 800699e:	d104      	bne.n	80069aa <_dtoa_r+0xa42>
 80069a0:	0001      	movs	r1, r0
 80069a2:	9805      	ldr	r0, [sp, #20]
 80069a4:	f000 fca8 	bl	80072f8 <__mcmp>
 80069a8:	9009      	str	r0, [sp, #36]	@ 0x24
 80069aa:	0021      	movs	r1, r4
 80069ac:	9803      	ldr	r0, [sp, #12]
 80069ae:	f000 fa15 	bl	8006ddc <_Bfree>
 80069b2:	9b06      	ldr	r3, [sp, #24]
 80069b4:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80069b6:	1c5c      	adds	r4, r3, #1
 80069b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80069ba:	4313      	orrs	r3, r2
 80069bc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80069be:	4313      	orrs	r3, r2
 80069c0:	d116      	bne.n	80069f0 <_dtoa_r+0xa88>
 80069c2:	2d39      	cmp	r5, #57	@ 0x39
 80069c4:	d02f      	beq.n	8006a26 <_dtoa_r+0xabe>
 80069c6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80069c8:	2b00      	cmp	r3, #0
 80069ca:	dd01      	ble.n	80069d0 <_dtoa_r+0xa68>
 80069cc:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80069ce:	3531      	adds	r5, #49	@ 0x31
 80069d0:	9b06      	ldr	r3, [sp, #24]
 80069d2:	701d      	strb	r5, [r3, #0]
 80069d4:	e532      	b.n	800643c <_dtoa_r+0x4d4>
 80069d6:	46c0      	nop			@ (mov r8, r8)
 80069d8:	40240000 	.word	0x40240000
 80069dc:	00000433 	.word	0x00000433
 80069e0:	7ff00000 	.word	0x7ff00000
 80069e4:	0800a387 	.word	0x0800a387
 80069e8:	0800a32f 	.word	0x0800a32f
 80069ec:	000002ef 	.word	0x000002ef
 80069f0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80069f2:	2b00      	cmp	r3, #0
 80069f4:	db04      	blt.n	8006a00 <_dtoa_r+0xa98>
 80069f6:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80069f8:	4313      	orrs	r3, r2
 80069fa:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80069fc:	4313      	orrs	r3, r2
 80069fe:	d11e      	bne.n	8006a3e <_dtoa_r+0xad6>
 8006a00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006a02:	2b00      	cmp	r3, #0
 8006a04:	dde4      	ble.n	80069d0 <_dtoa_r+0xa68>
 8006a06:	9905      	ldr	r1, [sp, #20]
 8006a08:	2201      	movs	r2, #1
 8006a0a:	9803      	ldr	r0, [sp, #12]
 8006a0c:	f000 fc08 	bl	8007220 <__lshift>
 8006a10:	0031      	movs	r1, r6
 8006a12:	9005      	str	r0, [sp, #20]
 8006a14:	f000 fc70 	bl	80072f8 <__mcmp>
 8006a18:	2800      	cmp	r0, #0
 8006a1a:	dc02      	bgt.n	8006a22 <_dtoa_r+0xaba>
 8006a1c:	d1d8      	bne.n	80069d0 <_dtoa_r+0xa68>
 8006a1e:	07eb      	lsls	r3, r5, #31
 8006a20:	d5d6      	bpl.n	80069d0 <_dtoa_r+0xa68>
 8006a22:	2d39      	cmp	r5, #57	@ 0x39
 8006a24:	d1d2      	bne.n	80069cc <_dtoa_r+0xa64>
 8006a26:	2339      	movs	r3, #57	@ 0x39
 8006a28:	9a06      	ldr	r2, [sp, #24]
 8006a2a:	7013      	strb	r3, [r2, #0]
 8006a2c:	0023      	movs	r3, r4
 8006a2e:	001c      	movs	r4, r3
 8006a30:	3b01      	subs	r3, #1
 8006a32:	781a      	ldrb	r2, [r3, #0]
 8006a34:	2a39      	cmp	r2, #57	@ 0x39
 8006a36:	d050      	beq.n	8006ada <_dtoa_r+0xb72>
 8006a38:	3201      	adds	r2, #1
 8006a3a:	701a      	strb	r2, [r3, #0]
 8006a3c:	e4fe      	b.n	800643c <_dtoa_r+0x4d4>
 8006a3e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006a40:	2b00      	cmp	r3, #0
 8006a42:	dd03      	ble.n	8006a4c <_dtoa_r+0xae4>
 8006a44:	2d39      	cmp	r5, #57	@ 0x39
 8006a46:	d0ee      	beq.n	8006a26 <_dtoa_r+0xabe>
 8006a48:	3501      	adds	r5, #1
 8006a4a:	e7c1      	b.n	80069d0 <_dtoa_r+0xa68>
 8006a4c:	9b06      	ldr	r3, [sp, #24]
 8006a4e:	9a06      	ldr	r2, [sp, #24]
 8006a50:	701d      	strb	r5, [r3, #0]
 8006a52:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006a54:	4293      	cmp	r3, r2
 8006a56:	d02b      	beq.n	8006ab0 <_dtoa_r+0xb48>
 8006a58:	2300      	movs	r3, #0
 8006a5a:	220a      	movs	r2, #10
 8006a5c:	9905      	ldr	r1, [sp, #20]
 8006a5e:	9803      	ldr	r0, [sp, #12]
 8006a60:	f000 f9e0 	bl	8006e24 <__multadd>
 8006a64:	9b04      	ldr	r3, [sp, #16]
 8006a66:	9005      	str	r0, [sp, #20]
 8006a68:	429f      	cmp	r7, r3
 8006a6a:	d109      	bne.n	8006a80 <_dtoa_r+0xb18>
 8006a6c:	0039      	movs	r1, r7
 8006a6e:	2300      	movs	r3, #0
 8006a70:	220a      	movs	r2, #10
 8006a72:	9803      	ldr	r0, [sp, #12]
 8006a74:	f000 f9d6 	bl	8006e24 <__multadd>
 8006a78:	0007      	movs	r7, r0
 8006a7a:	9004      	str	r0, [sp, #16]
 8006a7c:	9406      	str	r4, [sp, #24]
 8006a7e:	e778      	b.n	8006972 <_dtoa_r+0xa0a>
 8006a80:	0039      	movs	r1, r7
 8006a82:	2300      	movs	r3, #0
 8006a84:	220a      	movs	r2, #10
 8006a86:	9803      	ldr	r0, [sp, #12]
 8006a88:	f000 f9cc 	bl	8006e24 <__multadd>
 8006a8c:	2300      	movs	r3, #0
 8006a8e:	0007      	movs	r7, r0
 8006a90:	220a      	movs	r2, #10
 8006a92:	9904      	ldr	r1, [sp, #16]
 8006a94:	9803      	ldr	r0, [sp, #12]
 8006a96:	f000 f9c5 	bl	8006e24 <__multadd>
 8006a9a:	9004      	str	r0, [sp, #16]
 8006a9c:	e7ee      	b.n	8006a7c <_dtoa_r+0xb14>
 8006a9e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006aa0:	2401      	movs	r4, #1
 8006aa2:	2b00      	cmp	r3, #0
 8006aa4:	dd00      	ble.n	8006aa8 <_dtoa_r+0xb40>
 8006aa6:	001c      	movs	r4, r3
 8006aa8:	9704      	str	r7, [sp, #16]
 8006aaa:	2700      	movs	r7, #0
 8006aac:	9b08      	ldr	r3, [sp, #32]
 8006aae:	191c      	adds	r4, r3, r4
 8006ab0:	9905      	ldr	r1, [sp, #20]
 8006ab2:	2201      	movs	r2, #1
 8006ab4:	9803      	ldr	r0, [sp, #12]
 8006ab6:	f000 fbb3 	bl	8007220 <__lshift>
 8006aba:	0031      	movs	r1, r6
 8006abc:	9005      	str	r0, [sp, #20]
 8006abe:	f000 fc1b 	bl	80072f8 <__mcmp>
 8006ac2:	2800      	cmp	r0, #0
 8006ac4:	dcb2      	bgt.n	8006a2c <_dtoa_r+0xac4>
 8006ac6:	d101      	bne.n	8006acc <_dtoa_r+0xb64>
 8006ac8:	07ed      	lsls	r5, r5, #31
 8006aca:	d4af      	bmi.n	8006a2c <_dtoa_r+0xac4>
 8006acc:	0023      	movs	r3, r4
 8006ace:	001c      	movs	r4, r3
 8006ad0:	3b01      	subs	r3, #1
 8006ad2:	781a      	ldrb	r2, [r3, #0]
 8006ad4:	2a30      	cmp	r2, #48	@ 0x30
 8006ad6:	d0fa      	beq.n	8006ace <_dtoa_r+0xb66>
 8006ad8:	e4b0      	b.n	800643c <_dtoa_r+0x4d4>
 8006ada:	9a08      	ldr	r2, [sp, #32]
 8006adc:	429a      	cmp	r2, r3
 8006ade:	d1a6      	bne.n	8006a2e <_dtoa_r+0xac6>
 8006ae0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8006ae2:	3301      	adds	r3, #1
 8006ae4:	930c      	str	r3, [sp, #48]	@ 0x30
 8006ae6:	2331      	movs	r3, #49	@ 0x31
 8006ae8:	7013      	strb	r3, [r2, #0]
 8006aea:	e4a7      	b.n	800643c <_dtoa_r+0x4d4>
 8006aec:	4b14      	ldr	r3, [pc, #80]	@ (8006b40 <_dtoa_r+0xbd8>)
 8006aee:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8006af0:	9308      	str	r3, [sp, #32]
 8006af2:	4b14      	ldr	r3, [pc, #80]	@ (8006b44 <_dtoa_r+0xbdc>)
 8006af4:	2a00      	cmp	r2, #0
 8006af6:	d001      	beq.n	8006afc <_dtoa_r+0xb94>
 8006af8:	f7ff fa7e 	bl	8005ff8 <_dtoa_r+0x90>
 8006afc:	f7ff fa7e 	bl	8005ffc <_dtoa_r+0x94>
 8006b00:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8006b02:	2b01      	cmp	r3, #1
 8006b04:	dc00      	bgt.n	8006b08 <_dtoa_r+0xba0>
 8006b06:	e648      	b.n	800679a <_dtoa_r+0x832>
 8006b08:	2001      	movs	r0, #1
 8006b0a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8006b0c:	e665      	b.n	80067da <_dtoa_r+0x872>
 8006b0e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006b10:	2b00      	cmp	r3, #0
 8006b12:	dc00      	bgt.n	8006b16 <_dtoa_r+0xbae>
 8006b14:	e6a9      	b.n	800686a <_dtoa_r+0x902>
 8006b16:	2400      	movs	r4, #0
 8006b18:	0031      	movs	r1, r6
 8006b1a:	9805      	ldr	r0, [sp, #20]
 8006b1c:	f7ff f99e 	bl	8005e5c <quorem>
 8006b20:	9b08      	ldr	r3, [sp, #32]
 8006b22:	3030      	adds	r0, #48	@ 0x30
 8006b24:	5518      	strb	r0, [r3, r4]
 8006b26:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006b28:	3401      	adds	r4, #1
 8006b2a:	0005      	movs	r5, r0
 8006b2c:	42a3      	cmp	r3, r4
 8006b2e:	ddb6      	ble.n	8006a9e <_dtoa_r+0xb36>
 8006b30:	2300      	movs	r3, #0
 8006b32:	220a      	movs	r2, #10
 8006b34:	9905      	ldr	r1, [sp, #20]
 8006b36:	9803      	ldr	r0, [sp, #12]
 8006b38:	f000 f974 	bl	8006e24 <__multadd>
 8006b3c:	9005      	str	r0, [sp, #20]
 8006b3e:	e7eb      	b.n	8006b18 <_dtoa_r+0xbb0>
 8006b40:	0800a30b 	.word	0x0800a30b
 8006b44:	0800a313 	.word	0x0800a313

08006b48 <_free_r>:
 8006b48:	b570      	push	{r4, r5, r6, lr}
 8006b4a:	0005      	movs	r5, r0
 8006b4c:	1e0c      	subs	r4, r1, #0
 8006b4e:	d010      	beq.n	8006b72 <_free_r+0x2a>
 8006b50:	3c04      	subs	r4, #4
 8006b52:	6823      	ldr	r3, [r4, #0]
 8006b54:	2b00      	cmp	r3, #0
 8006b56:	da00      	bge.n	8006b5a <_free_r+0x12>
 8006b58:	18e4      	adds	r4, r4, r3
 8006b5a:	0028      	movs	r0, r5
 8006b5c:	f000 f8ea 	bl	8006d34 <__malloc_lock>
 8006b60:	4a1d      	ldr	r2, [pc, #116]	@ (8006bd8 <_free_r+0x90>)
 8006b62:	6813      	ldr	r3, [r2, #0]
 8006b64:	2b00      	cmp	r3, #0
 8006b66:	d105      	bne.n	8006b74 <_free_r+0x2c>
 8006b68:	6063      	str	r3, [r4, #4]
 8006b6a:	6014      	str	r4, [r2, #0]
 8006b6c:	0028      	movs	r0, r5
 8006b6e:	f000 f8e9 	bl	8006d44 <__malloc_unlock>
 8006b72:	bd70      	pop	{r4, r5, r6, pc}
 8006b74:	42a3      	cmp	r3, r4
 8006b76:	d908      	bls.n	8006b8a <_free_r+0x42>
 8006b78:	6820      	ldr	r0, [r4, #0]
 8006b7a:	1821      	adds	r1, r4, r0
 8006b7c:	428b      	cmp	r3, r1
 8006b7e:	d1f3      	bne.n	8006b68 <_free_r+0x20>
 8006b80:	6819      	ldr	r1, [r3, #0]
 8006b82:	685b      	ldr	r3, [r3, #4]
 8006b84:	1809      	adds	r1, r1, r0
 8006b86:	6021      	str	r1, [r4, #0]
 8006b88:	e7ee      	b.n	8006b68 <_free_r+0x20>
 8006b8a:	001a      	movs	r2, r3
 8006b8c:	685b      	ldr	r3, [r3, #4]
 8006b8e:	2b00      	cmp	r3, #0
 8006b90:	d001      	beq.n	8006b96 <_free_r+0x4e>
 8006b92:	42a3      	cmp	r3, r4
 8006b94:	d9f9      	bls.n	8006b8a <_free_r+0x42>
 8006b96:	6811      	ldr	r1, [r2, #0]
 8006b98:	1850      	adds	r0, r2, r1
 8006b9a:	42a0      	cmp	r0, r4
 8006b9c:	d10b      	bne.n	8006bb6 <_free_r+0x6e>
 8006b9e:	6820      	ldr	r0, [r4, #0]
 8006ba0:	1809      	adds	r1, r1, r0
 8006ba2:	1850      	adds	r0, r2, r1
 8006ba4:	6011      	str	r1, [r2, #0]
 8006ba6:	4283      	cmp	r3, r0
 8006ba8:	d1e0      	bne.n	8006b6c <_free_r+0x24>
 8006baa:	6818      	ldr	r0, [r3, #0]
 8006bac:	685b      	ldr	r3, [r3, #4]
 8006bae:	1841      	adds	r1, r0, r1
 8006bb0:	6011      	str	r1, [r2, #0]
 8006bb2:	6053      	str	r3, [r2, #4]
 8006bb4:	e7da      	b.n	8006b6c <_free_r+0x24>
 8006bb6:	42a0      	cmp	r0, r4
 8006bb8:	d902      	bls.n	8006bc0 <_free_r+0x78>
 8006bba:	230c      	movs	r3, #12
 8006bbc:	602b      	str	r3, [r5, #0]
 8006bbe:	e7d5      	b.n	8006b6c <_free_r+0x24>
 8006bc0:	6820      	ldr	r0, [r4, #0]
 8006bc2:	1821      	adds	r1, r4, r0
 8006bc4:	428b      	cmp	r3, r1
 8006bc6:	d103      	bne.n	8006bd0 <_free_r+0x88>
 8006bc8:	6819      	ldr	r1, [r3, #0]
 8006bca:	685b      	ldr	r3, [r3, #4]
 8006bcc:	1809      	adds	r1, r1, r0
 8006bce:	6021      	str	r1, [r4, #0]
 8006bd0:	6063      	str	r3, [r4, #4]
 8006bd2:	6054      	str	r4, [r2, #4]
 8006bd4:	e7ca      	b.n	8006b6c <_free_r+0x24>
 8006bd6:	46c0      	nop			@ (mov r8, r8)
 8006bd8:	200003f8 	.word	0x200003f8

08006bdc <malloc>:
 8006bdc:	b510      	push	{r4, lr}
 8006bde:	4b03      	ldr	r3, [pc, #12]	@ (8006bec <malloc+0x10>)
 8006be0:	0001      	movs	r1, r0
 8006be2:	6818      	ldr	r0, [r3, #0]
 8006be4:	f000 f826 	bl	8006c34 <_malloc_r>
 8006be8:	bd10      	pop	{r4, pc}
 8006bea:	46c0      	nop			@ (mov r8, r8)
 8006bec:	2000001c 	.word	0x2000001c

08006bf0 <sbrk_aligned>:
 8006bf0:	b570      	push	{r4, r5, r6, lr}
 8006bf2:	4e0f      	ldr	r6, [pc, #60]	@ (8006c30 <sbrk_aligned+0x40>)
 8006bf4:	000d      	movs	r5, r1
 8006bf6:	6831      	ldr	r1, [r6, #0]
 8006bf8:	0004      	movs	r4, r0
 8006bfa:	2900      	cmp	r1, #0
 8006bfc:	d102      	bne.n	8006c04 <sbrk_aligned+0x14>
 8006bfe:	f002 fd77 	bl	80096f0 <_sbrk_r>
 8006c02:	6030      	str	r0, [r6, #0]
 8006c04:	0029      	movs	r1, r5
 8006c06:	0020      	movs	r0, r4
 8006c08:	f002 fd72 	bl	80096f0 <_sbrk_r>
 8006c0c:	1c43      	adds	r3, r0, #1
 8006c0e:	d103      	bne.n	8006c18 <sbrk_aligned+0x28>
 8006c10:	2501      	movs	r5, #1
 8006c12:	426d      	negs	r5, r5
 8006c14:	0028      	movs	r0, r5
 8006c16:	bd70      	pop	{r4, r5, r6, pc}
 8006c18:	2303      	movs	r3, #3
 8006c1a:	1cc5      	adds	r5, r0, #3
 8006c1c:	439d      	bics	r5, r3
 8006c1e:	42a8      	cmp	r0, r5
 8006c20:	d0f8      	beq.n	8006c14 <sbrk_aligned+0x24>
 8006c22:	1a29      	subs	r1, r5, r0
 8006c24:	0020      	movs	r0, r4
 8006c26:	f002 fd63 	bl	80096f0 <_sbrk_r>
 8006c2a:	3001      	adds	r0, #1
 8006c2c:	d1f2      	bne.n	8006c14 <sbrk_aligned+0x24>
 8006c2e:	e7ef      	b.n	8006c10 <sbrk_aligned+0x20>
 8006c30:	200003f4 	.word	0x200003f4

08006c34 <_malloc_r>:
 8006c34:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006c36:	2203      	movs	r2, #3
 8006c38:	1ccb      	adds	r3, r1, #3
 8006c3a:	4393      	bics	r3, r2
 8006c3c:	3308      	adds	r3, #8
 8006c3e:	0005      	movs	r5, r0
 8006c40:	001f      	movs	r7, r3
 8006c42:	2b0c      	cmp	r3, #12
 8006c44:	d234      	bcs.n	8006cb0 <_malloc_r+0x7c>
 8006c46:	270c      	movs	r7, #12
 8006c48:	42b9      	cmp	r1, r7
 8006c4a:	d833      	bhi.n	8006cb4 <_malloc_r+0x80>
 8006c4c:	0028      	movs	r0, r5
 8006c4e:	f000 f871 	bl	8006d34 <__malloc_lock>
 8006c52:	4e37      	ldr	r6, [pc, #220]	@ (8006d30 <_malloc_r+0xfc>)
 8006c54:	6833      	ldr	r3, [r6, #0]
 8006c56:	001c      	movs	r4, r3
 8006c58:	2c00      	cmp	r4, #0
 8006c5a:	d12f      	bne.n	8006cbc <_malloc_r+0x88>
 8006c5c:	0039      	movs	r1, r7
 8006c5e:	0028      	movs	r0, r5
 8006c60:	f7ff ffc6 	bl	8006bf0 <sbrk_aligned>
 8006c64:	0004      	movs	r4, r0
 8006c66:	1c43      	adds	r3, r0, #1
 8006c68:	d15f      	bne.n	8006d2a <_malloc_r+0xf6>
 8006c6a:	6834      	ldr	r4, [r6, #0]
 8006c6c:	9400      	str	r4, [sp, #0]
 8006c6e:	9b00      	ldr	r3, [sp, #0]
 8006c70:	2b00      	cmp	r3, #0
 8006c72:	d14a      	bne.n	8006d0a <_malloc_r+0xd6>
 8006c74:	2c00      	cmp	r4, #0
 8006c76:	d052      	beq.n	8006d1e <_malloc_r+0xea>
 8006c78:	6823      	ldr	r3, [r4, #0]
 8006c7a:	0028      	movs	r0, r5
 8006c7c:	18e3      	adds	r3, r4, r3
 8006c7e:	9900      	ldr	r1, [sp, #0]
 8006c80:	9301      	str	r3, [sp, #4]
 8006c82:	f002 fd35 	bl	80096f0 <_sbrk_r>
 8006c86:	9b01      	ldr	r3, [sp, #4]
 8006c88:	4283      	cmp	r3, r0
 8006c8a:	d148      	bne.n	8006d1e <_malloc_r+0xea>
 8006c8c:	6823      	ldr	r3, [r4, #0]
 8006c8e:	0028      	movs	r0, r5
 8006c90:	1aff      	subs	r7, r7, r3
 8006c92:	0039      	movs	r1, r7
 8006c94:	f7ff ffac 	bl	8006bf0 <sbrk_aligned>
 8006c98:	3001      	adds	r0, #1
 8006c9a:	d040      	beq.n	8006d1e <_malloc_r+0xea>
 8006c9c:	6823      	ldr	r3, [r4, #0]
 8006c9e:	19db      	adds	r3, r3, r7
 8006ca0:	6023      	str	r3, [r4, #0]
 8006ca2:	6833      	ldr	r3, [r6, #0]
 8006ca4:	685a      	ldr	r2, [r3, #4]
 8006ca6:	2a00      	cmp	r2, #0
 8006ca8:	d133      	bne.n	8006d12 <_malloc_r+0xde>
 8006caa:	9b00      	ldr	r3, [sp, #0]
 8006cac:	6033      	str	r3, [r6, #0]
 8006cae:	e019      	b.n	8006ce4 <_malloc_r+0xb0>
 8006cb0:	2b00      	cmp	r3, #0
 8006cb2:	dac9      	bge.n	8006c48 <_malloc_r+0x14>
 8006cb4:	230c      	movs	r3, #12
 8006cb6:	602b      	str	r3, [r5, #0]
 8006cb8:	2000      	movs	r0, #0
 8006cba:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006cbc:	6821      	ldr	r1, [r4, #0]
 8006cbe:	1bc9      	subs	r1, r1, r7
 8006cc0:	d420      	bmi.n	8006d04 <_malloc_r+0xd0>
 8006cc2:	290b      	cmp	r1, #11
 8006cc4:	d90a      	bls.n	8006cdc <_malloc_r+0xa8>
 8006cc6:	19e2      	adds	r2, r4, r7
 8006cc8:	6027      	str	r7, [r4, #0]
 8006cca:	42a3      	cmp	r3, r4
 8006ccc:	d104      	bne.n	8006cd8 <_malloc_r+0xa4>
 8006cce:	6032      	str	r2, [r6, #0]
 8006cd0:	6863      	ldr	r3, [r4, #4]
 8006cd2:	6011      	str	r1, [r2, #0]
 8006cd4:	6053      	str	r3, [r2, #4]
 8006cd6:	e005      	b.n	8006ce4 <_malloc_r+0xb0>
 8006cd8:	605a      	str	r2, [r3, #4]
 8006cda:	e7f9      	b.n	8006cd0 <_malloc_r+0x9c>
 8006cdc:	6862      	ldr	r2, [r4, #4]
 8006cde:	42a3      	cmp	r3, r4
 8006ce0:	d10e      	bne.n	8006d00 <_malloc_r+0xcc>
 8006ce2:	6032      	str	r2, [r6, #0]
 8006ce4:	0028      	movs	r0, r5
 8006ce6:	f000 f82d 	bl	8006d44 <__malloc_unlock>
 8006cea:	0020      	movs	r0, r4
 8006cec:	2207      	movs	r2, #7
 8006cee:	300b      	adds	r0, #11
 8006cf0:	1d23      	adds	r3, r4, #4
 8006cf2:	4390      	bics	r0, r2
 8006cf4:	1ac2      	subs	r2, r0, r3
 8006cf6:	4298      	cmp	r0, r3
 8006cf8:	d0df      	beq.n	8006cba <_malloc_r+0x86>
 8006cfa:	1a1b      	subs	r3, r3, r0
 8006cfc:	50a3      	str	r3, [r4, r2]
 8006cfe:	e7dc      	b.n	8006cba <_malloc_r+0x86>
 8006d00:	605a      	str	r2, [r3, #4]
 8006d02:	e7ef      	b.n	8006ce4 <_malloc_r+0xb0>
 8006d04:	0023      	movs	r3, r4
 8006d06:	6864      	ldr	r4, [r4, #4]
 8006d08:	e7a6      	b.n	8006c58 <_malloc_r+0x24>
 8006d0a:	9c00      	ldr	r4, [sp, #0]
 8006d0c:	6863      	ldr	r3, [r4, #4]
 8006d0e:	9300      	str	r3, [sp, #0]
 8006d10:	e7ad      	b.n	8006c6e <_malloc_r+0x3a>
 8006d12:	001a      	movs	r2, r3
 8006d14:	685b      	ldr	r3, [r3, #4]
 8006d16:	42a3      	cmp	r3, r4
 8006d18:	d1fb      	bne.n	8006d12 <_malloc_r+0xde>
 8006d1a:	2300      	movs	r3, #0
 8006d1c:	e7da      	b.n	8006cd4 <_malloc_r+0xa0>
 8006d1e:	230c      	movs	r3, #12
 8006d20:	0028      	movs	r0, r5
 8006d22:	602b      	str	r3, [r5, #0]
 8006d24:	f000 f80e 	bl	8006d44 <__malloc_unlock>
 8006d28:	e7c6      	b.n	8006cb8 <_malloc_r+0x84>
 8006d2a:	6007      	str	r7, [r0, #0]
 8006d2c:	e7da      	b.n	8006ce4 <_malloc_r+0xb0>
 8006d2e:	46c0      	nop			@ (mov r8, r8)
 8006d30:	200003f8 	.word	0x200003f8

08006d34 <__malloc_lock>:
 8006d34:	b510      	push	{r4, lr}
 8006d36:	4802      	ldr	r0, [pc, #8]	@ (8006d40 <__malloc_lock+0xc>)
 8006d38:	f7ff f87f 	bl	8005e3a <__retarget_lock_acquire_recursive>
 8006d3c:	bd10      	pop	{r4, pc}
 8006d3e:	46c0      	nop			@ (mov r8, r8)
 8006d40:	200003f0 	.word	0x200003f0

08006d44 <__malloc_unlock>:
 8006d44:	b510      	push	{r4, lr}
 8006d46:	4802      	ldr	r0, [pc, #8]	@ (8006d50 <__malloc_unlock+0xc>)
 8006d48:	f7ff f878 	bl	8005e3c <__retarget_lock_release_recursive>
 8006d4c:	bd10      	pop	{r4, pc}
 8006d4e:	46c0      	nop			@ (mov r8, r8)
 8006d50:	200003f0 	.word	0x200003f0

08006d54 <_Balloc>:
 8006d54:	b570      	push	{r4, r5, r6, lr}
 8006d56:	69c5      	ldr	r5, [r0, #28]
 8006d58:	0006      	movs	r6, r0
 8006d5a:	000c      	movs	r4, r1
 8006d5c:	2d00      	cmp	r5, #0
 8006d5e:	d10e      	bne.n	8006d7e <_Balloc+0x2a>
 8006d60:	2010      	movs	r0, #16
 8006d62:	f7ff ff3b 	bl	8006bdc <malloc>
 8006d66:	1e02      	subs	r2, r0, #0
 8006d68:	61f0      	str	r0, [r6, #28]
 8006d6a:	d104      	bne.n	8006d76 <_Balloc+0x22>
 8006d6c:	216b      	movs	r1, #107	@ 0x6b
 8006d6e:	4b19      	ldr	r3, [pc, #100]	@ (8006dd4 <_Balloc+0x80>)
 8006d70:	4819      	ldr	r0, [pc, #100]	@ (8006dd8 <_Balloc+0x84>)
 8006d72:	f002 fcdf 	bl	8009734 <__assert_func>
 8006d76:	6045      	str	r5, [r0, #4]
 8006d78:	6085      	str	r5, [r0, #8]
 8006d7a:	6005      	str	r5, [r0, #0]
 8006d7c:	60c5      	str	r5, [r0, #12]
 8006d7e:	69f5      	ldr	r5, [r6, #28]
 8006d80:	68eb      	ldr	r3, [r5, #12]
 8006d82:	2b00      	cmp	r3, #0
 8006d84:	d013      	beq.n	8006dae <_Balloc+0x5a>
 8006d86:	69f3      	ldr	r3, [r6, #28]
 8006d88:	00a2      	lsls	r2, r4, #2
 8006d8a:	68db      	ldr	r3, [r3, #12]
 8006d8c:	189b      	adds	r3, r3, r2
 8006d8e:	6818      	ldr	r0, [r3, #0]
 8006d90:	2800      	cmp	r0, #0
 8006d92:	d118      	bne.n	8006dc6 <_Balloc+0x72>
 8006d94:	2101      	movs	r1, #1
 8006d96:	000d      	movs	r5, r1
 8006d98:	40a5      	lsls	r5, r4
 8006d9a:	1d6a      	adds	r2, r5, #5
 8006d9c:	0030      	movs	r0, r6
 8006d9e:	0092      	lsls	r2, r2, #2
 8006da0:	f002 fce6 	bl	8009770 <_calloc_r>
 8006da4:	2800      	cmp	r0, #0
 8006da6:	d00c      	beq.n	8006dc2 <_Balloc+0x6e>
 8006da8:	6044      	str	r4, [r0, #4]
 8006daa:	6085      	str	r5, [r0, #8]
 8006dac:	e00d      	b.n	8006dca <_Balloc+0x76>
 8006dae:	2221      	movs	r2, #33	@ 0x21
 8006db0:	2104      	movs	r1, #4
 8006db2:	0030      	movs	r0, r6
 8006db4:	f002 fcdc 	bl	8009770 <_calloc_r>
 8006db8:	69f3      	ldr	r3, [r6, #28]
 8006dba:	60e8      	str	r0, [r5, #12]
 8006dbc:	68db      	ldr	r3, [r3, #12]
 8006dbe:	2b00      	cmp	r3, #0
 8006dc0:	d1e1      	bne.n	8006d86 <_Balloc+0x32>
 8006dc2:	2000      	movs	r0, #0
 8006dc4:	bd70      	pop	{r4, r5, r6, pc}
 8006dc6:	6802      	ldr	r2, [r0, #0]
 8006dc8:	601a      	str	r2, [r3, #0]
 8006dca:	2300      	movs	r3, #0
 8006dcc:	6103      	str	r3, [r0, #16]
 8006dce:	60c3      	str	r3, [r0, #12]
 8006dd0:	e7f8      	b.n	8006dc4 <_Balloc+0x70>
 8006dd2:	46c0      	nop			@ (mov r8, r8)
 8006dd4:	0800a318 	.word	0x0800a318
 8006dd8:	0800a398 	.word	0x0800a398

08006ddc <_Bfree>:
 8006ddc:	b570      	push	{r4, r5, r6, lr}
 8006dde:	69c6      	ldr	r6, [r0, #28]
 8006de0:	0005      	movs	r5, r0
 8006de2:	000c      	movs	r4, r1
 8006de4:	2e00      	cmp	r6, #0
 8006de6:	d10e      	bne.n	8006e06 <_Bfree+0x2a>
 8006de8:	2010      	movs	r0, #16
 8006dea:	f7ff fef7 	bl	8006bdc <malloc>
 8006dee:	1e02      	subs	r2, r0, #0
 8006df0:	61e8      	str	r0, [r5, #28]
 8006df2:	d104      	bne.n	8006dfe <_Bfree+0x22>
 8006df4:	218f      	movs	r1, #143	@ 0x8f
 8006df6:	4b09      	ldr	r3, [pc, #36]	@ (8006e1c <_Bfree+0x40>)
 8006df8:	4809      	ldr	r0, [pc, #36]	@ (8006e20 <_Bfree+0x44>)
 8006dfa:	f002 fc9b 	bl	8009734 <__assert_func>
 8006dfe:	6046      	str	r6, [r0, #4]
 8006e00:	6086      	str	r6, [r0, #8]
 8006e02:	6006      	str	r6, [r0, #0]
 8006e04:	60c6      	str	r6, [r0, #12]
 8006e06:	2c00      	cmp	r4, #0
 8006e08:	d007      	beq.n	8006e1a <_Bfree+0x3e>
 8006e0a:	69eb      	ldr	r3, [r5, #28]
 8006e0c:	6862      	ldr	r2, [r4, #4]
 8006e0e:	68db      	ldr	r3, [r3, #12]
 8006e10:	0092      	lsls	r2, r2, #2
 8006e12:	189b      	adds	r3, r3, r2
 8006e14:	681a      	ldr	r2, [r3, #0]
 8006e16:	6022      	str	r2, [r4, #0]
 8006e18:	601c      	str	r4, [r3, #0]
 8006e1a:	bd70      	pop	{r4, r5, r6, pc}
 8006e1c:	0800a318 	.word	0x0800a318
 8006e20:	0800a398 	.word	0x0800a398

08006e24 <__multadd>:
 8006e24:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006e26:	000f      	movs	r7, r1
 8006e28:	9001      	str	r0, [sp, #4]
 8006e2a:	000c      	movs	r4, r1
 8006e2c:	001e      	movs	r6, r3
 8006e2e:	2000      	movs	r0, #0
 8006e30:	690d      	ldr	r5, [r1, #16]
 8006e32:	3714      	adds	r7, #20
 8006e34:	683b      	ldr	r3, [r7, #0]
 8006e36:	3001      	adds	r0, #1
 8006e38:	b299      	uxth	r1, r3
 8006e3a:	4351      	muls	r1, r2
 8006e3c:	0c1b      	lsrs	r3, r3, #16
 8006e3e:	4353      	muls	r3, r2
 8006e40:	1989      	adds	r1, r1, r6
 8006e42:	0c0e      	lsrs	r6, r1, #16
 8006e44:	199b      	adds	r3, r3, r6
 8006e46:	0c1e      	lsrs	r6, r3, #16
 8006e48:	b289      	uxth	r1, r1
 8006e4a:	041b      	lsls	r3, r3, #16
 8006e4c:	185b      	adds	r3, r3, r1
 8006e4e:	c708      	stmia	r7!, {r3}
 8006e50:	4285      	cmp	r5, r0
 8006e52:	dcef      	bgt.n	8006e34 <__multadd+0x10>
 8006e54:	2e00      	cmp	r6, #0
 8006e56:	d022      	beq.n	8006e9e <__multadd+0x7a>
 8006e58:	68a3      	ldr	r3, [r4, #8]
 8006e5a:	42ab      	cmp	r3, r5
 8006e5c:	dc19      	bgt.n	8006e92 <__multadd+0x6e>
 8006e5e:	6861      	ldr	r1, [r4, #4]
 8006e60:	9801      	ldr	r0, [sp, #4]
 8006e62:	3101      	adds	r1, #1
 8006e64:	f7ff ff76 	bl	8006d54 <_Balloc>
 8006e68:	1e07      	subs	r7, r0, #0
 8006e6a:	d105      	bne.n	8006e78 <__multadd+0x54>
 8006e6c:	003a      	movs	r2, r7
 8006e6e:	21ba      	movs	r1, #186	@ 0xba
 8006e70:	4b0c      	ldr	r3, [pc, #48]	@ (8006ea4 <__multadd+0x80>)
 8006e72:	480d      	ldr	r0, [pc, #52]	@ (8006ea8 <__multadd+0x84>)
 8006e74:	f002 fc5e 	bl	8009734 <__assert_func>
 8006e78:	0021      	movs	r1, r4
 8006e7a:	6922      	ldr	r2, [r4, #16]
 8006e7c:	310c      	adds	r1, #12
 8006e7e:	3202      	adds	r2, #2
 8006e80:	0092      	lsls	r2, r2, #2
 8006e82:	300c      	adds	r0, #12
 8006e84:	f002 fc46 	bl	8009714 <memcpy>
 8006e88:	0021      	movs	r1, r4
 8006e8a:	9801      	ldr	r0, [sp, #4]
 8006e8c:	f7ff ffa6 	bl	8006ddc <_Bfree>
 8006e90:	003c      	movs	r4, r7
 8006e92:	1d2b      	adds	r3, r5, #4
 8006e94:	009b      	lsls	r3, r3, #2
 8006e96:	18e3      	adds	r3, r4, r3
 8006e98:	3501      	adds	r5, #1
 8006e9a:	605e      	str	r6, [r3, #4]
 8006e9c:	6125      	str	r5, [r4, #16]
 8006e9e:	0020      	movs	r0, r4
 8006ea0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006ea2:	46c0      	nop			@ (mov r8, r8)
 8006ea4:	0800a387 	.word	0x0800a387
 8006ea8:	0800a398 	.word	0x0800a398

08006eac <__s2b>:
 8006eac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006eae:	0007      	movs	r7, r0
 8006eb0:	0018      	movs	r0, r3
 8006eb2:	000c      	movs	r4, r1
 8006eb4:	3008      	adds	r0, #8
 8006eb6:	2109      	movs	r1, #9
 8006eb8:	9301      	str	r3, [sp, #4]
 8006eba:	0015      	movs	r5, r2
 8006ebc:	f7f9 f9ca 	bl	8000254 <__divsi3>
 8006ec0:	2301      	movs	r3, #1
 8006ec2:	2100      	movs	r1, #0
 8006ec4:	4283      	cmp	r3, r0
 8006ec6:	db0a      	blt.n	8006ede <__s2b+0x32>
 8006ec8:	0038      	movs	r0, r7
 8006eca:	f7ff ff43 	bl	8006d54 <_Balloc>
 8006ece:	1e01      	subs	r1, r0, #0
 8006ed0:	d108      	bne.n	8006ee4 <__s2b+0x38>
 8006ed2:	000a      	movs	r2, r1
 8006ed4:	4b19      	ldr	r3, [pc, #100]	@ (8006f3c <__s2b+0x90>)
 8006ed6:	481a      	ldr	r0, [pc, #104]	@ (8006f40 <__s2b+0x94>)
 8006ed8:	31d3      	adds	r1, #211	@ 0xd3
 8006eda:	f002 fc2b 	bl	8009734 <__assert_func>
 8006ede:	005b      	lsls	r3, r3, #1
 8006ee0:	3101      	adds	r1, #1
 8006ee2:	e7ef      	b.n	8006ec4 <__s2b+0x18>
 8006ee4:	9b08      	ldr	r3, [sp, #32]
 8006ee6:	6143      	str	r3, [r0, #20]
 8006ee8:	2301      	movs	r3, #1
 8006eea:	6103      	str	r3, [r0, #16]
 8006eec:	2d09      	cmp	r5, #9
 8006eee:	dd18      	ble.n	8006f22 <__s2b+0x76>
 8006ef0:	0023      	movs	r3, r4
 8006ef2:	3309      	adds	r3, #9
 8006ef4:	001e      	movs	r6, r3
 8006ef6:	9300      	str	r3, [sp, #0]
 8006ef8:	1964      	adds	r4, r4, r5
 8006efa:	7833      	ldrb	r3, [r6, #0]
 8006efc:	220a      	movs	r2, #10
 8006efe:	0038      	movs	r0, r7
 8006f00:	3b30      	subs	r3, #48	@ 0x30
 8006f02:	f7ff ff8f 	bl	8006e24 <__multadd>
 8006f06:	3601      	adds	r6, #1
 8006f08:	0001      	movs	r1, r0
 8006f0a:	42a6      	cmp	r6, r4
 8006f0c:	d1f5      	bne.n	8006efa <__s2b+0x4e>
 8006f0e:	002c      	movs	r4, r5
 8006f10:	9b00      	ldr	r3, [sp, #0]
 8006f12:	3c08      	subs	r4, #8
 8006f14:	191c      	adds	r4, r3, r4
 8006f16:	002e      	movs	r6, r5
 8006f18:	9b01      	ldr	r3, [sp, #4]
 8006f1a:	429e      	cmp	r6, r3
 8006f1c:	db04      	blt.n	8006f28 <__s2b+0x7c>
 8006f1e:	0008      	movs	r0, r1
 8006f20:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006f22:	2509      	movs	r5, #9
 8006f24:	340a      	adds	r4, #10
 8006f26:	e7f6      	b.n	8006f16 <__s2b+0x6a>
 8006f28:	1b63      	subs	r3, r4, r5
 8006f2a:	5d9b      	ldrb	r3, [r3, r6]
 8006f2c:	220a      	movs	r2, #10
 8006f2e:	0038      	movs	r0, r7
 8006f30:	3b30      	subs	r3, #48	@ 0x30
 8006f32:	f7ff ff77 	bl	8006e24 <__multadd>
 8006f36:	3601      	adds	r6, #1
 8006f38:	0001      	movs	r1, r0
 8006f3a:	e7ed      	b.n	8006f18 <__s2b+0x6c>
 8006f3c:	0800a387 	.word	0x0800a387
 8006f40:	0800a398 	.word	0x0800a398

08006f44 <__hi0bits>:
 8006f44:	2280      	movs	r2, #128	@ 0x80
 8006f46:	0003      	movs	r3, r0
 8006f48:	0252      	lsls	r2, r2, #9
 8006f4a:	2000      	movs	r0, #0
 8006f4c:	4293      	cmp	r3, r2
 8006f4e:	d201      	bcs.n	8006f54 <__hi0bits+0x10>
 8006f50:	041b      	lsls	r3, r3, #16
 8006f52:	3010      	adds	r0, #16
 8006f54:	2280      	movs	r2, #128	@ 0x80
 8006f56:	0452      	lsls	r2, r2, #17
 8006f58:	4293      	cmp	r3, r2
 8006f5a:	d201      	bcs.n	8006f60 <__hi0bits+0x1c>
 8006f5c:	3008      	adds	r0, #8
 8006f5e:	021b      	lsls	r3, r3, #8
 8006f60:	2280      	movs	r2, #128	@ 0x80
 8006f62:	0552      	lsls	r2, r2, #21
 8006f64:	4293      	cmp	r3, r2
 8006f66:	d201      	bcs.n	8006f6c <__hi0bits+0x28>
 8006f68:	3004      	adds	r0, #4
 8006f6a:	011b      	lsls	r3, r3, #4
 8006f6c:	2280      	movs	r2, #128	@ 0x80
 8006f6e:	05d2      	lsls	r2, r2, #23
 8006f70:	4293      	cmp	r3, r2
 8006f72:	d201      	bcs.n	8006f78 <__hi0bits+0x34>
 8006f74:	3002      	adds	r0, #2
 8006f76:	009b      	lsls	r3, r3, #2
 8006f78:	2b00      	cmp	r3, #0
 8006f7a:	db03      	blt.n	8006f84 <__hi0bits+0x40>
 8006f7c:	3001      	adds	r0, #1
 8006f7e:	4213      	tst	r3, r2
 8006f80:	d100      	bne.n	8006f84 <__hi0bits+0x40>
 8006f82:	2020      	movs	r0, #32
 8006f84:	4770      	bx	lr

08006f86 <__lo0bits>:
 8006f86:	6803      	ldr	r3, [r0, #0]
 8006f88:	0001      	movs	r1, r0
 8006f8a:	2207      	movs	r2, #7
 8006f8c:	0018      	movs	r0, r3
 8006f8e:	4010      	ands	r0, r2
 8006f90:	4213      	tst	r3, r2
 8006f92:	d00d      	beq.n	8006fb0 <__lo0bits+0x2a>
 8006f94:	3a06      	subs	r2, #6
 8006f96:	2000      	movs	r0, #0
 8006f98:	4213      	tst	r3, r2
 8006f9a:	d105      	bne.n	8006fa8 <__lo0bits+0x22>
 8006f9c:	3002      	adds	r0, #2
 8006f9e:	4203      	tst	r3, r0
 8006fa0:	d003      	beq.n	8006faa <__lo0bits+0x24>
 8006fa2:	40d3      	lsrs	r3, r2
 8006fa4:	0010      	movs	r0, r2
 8006fa6:	600b      	str	r3, [r1, #0]
 8006fa8:	4770      	bx	lr
 8006faa:	089b      	lsrs	r3, r3, #2
 8006fac:	600b      	str	r3, [r1, #0]
 8006fae:	e7fb      	b.n	8006fa8 <__lo0bits+0x22>
 8006fb0:	b29a      	uxth	r2, r3
 8006fb2:	2a00      	cmp	r2, #0
 8006fb4:	d101      	bne.n	8006fba <__lo0bits+0x34>
 8006fb6:	2010      	movs	r0, #16
 8006fb8:	0c1b      	lsrs	r3, r3, #16
 8006fba:	b2da      	uxtb	r2, r3
 8006fbc:	2a00      	cmp	r2, #0
 8006fbe:	d101      	bne.n	8006fc4 <__lo0bits+0x3e>
 8006fc0:	3008      	adds	r0, #8
 8006fc2:	0a1b      	lsrs	r3, r3, #8
 8006fc4:	071a      	lsls	r2, r3, #28
 8006fc6:	d101      	bne.n	8006fcc <__lo0bits+0x46>
 8006fc8:	3004      	adds	r0, #4
 8006fca:	091b      	lsrs	r3, r3, #4
 8006fcc:	079a      	lsls	r2, r3, #30
 8006fce:	d101      	bne.n	8006fd4 <__lo0bits+0x4e>
 8006fd0:	3002      	adds	r0, #2
 8006fd2:	089b      	lsrs	r3, r3, #2
 8006fd4:	07da      	lsls	r2, r3, #31
 8006fd6:	d4e9      	bmi.n	8006fac <__lo0bits+0x26>
 8006fd8:	3001      	adds	r0, #1
 8006fda:	085b      	lsrs	r3, r3, #1
 8006fdc:	d1e6      	bne.n	8006fac <__lo0bits+0x26>
 8006fde:	2020      	movs	r0, #32
 8006fe0:	e7e2      	b.n	8006fa8 <__lo0bits+0x22>
	...

08006fe4 <__i2b>:
 8006fe4:	b510      	push	{r4, lr}
 8006fe6:	000c      	movs	r4, r1
 8006fe8:	2101      	movs	r1, #1
 8006fea:	f7ff feb3 	bl	8006d54 <_Balloc>
 8006fee:	2800      	cmp	r0, #0
 8006ff0:	d107      	bne.n	8007002 <__i2b+0x1e>
 8006ff2:	2146      	movs	r1, #70	@ 0x46
 8006ff4:	4c05      	ldr	r4, [pc, #20]	@ (800700c <__i2b+0x28>)
 8006ff6:	0002      	movs	r2, r0
 8006ff8:	4b05      	ldr	r3, [pc, #20]	@ (8007010 <__i2b+0x2c>)
 8006ffa:	0020      	movs	r0, r4
 8006ffc:	31ff      	adds	r1, #255	@ 0xff
 8006ffe:	f002 fb99 	bl	8009734 <__assert_func>
 8007002:	2301      	movs	r3, #1
 8007004:	6144      	str	r4, [r0, #20]
 8007006:	6103      	str	r3, [r0, #16]
 8007008:	bd10      	pop	{r4, pc}
 800700a:	46c0      	nop			@ (mov r8, r8)
 800700c:	0800a398 	.word	0x0800a398
 8007010:	0800a387 	.word	0x0800a387

08007014 <__multiply>:
 8007014:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007016:	0014      	movs	r4, r2
 8007018:	690a      	ldr	r2, [r1, #16]
 800701a:	6923      	ldr	r3, [r4, #16]
 800701c:	000d      	movs	r5, r1
 800701e:	b089      	sub	sp, #36	@ 0x24
 8007020:	429a      	cmp	r2, r3
 8007022:	db02      	blt.n	800702a <__multiply+0x16>
 8007024:	0023      	movs	r3, r4
 8007026:	000c      	movs	r4, r1
 8007028:	001d      	movs	r5, r3
 800702a:	6927      	ldr	r7, [r4, #16]
 800702c:	692e      	ldr	r6, [r5, #16]
 800702e:	6861      	ldr	r1, [r4, #4]
 8007030:	19bb      	adds	r3, r7, r6
 8007032:	9300      	str	r3, [sp, #0]
 8007034:	68a3      	ldr	r3, [r4, #8]
 8007036:	19ba      	adds	r2, r7, r6
 8007038:	4293      	cmp	r3, r2
 800703a:	da00      	bge.n	800703e <__multiply+0x2a>
 800703c:	3101      	adds	r1, #1
 800703e:	f7ff fe89 	bl	8006d54 <_Balloc>
 8007042:	4684      	mov	ip, r0
 8007044:	2800      	cmp	r0, #0
 8007046:	d106      	bne.n	8007056 <__multiply+0x42>
 8007048:	21b1      	movs	r1, #177	@ 0xb1
 800704a:	4662      	mov	r2, ip
 800704c:	4b44      	ldr	r3, [pc, #272]	@ (8007160 <__multiply+0x14c>)
 800704e:	4845      	ldr	r0, [pc, #276]	@ (8007164 <__multiply+0x150>)
 8007050:	0049      	lsls	r1, r1, #1
 8007052:	f002 fb6f 	bl	8009734 <__assert_func>
 8007056:	0002      	movs	r2, r0
 8007058:	19bb      	adds	r3, r7, r6
 800705a:	3214      	adds	r2, #20
 800705c:	009b      	lsls	r3, r3, #2
 800705e:	18d3      	adds	r3, r2, r3
 8007060:	9301      	str	r3, [sp, #4]
 8007062:	2100      	movs	r1, #0
 8007064:	0013      	movs	r3, r2
 8007066:	9801      	ldr	r0, [sp, #4]
 8007068:	4283      	cmp	r3, r0
 800706a:	d328      	bcc.n	80070be <__multiply+0xaa>
 800706c:	0023      	movs	r3, r4
 800706e:	00bf      	lsls	r7, r7, #2
 8007070:	3314      	adds	r3, #20
 8007072:	9304      	str	r3, [sp, #16]
 8007074:	3514      	adds	r5, #20
 8007076:	19db      	adds	r3, r3, r7
 8007078:	00b6      	lsls	r6, r6, #2
 800707a:	9302      	str	r3, [sp, #8]
 800707c:	19ab      	adds	r3, r5, r6
 800707e:	9307      	str	r3, [sp, #28]
 8007080:	2304      	movs	r3, #4
 8007082:	9305      	str	r3, [sp, #20]
 8007084:	0023      	movs	r3, r4
 8007086:	9902      	ldr	r1, [sp, #8]
 8007088:	3315      	adds	r3, #21
 800708a:	4299      	cmp	r1, r3
 800708c:	d305      	bcc.n	800709a <__multiply+0x86>
 800708e:	1b0c      	subs	r4, r1, r4
 8007090:	3c15      	subs	r4, #21
 8007092:	08a4      	lsrs	r4, r4, #2
 8007094:	3401      	adds	r4, #1
 8007096:	00a3      	lsls	r3, r4, #2
 8007098:	9305      	str	r3, [sp, #20]
 800709a:	9b07      	ldr	r3, [sp, #28]
 800709c:	429d      	cmp	r5, r3
 800709e:	d310      	bcc.n	80070c2 <__multiply+0xae>
 80070a0:	9b00      	ldr	r3, [sp, #0]
 80070a2:	2b00      	cmp	r3, #0
 80070a4:	dd05      	ble.n	80070b2 <__multiply+0x9e>
 80070a6:	9b01      	ldr	r3, [sp, #4]
 80070a8:	3b04      	subs	r3, #4
 80070aa:	9301      	str	r3, [sp, #4]
 80070ac:	681b      	ldr	r3, [r3, #0]
 80070ae:	2b00      	cmp	r3, #0
 80070b0:	d052      	beq.n	8007158 <__multiply+0x144>
 80070b2:	4663      	mov	r3, ip
 80070b4:	4660      	mov	r0, ip
 80070b6:	9a00      	ldr	r2, [sp, #0]
 80070b8:	611a      	str	r2, [r3, #16]
 80070ba:	b009      	add	sp, #36	@ 0x24
 80070bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80070be:	c302      	stmia	r3!, {r1}
 80070c0:	e7d1      	b.n	8007066 <__multiply+0x52>
 80070c2:	682c      	ldr	r4, [r5, #0]
 80070c4:	b2a4      	uxth	r4, r4
 80070c6:	2c00      	cmp	r4, #0
 80070c8:	d01f      	beq.n	800710a <__multiply+0xf6>
 80070ca:	2300      	movs	r3, #0
 80070cc:	0017      	movs	r7, r2
 80070ce:	9e04      	ldr	r6, [sp, #16]
 80070d0:	9303      	str	r3, [sp, #12]
 80070d2:	ce08      	ldmia	r6!, {r3}
 80070d4:	6839      	ldr	r1, [r7, #0]
 80070d6:	9306      	str	r3, [sp, #24]
 80070d8:	466b      	mov	r3, sp
 80070da:	8b1b      	ldrh	r3, [r3, #24]
 80070dc:	b288      	uxth	r0, r1
 80070de:	4363      	muls	r3, r4
 80070e0:	181b      	adds	r3, r3, r0
 80070e2:	9803      	ldr	r0, [sp, #12]
 80070e4:	0c09      	lsrs	r1, r1, #16
 80070e6:	181b      	adds	r3, r3, r0
 80070e8:	9806      	ldr	r0, [sp, #24]
 80070ea:	0c00      	lsrs	r0, r0, #16
 80070ec:	4360      	muls	r0, r4
 80070ee:	1840      	adds	r0, r0, r1
 80070f0:	0c19      	lsrs	r1, r3, #16
 80070f2:	1841      	adds	r1, r0, r1
 80070f4:	0c08      	lsrs	r0, r1, #16
 80070f6:	b29b      	uxth	r3, r3
 80070f8:	0409      	lsls	r1, r1, #16
 80070fa:	4319      	orrs	r1, r3
 80070fc:	9b02      	ldr	r3, [sp, #8]
 80070fe:	9003      	str	r0, [sp, #12]
 8007100:	c702      	stmia	r7!, {r1}
 8007102:	42b3      	cmp	r3, r6
 8007104:	d8e5      	bhi.n	80070d2 <__multiply+0xbe>
 8007106:	9b05      	ldr	r3, [sp, #20]
 8007108:	50d0      	str	r0, [r2, r3]
 800710a:	682c      	ldr	r4, [r5, #0]
 800710c:	0c24      	lsrs	r4, r4, #16
 800710e:	d020      	beq.n	8007152 <__multiply+0x13e>
 8007110:	2100      	movs	r1, #0
 8007112:	0010      	movs	r0, r2
 8007114:	6813      	ldr	r3, [r2, #0]
 8007116:	9e04      	ldr	r6, [sp, #16]
 8007118:	9103      	str	r1, [sp, #12]
 800711a:	6831      	ldr	r1, [r6, #0]
 800711c:	6807      	ldr	r7, [r0, #0]
 800711e:	b289      	uxth	r1, r1
 8007120:	4361      	muls	r1, r4
 8007122:	0c3f      	lsrs	r7, r7, #16
 8007124:	19c9      	adds	r1, r1, r7
 8007126:	9f03      	ldr	r7, [sp, #12]
 8007128:	b29b      	uxth	r3, r3
 800712a:	19c9      	adds	r1, r1, r7
 800712c:	040f      	lsls	r7, r1, #16
 800712e:	431f      	orrs	r7, r3
 8007130:	6007      	str	r7, [r0, #0]
 8007132:	ce80      	ldmia	r6!, {r7}
 8007134:	6843      	ldr	r3, [r0, #4]
 8007136:	0c3f      	lsrs	r7, r7, #16
 8007138:	4367      	muls	r7, r4
 800713a:	b29b      	uxth	r3, r3
 800713c:	0c09      	lsrs	r1, r1, #16
 800713e:	18fb      	adds	r3, r7, r3
 8007140:	185b      	adds	r3, r3, r1
 8007142:	0c19      	lsrs	r1, r3, #16
 8007144:	9103      	str	r1, [sp, #12]
 8007146:	9902      	ldr	r1, [sp, #8]
 8007148:	3004      	adds	r0, #4
 800714a:	42b1      	cmp	r1, r6
 800714c:	d8e5      	bhi.n	800711a <__multiply+0x106>
 800714e:	9905      	ldr	r1, [sp, #20]
 8007150:	5053      	str	r3, [r2, r1]
 8007152:	3504      	adds	r5, #4
 8007154:	3204      	adds	r2, #4
 8007156:	e7a0      	b.n	800709a <__multiply+0x86>
 8007158:	9b00      	ldr	r3, [sp, #0]
 800715a:	3b01      	subs	r3, #1
 800715c:	9300      	str	r3, [sp, #0]
 800715e:	e79f      	b.n	80070a0 <__multiply+0x8c>
 8007160:	0800a387 	.word	0x0800a387
 8007164:	0800a398 	.word	0x0800a398

08007168 <__pow5mult>:
 8007168:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800716a:	2303      	movs	r3, #3
 800716c:	0015      	movs	r5, r2
 800716e:	0007      	movs	r7, r0
 8007170:	000e      	movs	r6, r1
 8007172:	401a      	ands	r2, r3
 8007174:	421d      	tst	r5, r3
 8007176:	d008      	beq.n	800718a <__pow5mult+0x22>
 8007178:	4925      	ldr	r1, [pc, #148]	@ (8007210 <__pow5mult+0xa8>)
 800717a:	3a01      	subs	r2, #1
 800717c:	0092      	lsls	r2, r2, #2
 800717e:	5852      	ldr	r2, [r2, r1]
 8007180:	2300      	movs	r3, #0
 8007182:	0031      	movs	r1, r6
 8007184:	f7ff fe4e 	bl	8006e24 <__multadd>
 8007188:	0006      	movs	r6, r0
 800718a:	10ad      	asrs	r5, r5, #2
 800718c:	d03d      	beq.n	800720a <__pow5mult+0xa2>
 800718e:	69fc      	ldr	r4, [r7, #28]
 8007190:	2c00      	cmp	r4, #0
 8007192:	d10f      	bne.n	80071b4 <__pow5mult+0x4c>
 8007194:	2010      	movs	r0, #16
 8007196:	f7ff fd21 	bl	8006bdc <malloc>
 800719a:	1e02      	subs	r2, r0, #0
 800719c:	61f8      	str	r0, [r7, #28]
 800719e:	d105      	bne.n	80071ac <__pow5mult+0x44>
 80071a0:	21b4      	movs	r1, #180	@ 0xb4
 80071a2:	4b1c      	ldr	r3, [pc, #112]	@ (8007214 <__pow5mult+0xac>)
 80071a4:	481c      	ldr	r0, [pc, #112]	@ (8007218 <__pow5mult+0xb0>)
 80071a6:	31ff      	adds	r1, #255	@ 0xff
 80071a8:	f002 fac4 	bl	8009734 <__assert_func>
 80071ac:	6044      	str	r4, [r0, #4]
 80071ae:	6084      	str	r4, [r0, #8]
 80071b0:	6004      	str	r4, [r0, #0]
 80071b2:	60c4      	str	r4, [r0, #12]
 80071b4:	69fb      	ldr	r3, [r7, #28]
 80071b6:	689c      	ldr	r4, [r3, #8]
 80071b8:	9301      	str	r3, [sp, #4]
 80071ba:	2c00      	cmp	r4, #0
 80071bc:	d108      	bne.n	80071d0 <__pow5mult+0x68>
 80071be:	0038      	movs	r0, r7
 80071c0:	4916      	ldr	r1, [pc, #88]	@ (800721c <__pow5mult+0xb4>)
 80071c2:	f7ff ff0f 	bl	8006fe4 <__i2b>
 80071c6:	9b01      	ldr	r3, [sp, #4]
 80071c8:	0004      	movs	r4, r0
 80071ca:	6098      	str	r0, [r3, #8]
 80071cc:	2300      	movs	r3, #0
 80071ce:	6003      	str	r3, [r0, #0]
 80071d0:	2301      	movs	r3, #1
 80071d2:	421d      	tst	r5, r3
 80071d4:	d00a      	beq.n	80071ec <__pow5mult+0x84>
 80071d6:	0031      	movs	r1, r6
 80071d8:	0022      	movs	r2, r4
 80071da:	0038      	movs	r0, r7
 80071dc:	f7ff ff1a 	bl	8007014 <__multiply>
 80071e0:	0031      	movs	r1, r6
 80071e2:	9001      	str	r0, [sp, #4]
 80071e4:	0038      	movs	r0, r7
 80071e6:	f7ff fdf9 	bl	8006ddc <_Bfree>
 80071ea:	9e01      	ldr	r6, [sp, #4]
 80071ec:	106d      	asrs	r5, r5, #1
 80071ee:	d00c      	beq.n	800720a <__pow5mult+0xa2>
 80071f0:	6820      	ldr	r0, [r4, #0]
 80071f2:	2800      	cmp	r0, #0
 80071f4:	d107      	bne.n	8007206 <__pow5mult+0x9e>
 80071f6:	0022      	movs	r2, r4
 80071f8:	0021      	movs	r1, r4
 80071fa:	0038      	movs	r0, r7
 80071fc:	f7ff ff0a 	bl	8007014 <__multiply>
 8007200:	2300      	movs	r3, #0
 8007202:	6020      	str	r0, [r4, #0]
 8007204:	6003      	str	r3, [r0, #0]
 8007206:	0004      	movs	r4, r0
 8007208:	e7e2      	b.n	80071d0 <__pow5mult+0x68>
 800720a:	0030      	movs	r0, r6
 800720c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800720e:	46c0      	nop			@ (mov r8, r8)
 8007210:	0800a4c4 	.word	0x0800a4c4
 8007214:	0800a318 	.word	0x0800a318
 8007218:	0800a398 	.word	0x0800a398
 800721c:	00000271 	.word	0x00000271

08007220 <__lshift>:
 8007220:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007222:	000c      	movs	r4, r1
 8007224:	0016      	movs	r6, r2
 8007226:	6923      	ldr	r3, [r4, #16]
 8007228:	1157      	asrs	r7, r2, #5
 800722a:	b085      	sub	sp, #20
 800722c:	18fb      	adds	r3, r7, r3
 800722e:	9301      	str	r3, [sp, #4]
 8007230:	3301      	adds	r3, #1
 8007232:	9300      	str	r3, [sp, #0]
 8007234:	6849      	ldr	r1, [r1, #4]
 8007236:	68a3      	ldr	r3, [r4, #8]
 8007238:	9002      	str	r0, [sp, #8]
 800723a:	9a00      	ldr	r2, [sp, #0]
 800723c:	4293      	cmp	r3, r2
 800723e:	db10      	blt.n	8007262 <__lshift+0x42>
 8007240:	9802      	ldr	r0, [sp, #8]
 8007242:	f7ff fd87 	bl	8006d54 <_Balloc>
 8007246:	2300      	movs	r3, #0
 8007248:	0001      	movs	r1, r0
 800724a:	0005      	movs	r5, r0
 800724c:	001a      	movs	r2, r3
 800724e:	3114      	adds	r1, #20
 8007250:	4298      	cmp	r0, r3
 8007252:	d10c      	bne.n	800726e <__lshift+0x4e>
 8007254:	21ef      	movs	r1, #239	@ 0xef
 8007256:	002a      	movs	r2, r5
 8007258:	4b25      	ldr	r3, [pc, #148]	@ (80072f0 <__lshift+0xd0>)
 800725a:	4826      	ldr	r0, [pc, #152]	@ (80072f4 <__lshift+0xd4>)
 800725c:	0049      	lsls	r1, r1, #1
 800725e:	f002 fa69 	bl	8009734 <__assert_func>
 8007262:	3101      	adds	r1, #1
 8007264:	005b      	lsls	r3, r3, #1
 8007266:	e7e8      	b.n	800723a <__lshift+0x1a>
 8007268:	0098      	lsls	r0, r3, #2
 800726a:	500a      	str	r2, [r1, r0]
 800726c:	3301      	adds	r3, #1
 800726e:	42bb      	cmp	r3, r7
 8007270:	dbfa      	blt.n	8007268 <__lshift+0x48>
 8007272:	43fb      	mvns	r3, r7
 8007274:	17db      	asrs	r3, r3, #31
 8007276:	401f      	ands	r7, r3
 8007278:	00bf      	lsls	r7, r7, #2
 800727a:	0023      	movs	r3, r4
 800727c:	201f      	movs	r0, #31
 800727e:	19c9      	adds	r1, r1, r7
 8007280:	0037      	movs	r7, r6
 8007282:	6922      	ldr	r2, [r4, #16]
 8007284:	3314      	adds	r3, #20
 8007286:	0092      	lsls	r2, r2, #2
 8007288:	189a      	adds	r2, r3, r2
 800728a:	4007      	ands	r7, r0
 800728c:	4206      	tst	r6, r0
 800728e:	d029      	beq.n	80072e4 <__lshift+0xc4>
 8007290:	3001      	adds	r0, #1
 8007292:	1bc0      	subs	r0, r0, r7
 8007294:	9003      	str	r0, [sp, #12]
 8007296:	468c      	mov	ip, r1
 8007298:	2000      	movs	r0, #0
 800729a:	681e      	ldr	r6, [r3, #0]
 800729c:	40be      	lsls	r6, r7
 800729e:	4306      	orrs	r6, r0
 80072a0:	4660      	mov	r0, ip
 80072a2:	c040      	stmia	r0!, {r6}
 80072a4:	4684      	mov	ip, r0
 80072a6:	9e03      	ldr	r6, [sp, #12]
 80072a8:	cb01      	ldmia	r3!, {r0}
 80072aa:	40f0      	lsrs	r0, r6
 80072ac:	429a      	cmp	r2, r3
 80072ae:	d8f4      	bhi.n	800729a <__lshift+0x7a>
 80072b0:	0026      	movs	r6, r4
 80072b2:	3615      	adds	r6, #21
 80072b4:	2304      	movs	r3, #4
 80072b6:	42b2      	cmp	r2, r6
 80072b8:	d304      	bcc.n	80072c4 <__lshift+0xa4>
 80072ba:	1b13      	subs	r3, r2, r4
 80072bc:	3b15      	subs	r3, #21
 80072be:	089b      	lsrs	r3, r3, #2
 80072c0:	3301      	adds	r3, #1
 80072c2:	009b      	lsls	r3, r3, #2
 80072c4:	50c8      	str	r0, [r1, r3]
 80072c6:	2800      	cmp	r0, #0
 80072c8:	d002      	beq.n	80072d0 <__lshift+0xb0>
 80072ca:	9b01      	ldr	r3, [sp, #4]
 80072cc:	3302      	adds	r3, #2
 80072ce:	9300      	str	r3, [sp, #0]
 80072d0:	9b00      	ldr	r3, [sp, #0]
 80072d2:	9802      	ldr	r0, [sp, #8]
 80072d4:	3b01      	subs	r3, #1
 80072d6:	0021      	movs	r1, r4
 80072d8:	612b      	str	r3, [r5, #16]
 80072da:	f7ff fd7f 	bl	8006ddc <_Bfree>
 80072de:	0028      	movs	r0, r5
 80072e0:	b005      	add	sp, #20
 80072e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80072e4:	cb01      	ldmia	r3!, {r0}
 80072e6:	c101      	stmia	r1!, {r0}
 80072e8:	429a      	cmp	r2, r3
 80072ea:	d8fb      	bhi.n	80072e4 <__lshift+0xc4>
 80072ec:	e7f0      	b.n	80072d0 <__lshift+0xb0>
 80072ee:	46c0      	nop			@ (mov r8, r8)
 80072f0:	0800a387 	.word	0x0800a387
 80072f4:	0800a398 	.word	0x0800a398

080072f8 <__mcmp>:
 80072f8:	b530      	push	{r4, r5, lr}
 80072fa:	690b      	ldr	r3, [r1, #16]
 80072fc:	6904      	ldr	r4, [r0, #16]
 80072fe:	0002      	movs	r2, r0
 8007300:	1ae0      	subs	r0, r4, r3
 8007302:	429c      	cmp	r4, r3
 8007304:	d10f      	bne.n	8007326 <__mcmp+0x2e>
 8007306:	3214      	adds	r2, #20
 8007308:	009b      	lsls	r3, r3, #2
 800730a:	3114      	adds	r1, #20
 800730c:	0014      	movs	r4, r2
 800730e:	18c9      	adds	r1, r1, r3
 8007310:	18d2      	adds	r2, r2, r3
 8007312:	3a04      	subs	r2, #4
 8007314:	3904      	subs	r1, #4
 8007316:	6815      	ldr	r5, [r2, #0]
 8007318:	680b      	ldr	r3, [r1, #0]
 800731a:	429d      	cmp	r5, r3
 800731c:	d004      	beq.n	8007328 <__mcmp+0x30>
 800731e:	2001      	movs	r0, #1
 8007320:	429d      	cmp	r5, r3
 8007322:	d200      	bcs.n	8007326 <__mcmp+0x2e>
 8007324:	3802      	subs	r0, #2
 8007326:	bd30      	pop	{r4, r5, pc}
 8007328:	4294      	cmp	r4, r2
 800732a:	d3f2      	bcc.n	8007312 <__mcmp+0x1a>
 800732c:	e7fb      	b.n	8007326 <__mcmp+0x2e>
	...

08007330 <__mdiff>:
 8007330:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007332:	000c      	movs	r4, r1
 8007334:	b087      	sub	sp, #28
 8007336:	9000      	str	r0, [sp, #0]
 8007338:	0011      	movs	r1, r2
 800733a:	0020      	movs	r0, r4
 800733c:	0017      	movs	r7, r2
 800733e:	f7ff ffdb 	bl	80072f8 <__mcmp>
 8007342:	1e05      	subs	r5, r0, #0
 8007344:	d110      	bne.n	8007368 <__mdiff+0x38>
 8007346:	0001      	movs	r1, r0
 8007348:	9800      	ldr	r0, [sp, #0]
 800734a:	f7ff fd03 	bl	8006d54 <_Balloc>
 800734e:	1e02      	subs	r2, r0, #0
 8007350:	d104      	bne.n	800735c <__mdiff+0x2c>
 8007352:	4b40      	ldr	r3, [pc, #256]	@ (8007454 <__mdiff+0x124>)
 8007354:	4840      	ldr	r0, [pc, #256]	@ (8007458 <__mdiff+0x128>)
 8007356:	4941      	ldr	r1, [pc, #260]	@ (800745c <__mdiff+0x12c>)
 8007358:	f002 f9ec 	bl	8009734 <__assert_func>
 800735c:	2301      	movs	r3, #1
 800735e:	6145      	str	r5, [r0, #20]
 8007360:	6103      	str	r3, [r0, #16]
 8007362:	0010      	movs	r0, r2
 8007364:	b007      	add	sp, #28
 8007366:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007368:	2600      	movs	r6, #0
 800736a:	42b0      	cmp	r0, r6
 800736c:	da03      	bge.n	8007376 <__mdiff+0x46>
 800736e:	0023      	movs	r3, r4
 8007370:	003c      	movs	r4, r7
 8007372:	001f      	movs	r7, r3
 8007374:	3601      	adds	r6, #1
 8007376:	6861      	ldr	r1, [r4, #4]
 8007378:	9800      	ldr	r0, [sp, #0]
 800737a:	f7ff fceb 	bl	8006d54 <_Balloc>
 800737e:	1e02      	subs	r2, r0, #0
 8007380:	d103      	bne.n	800738a <__mdiff+0x5a>
 8007382:	4b34      	ldr	r3, [pc, #208]	@ (8007454 <__mdiff+0x124>)
 8007384:	4834      	ldr	r0, [pc, #208]	@ (8007458 <__mdiff+0x128>)
 8007386:	4936      	ldr	r1, [pc, #216]	@ (8007460 <__mdiff+0x130>)
 8007388:	e7e6      	b.n	8007358 <__mdiff+0x28>
 800738a:	6923      	ldr	r3, [r4, #16]
 800738c:	3414      	adds	r4, #20
 800738e:	9300      	str	r3, [sp, #0]
 8007390:	009b      	lsls	r3, r3, #2
 8007392:	18e3      	adds	r3, r4, r3
 8007394:	0021      	movs	r1, r4
 8007396:	9401      	str	r4, [sp, #4]
 8007398:	003c      	movs	r4, r7
 800739a:	9302      	str	r3, [sp, #8]
 800739c:	693b      	ldr	r3, [r7, #16]
 800739e:	3414      	adds	r4, #20
 80073a0:	009b      	lsls	r3, r3, #2
 80073a2:	18e3      	adds	r3, r4, r3
 80073a4:	9303      	str	r3, [sp, #12]
 80073a6:	0003      	movs	r3, r0
 80073a8:	60c6      	str	r6, [r0, #12]
 80073aa:	468c      	mov	ip, r1
 80073ac:	2000      	movs	r0, #0
 80073ae:	3314      	adds	r3, #20
 80073b0:	9304      	str	r3, [sp, #16]
 80073b2:	9305      	str	r3, [sp, #20]
 80073b4:	4663      	mov	r3, ip
 80073b6:	cb20      	ldmia	r3!, {r5}
 80073b8:	b2a9      	uxth	r1, r5
 80073ba:	000e      	movs	r6, r1
 80073bc:	469c      	mov	ip, r3
 80073be:	cc08      	ldmia	r4!, {r3}
 80073c0:	0c2d      	lsrs	r5, r5, #16
 80073c2:	b299      	uxth	r1, r3
 80073c4:	1a71      	subs	r1, r6, r1
 80073c6:	1809      	adds	r1, r1, r0
 80073c8:	0c1b      	lsrs	r3, r3, #16
 80073ca:	1408      	asrs	r0, r1, #16
 80073cc:	1aeb      	subs	r3, r5, r3
 80073ce:	181b      	adds	r3, r3, r0
 80073d0:	1418      	asrs	r0, r3, #16
 80073d2:	b289      	uxth	r1, r1
 80073d4:	041b      	lsls	r3, r3, #16
 80073d6:	4319      	orrs	r1, r3
 80073d8:	9b05      	ldr	r3, [sp, #20]
 80073da:	c302      	stmia	r3!, {r1}
 80073dc:	9305      	str	r3, [sp, #20]
 80073de:	9b03      	ldr	r3, [sp, #12]
 80073e0:	42a3      	cmp	r3, r4
 80073e2:	d8e7      	bhi.n	80073b4 <__mdiff+0x84>
 80073e4:	0039      	movs	r1, r7
 80073e6:	9c03      	ldr	r4, [sp, #12]
 80073e8:	3115      	adds	r1, #21
 80073ea:	2304      	movs	r3, #4
 80073ec:	428c      	cmp	r4, r1
 80073ee:	d304      	bcc.n	80073fa <__mdiff+0xca>
 80073f0:	1be3      	subs	r3, r4, r7
 80073f2:	3b15      	subs	r3, #21
 80073f4:	089b      	lsrs	r3, r3, #2
 80073f6:	3301      	adds	r3, #1
 80073f8:	009b      	lsls	r3, r3, #2
 80073fa:	9901      	ldr	r1, [sp, #4]
 80073fc:	18cd      	adds	r5, r1, r3
 80073fe:	9904      	ldr	r1, [sp, #16]
 8007400:	002e      	movs	r6, r5
 8007402:	18cb      	adds	r3, r1, r3
 8007404:	001f      	movs	r7, r3
 8007406:	9902      	ldr	r1, [sp, #8]
 8007408:	428e      	cmp	r6, r1
 800740a:	d311      	bcc.n	8007430 <__mdiff+0x100>
 800740c:	9c02      	ldr	r4, [sp, #8]
 800740e:	1ee9      	subs	r1, r5, #3
 8007410:	2000      	movs	r0, #0
 8007412:	428c      	cmp	r4, r1
 8007414:	d304      	bcc.n	8007420 <__mdiff+0xf0>
 8007416:	0021      	movs	r1, r4
 8007418:	3103      	adds	r1, #3
 800741a:	1b49      	subs	r1, r1, r5
 800741c:	0889      	lsrs	r1, r1, #2
 800741e:	0088      	lsls	r0, r1, #2
 8007420:	181b      	adds	r3, r3, r0
 8007422:	3b04      	subs	r3, #4
 8007424:	6819      	ldr	r1, [r3, #0]
 8007426:	2900      	cmp	r1, #0
 8007428:	d010      	beq.n	800744c <__mdiff+0x11c>
 800742a:	9b00      	ldr	r3, [sp, #0]
 800742c:	6113      	str	r3, [r2, #16]
 800742e:	e798      	b.n	8007362 <__mdiff+0x32>
 8007430:	4684      	mov	ip, r0
 8007432:	ce02      	ldmia	r6!, {r1}
 8007434:	b288      	uxth	r0, r1
 8007436:	4460      	add	r0, ip
 8007438:	1400      	asrs	r0, r0, #16
 800743a:	0c0c      	lsrs	r4, r1, #16
 800743c:	1904      	adds	r4, r0, r4
 800743e:	4461      	add	r1, ip
 8007440:	1420      	asrs	r0, r4, #16
 8007442:	b289      	uxth	r1, r1
 8007444:	0424      	lsls	r4, r4, #16
 8007446:	4321      	orrs	r1, r4
 8007448:	c702      	stmia	r7!, {r1}
 800744a:	e7dc      	b.n	8007406 <__mdiff+0xd6>
 800744c:	9900      	ldr	r1, [sp, #0]
 800744e:	3901      	subs	r1, #1
 8007450:	9100      	str	r1, [sp, #0]
 8007452:	e7e6      	b.n	8007422 <__mdiff+0xf2>
 8007454:	0800a387 	.word	0x0800a387
 8007458:	0800a398 	.word	0x0800a398
 800745c:	00000237 	.word	0x00000237
 8007460:	00000245 	.word	0x00000245

08007464 <__ulp>:
 8007464:	b510      	push	{r4, lr}
 8007466:	2400      	movs	r4, #0
 8007468:	4b0c      	ldr	r3, [pc, #48]	@ (800749c <__ulp+0x38>)
 800746a:	4a0d      	ldr	r2, [pc, #52]	@ (80074a0 <__ulp+0x3c>)
 800746c:	400b      	ands	r3, r1
 800746e:	189b      	adds	r3, r3, r2
 8007470:	42a3      	cmp	r3, r4
 8007472:	dc06      	bgt.n	8007482 <__ulp+0x1e>
 8007474:	425b      	negs	r3, r3
 8007476:	151a      	asrs	r2, r3, #20
 8007478:	2a13      	cmp	r2, #19
 800747a:	dc05      	bgt.n	8007488 <__ulp+0x24>
 800747c:	2380      	movs	r3, #128	@ 0x80
 800747e:	031b      	lsls	r3, r3, #12
 8007480:	4113      	asrs	r3, r2
 8007482:	0019      	movs	r1, r3
 8007484:	0020      	movs	r0, r4
 8007486:	bd10      	pop	{r4, pc}
 8007488:	3a14      	subs	r2, #20
 800748a:	2401      	movs	r4, #1
 800748c:	2a1e      	cmp	r2, #30
 800748e:	dc02      	bgt.n	8007496 <__ulp+0x32>
 8007490:	2480      	movs	r4, #128	@ 0x80
 8007492:	0624      	lsls	r4, r4, #24
 8007494:	40d4      	lsrs	r4, r2
 8007496:	2300      	movs	r3, #0
 8007498:	e7f3      	b.n	8007482 <__ulp+0x1e>
 800749a:	46c0      	nop			@ (mov r8, r8)
 800749c:	7ff00000 	.word	0x7ff00000
 80074a0:	fcc00000 	.word	0xfcc00000

080074a4 <__b2d>:
 80074a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80074a6:	0006      	movs	r6, r0
 80074a8:	6903      	ldr	r3, [r0, #16]
 80074aa:	3614      	adds	r6, #20
 80074ac:	009b      	lsls	r3, r3, #2
 80074ae:	18f3      	adds	r3, r6, r3
 80074b0:	1f1d      	subs	r5, r3, #4
 80074b2:	682c      	ldr	r4, [r5, #0]
 80074b4:	000f      	movs	r7, r1
 80074b6:	0020      	movs	r0, r4
 80074b8:	9301      	str	r3, [sp, #4]
 80074ba:	f7ff fd43 	bl	8006f44 <__hi0bits>
 80074be:	2220      	movs	r2, #32
 80074c0:	1a12      	subs	r2, r2, r0
 80074c2:	603a      	str	r2, [r7, #0]
 80074c4:	0003      	movs	r3, r0
 80074c6:	4a1c      	ldr	r2, [pc, #112]	@ (8007538 <__b2d+0x94>)
 80074c8:	280a      	cmp	r0, #10
 80074ca:	dc15      	bgt.n	80074f8 <__b2d+0x54>
 80074cc:	210b      	movs	r1, #11
 80074ce:	0027      	movs	r7, r4
 80074d0:	1a09      	subs	r1, r1, r0
 80074d2:	40cf      	lsrs	r7, r1
 80074d4:	433a      	orrs	r2, r7
 80074d6:	468c      	mov	ip, r1
 80074d8:	0011      	movs	r1, r2
 80074da:	2200      	movs	r2, #0
 80074dc:	42ae      	cmp	r6, r5
 80074de:	d202      	bcs.n	80074e6 <__b2d+0x42>
 80074e0:	9a01      	ldr	r2, [sp, #4]
 80074e2:	3a08      	subs	r2, #8
 80074e4:	6812      	ldr	r2, [r2, #0]
 80074e6:	3315      	adds	r3, #21
 80074e8:	409c      	lsls	r4, r3
 80074ea:	4663      	mov	r3, ip
 80074ec:	0027      	movs	r7, r4
 80074ee:	40da      	lsrs	r2, r3
 80074f0:	4317      	orrs	r7, r2
 80074f2:	0038      	movs	r0, r7
 80074f4:	b003      	add	sp, #12
 80074f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80074f8:	2700      	movs	r7, #0
 80074fa:	42ae      	cmp	r6, r5
 80074fc:	d202      	bcs.n	8007504 <__b2d+0x60>
 80074fe:	9d01      	ldr	r5, [sp, #4]
 8007500:	3d08      	subs	r5, #8
 8007502:	682f      	ldr	r7, [r5, #0]
 8007504:	210b      	movs	r1, #11
 8007506:	4249      	negs	r1, r1
 8007508:	468c      	mov	ip, r1
 800750a:	449c      	add	ip, r3
 800750c:	2b0b      	cmp	r3, #11
 800750e:	d010      	beq.n	8007532 <__b2d+0x8e>
 8007510:	4661      	mov	r1, ip
 8007512:	2320      	movs	r3, #32
 8007514:	408c      	lsls	r4, r1
 8007516:	1a5b      	subs	r3, r3, r1
 8007518:	0039      	movs	r1, r7
 800751a:	40d9      	lsrs	r1, r3
 800751c:	430c      	orrs	r4, r1
 800751e:	4322      	orrs	r2, r4
 8007520:	0011      	movs	r1, r2
 8007522:	2200      	movs	r2, #0
 8007524:	42b5      	cmp	r5, r6
 8007526:	d901      	bls.n	800752c <__b2d+0x88>
 8007528:	3d04      	subs	r5, #4
 800752a:	682a      	ldr	r2, [r5, #0]
 800752c:	4664      	mov	r4, ip
 800752e:	40a7      	lsls	r7, r4
 8007530:	e7dd      	b.n	80074ee <__b2d+0x4a>
 8007532:	4322      	orrs	r2, r4
 8007534:	0011      	movs	r1, r2
 8007536:	e7dc      	b.n	80074f2 <__b2d+0x4e>
 8007538:	3ff00000 	.word	0x3ff00000

0800753c <__d2b>:
 800753c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800753e:	2101      	movs	r1, #1
 8007540:	0016      	movs	r6, r2
 8007542:	001f      	movs	r7, r3
 8007544:	f7ff fc06 	bl	8006d54 <_Balloc>
 8007548:	1e04      	subs	r4, r0, #0
 800754a:	d105      	bne.n	8007558 <__d2b+0x1c>
 800754c:	0022      	movs	r2, r4
 800754e:	4b25      	ldr	r3, [pc, #148]	@ (80075e4 <__d2b+0xa8>)
 8007550:	4825      	ldr	r0, [pc, #148]	@ (80075e8 <__d2b+0xac>)
 8007552:	4926      	ldr	r1, [pc, #152]	@ (80075ec <__d2b+0xb0>)
 8007554:	f002 f8ee 	bl	8009734 <__assert_func>
 8007558:	033b      	lsls	r3, r7, #12
 800755a:	007d      	lsls	r5, r7, #1
 800755c:	0b1b      	lsrs	r3, r3, #12
 800755e:	0d6d      	lsrs	r5, r5, #21
 8007560:	d002      	beq.n	8007568 <__d2b+0x2c>
 8007562:	2280      	movs	r2, #128	@ 0x80
 8007564:	0352      	lsls	r2, r2, #13
 8007566:	4313      	orrs	r3, r2
 8007568:	9301      	str	r3, [sp, #4]
 800756a:	2e00      	cmp	r6, #0
 800756c:	d025      	beq.n	80075ba <__d2b+0x7e>
 800756e:	4668      	mov	r0, sp
 8007570:	9600      	str	r6, [sp, #0]
 8007572:	f7ff fd08 	bl	8006f86 <__lo0bits>
 8007576:	9b01      	ldr	r3, [sp, #4]
 8007578:	9900      	ldr	r1, [sp, #0]
 800757a:	2800      	cmp	r0, #0
 800757c:	d01b      	beq.n	80075b6 <__d2b+0x7a>
 800757e:	2220      	movs	r2, #32
 8007580:	001e      	movs	r6, r3
 8007582:	1a12      	subs	r2, r2, r0
 8007584:	4096      	lsls	r6, r2
 8007586:	0032      	movs	r2, r6
 8007588:	40c3      	lsrs	r3, r0
 800758a:	430a      	orrs	r2, r1
 800758c:	6162      	str	r2, [r4, #20]
 800758e:	9301      	str	r3, [sp, #4]
 8007590:	9e01      	ldr	r6, [sp, #4]
 8007592:	61a6      	str	r6, [r4, #24]
 8007594:	1e73      	subs	r3, r6, #1
 8007596:	419e      	sbcs	r6, r3
 8007598:	3601      	adds	r6, #1
 800759a:	6126      	str	r6, [r4, #16]
 800759c:	2d00      	cmp	r5, #0
 800759e:	d014      	beq.n	80075ca <__d2b+0x8e>
 80075a0:	2635      	movs	r6, #53	@ 0x35
 80075a2:	4b13      	ldr	r3, [pc, #76]	@ (80075f0 <__d2b+0xb4>)
 80075a4:	18ed      	adds	r5, r5, r3
 80075a6:	9b08      	ldr	r3, [sp, #32]
 80075a8:	182d      	adds	r5, r5, r0
 80075aa:	601d      	str	r5, [r3, #0]
 80075ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80075ae:	1a36      	subs	r6, r6, r0
 80075b0:	601e      	str	r6, [r3, #0]
 80075b2:	0020      	movs	r0, r4
 80075b4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80075b6:	6161      	str	r1, [r4, #20]
 80075b8:	e7ea      	b.n	8007590 <__d2b+0x54>
 80075ba:	a801      	add	r0, sp, #4
 80075bc:	f7ff fce3 	bl	8006f86 <__lo0bits>
 80075c0:	9b01      	ldr	r3, [sp, #4]
 80075c2:	2601      	movs	r6, #1
 80075c4:	6163      	str	r3, [r4, #20]
 80075c6:	3020      	adds	r0, #32
 80075c8:	e7e7      	b.n	800759a <__d2b+0x5e>
 80075ca:	4b0a      	ldr	r3, [pc, #40]	@ (80075f4 <__d2b+0xb8>)
 80075cc:	18c0      	adds	r0, r0, r3
 80075ce:	9b08      	ldr	r3, [sp, #32]
 80075d0:	6018      	str	r0, [r3, #0]
 80075d2:	4b09      	ldr	r3, [pc, #36]	@ (80075f8 <__d2b+0xbc>)
 80075d4:	18f3      	adds	r3, r6, r3
 80075d6:	009b      	lsls	r3, r3, #2
 80075d8:	18e3      	adds	r3, r4, r3
 80075da:	6958      	ldr	r0, [r3, #20]
 80075dc:	f7ff fcb2 	bl	8006f44 <__hi0bits>
 80075e0:	0176      	lsls	r6, r6, #5
 80075e2:	e7e3      	b.n	80075ac <__d2b+0x70>
 80075e4:	0800a387 	.word	0x0800a387
 80075e8:	0800a398 	.word	0x0800a398
 80075ec:	0000030f 	.word	0x0000030f
 80075f0:	fffffbcd 	.word	0xfffffbcd
 80075f4:	fffffbce 	.word	0xfffffbce
 80075f8:	3fffffff 	.word	0x3fffffff

080075fc <__ratio>:
 80075fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80075fe:	b087      	sub	sp, #28
 8007600:	000f      	movs	r7, r1
 8007602:	a904      	add	r1, sp, #16
 8007604:	0006      	movs	r6, r0
 8007606:	f7ff ff4d 	bl	80074a4 <__b2d>
 800760a:	9000      	str	r0, [sp, #0]
 800760c:	9101      	str	r1, [sp, #4]
 800760e:	9b00      	ldr	r3, [sp, #0]
 8007610:	9c01      	ldr	r4, [sp, #4]
 8007612:	0038      	movs	r0, r7
 8007614:	a905      	add	r1, sp, #20
 8007616:	9302      	str	r3, [sp, #8]
 8007618:	9403      	str	r4, [sp, #12]
 800761a:	f7ff ff43 	bl	80074a4 <__b2d>
 800761e:	000d      	movs	r5, r1
 8007620:	0002      	movs	r2, r0
 8007622:	000b      	movs	r3, r1
 8007624:	6930      	ldr	r0, [r6, #16]
 8007626:	6939      	ldr	r1, [r7, #16]
 8007628:	9e04      	ldr	r6, [sp, #16]
 800762a:	1a40      	subs	r0, r0, r1
 800762c:	9905      	ldr	r1, [sp, #20]
 800762e:	0140      	lsls	r0, r0, #5
 8007630:	1a71      	subs	r1, r6, r1
 8007632:	1841      	adds	r1, r0, r1
 8007634:	0508      	lsls	r0, r1, #20
 8007636:	2900      	cmp	r1, #0
 8007638:	dd08      	ble.n	800764c <__ratio+0x50>
 800763a:	9901      	ldr	r1, [sp, #4]
 800763c:	1841      	adds	r1, r0, r1
 800763e:	9103      	str	r1, [sp, #12]
 8007640:	9802      	ldr	r0, [sp, #8]
 8007642:	9903      	ldr	r1, [sp, #12]
 8007644:	f7f9 fb64 	bl	8000d10 <__aeabi_ddiv>
 8007648:	b007      	add	sp, #28
 800764a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800764c:	1a2b      	subs	r3, r5, r0
 800764e:	e7f7      	b.n	8007640 <__ratio+0x44>

08007650 <__copybits>:
 8007650:	b570      	push	{r4, r5, r6, lr}
 8007652:	0014      	movs	r4, r2
 8007654:	0005      	movs	r5, r0
 8007656:	3901      	subs	r1, #1
 8007658:	6913      	ldr	r3, [r2, #16]
 800765a:	1149      	asrs	r1, r1, #5
 800765c:	3101      	adds	r1, #1
 800765e:	0089      	lsls	r1, r1, #2
 8007660:	3414      	adds	r4, #20
 8007662:	009b      	lsls	r3, r3, #2
 8007664:	1841      	adds	r1, r0, r1
 8007666:	18e3      	adds	r3, r4, r3
 8007668:	42a3      	cmp	r3, r4
 800766a:	d80d      	bhi.n	8007688 <__copybits+0x38>
 800766c:	0014      	movs	r4, r2
 800766e:	3411      	adds	r4, #17
 8007670:	2500      	movs	r5, #0
 8007672:	42a3      	cmp	r3, r4
 8007674:	d303      	bcc.n	800767e <__copybits+0x2e>
 8007676:	1a9b      	subs	r3, r3, r2
 8007678:	3b11      	subs	r3, #17
 800767a:	089b      	lsrs	r3, r3, #2
 800767c:	009d      	lsls	r5, r3, #2
 800767e:	2300      	movs	r3, #0
 8007680:	1940      	adds	r0, r0, r5
 8007682:	4281      	cmp	r1, r0
 8007684:	d803      	bhi.n	800768e <__copybits+0x3e>
 8007686:	bd70      	pop	{r4, r5, r6, pc}
 8007688:	cc40      	ldmia	r4!, {r6}
 800768a:	c540      	stmia	r5!, {r6}
 800768c:	e7ec      	b.n	8007668 <__copybits+0x18>
 800768e:	c008      	stmia	r0!, {r3}
 8007690:	e7f7      	b.n	8007682 <__copybits+0x32>

08007692 <__any_on>:
 8007692:	0002      	movs	r2, r0
 8007694:	6900      	ldr	r0, [r0, #16]
 8007696:	b510      	push	{r4, lr}
 8007698:	3214      	adds	r2, #20
 800769a:	114b      	asrs	r3, r1, #5
 800769c:	4298      	cmp	r0, r3
 800769e:	db13      	blt.n	80076c8 <__any_on+0x36>
 80076a0:	dd0c      	ble.n	80076bc <__any_on+0x2a>
 80076a2:	241f      	movs	r4, #31
 80076a4:	0008      	movs	r0, r1
 80076a6:	4020      	ands	r0, r4
 80076a8:	4221      	tst	r1, r4
 80076aa:	d007      	beq.n	80076bc <__any_on+0x2a>
 80076ac:	0099      	lsls	r1, r3, #2
 80076ae:	588c      	ldr	r4, [r1, r2]
 80076b0:	0021      	movs	r1, r4
 80076b2:	40c1      	lsrs	r1, r0
 80076b4:	4081      	lsls	r1, r0
 80076b6:	2001      	movs	r0, #1
 80076b8:	428c      	cmp	r4, r1
 80076ba:	d104      	bne.n	80076c6 <__any_on+0x34>
 80076bc:	009b      	lsls	r3, r3, #2
 80076be:	18d3      	adds	r3, r2, r3
 80076c0:	4293      	cmp	r3, r2
 80076c2:	d803      	bhi.n	80076cc <__any_on+0x3a>
 80076c4:	2000      	movs	r0, #0
 80076c6:	bd10      	pop	{r4, pc}
 80076c8:	0003      	movs	r3, r0
 80076ca:	e7f7      	b.n	80076bc <__any_on+0x2a>
 80076cc:	3b04      	subs	r3, #4
 80076ce:	6819      	ldr	r1, [r3, #0]
 80076d0:	2900      	cmp	r1, #0
 80076d2:	d0f5      	beq.n	80076c0 <__any_on+0x2e>
 80076d4:	2001      	movs	r0, #1
 80076d6:	e7f6      	b.n	80076c6 <__any_on+0x34>

080076d8 <sulp>:
 80076d8:	b570      	push	{r4, r5, r6, lr}
 80076da:	0016      	movs	r6, r2
 80076dc:	000d      	movs	r5, r1
 80076de:	f7ff fec1 	bl	8007464 <__ulp>
 80076e2:	2e00      	cmp	r6, #0
 80076e4:	d00d      	beq.n	8007702 <sulp+0x2a>
 80076e6:	236b      	movs	r3, #107	@ 0x6b
 80076e8:	006a      	lsls	r2, r5, #1
 80076ea:	0d52      	lsrs	r2, r2, #21
 80076ec:	1a9b      	subs	r3, r3, r2
 80076ee:	2b00      	cmp	r3, #0
 80076f0:	dd07      	ble.n	8007702 <sulp+0x2a>
 80076f2:	2400      	movs	r4, #0
 80076f4:	4a03      	ldr	r2, [pc, #12]	@ (8007704 <sulp+0x2c>)
 80076f6:	051b      	lsls	r3, r3, #20
 80076f8:	189d      	adds	r5, r3, r2
 80076fa:	002b      	movs	r3, r5
 80076fc:	0022      	movs	r2, r4
 80076fe:	f7f9 ff41 	bl	8001584 <__aeabi_dmul>
 8007702:	bd70      	pop	{r4, r5, r6, pc}
 8007704:	3ff00000 	.word	0x3ff00000

08007708 <_strtod_l>:
 8007708:	b5f0      	push	{r4, r5, r6, r7, lr}
 800770a:	b0a3      	sub	sp, #140	@ 0x8c
 800770c:	921b      	str	r2, [sp, #108]	@ 0x6c
 800770e:	2200      	movs	r2, #0
 8007710:	2600      	movs	r6, #0
 8007712:	2700      	movs	r7, #0
 8007714:	9005      	str	r0, [sp, #20]
 8007716:	9109      	str	r1, [sp, #36]	@ 0x24
 8007718:	921e      	str	r2, [sp, #120]	@ 0x78
 800771a:	911d      	str	r1, [sp, #116]	@ 0x74
 800771c:	780a      	ldrb	r2, [r1, #0]
 800771e:	2a2b      	cmp	r2, #43	@ 0x2b
 8007720:	d053      	beq.n	80077ca <_strtod_l+0xc2>
 8007722:	d83f      	bhi.n	80077a4 <_strtod_l+0x9c>
 8007724:	2a0d      	cmp	r2, #13
 8007726:	d839      	bhi.n	800779c <_strtod_l+0x94>
 8007728:	2a08      	cmp	r2, #8
 800772a:	d839      	bhi.n	80077a0 <_strtod_l+0x98>
 800772c:	2a00      	cmp	r2, #0
 800772e:	d042      	beq.n	80077b6 <_strtod_l+0xae>
 8007730:	2200      	movs	r2, #0
 8007732:	9212      	str	r2, [sp, #72]	@ 0x48
 8007734:	2100      	movs	r1, #0
 8007736:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8007738:	910c      	str	r1, [sp, #48]	@ 0x30
 800773a:	782a      	ldrb	r2, [r5, #0]
 800773c:	2a30      	cmp	r2, #48	@ 0x30
 800773e:	d000      	beq.n	8007742 <_strtod_l+0x3a>
 8007740:	e083      	b.n	800784a <_strtod_l+0x142>
 8007742:	786a      	ldrb	r2, [r5, #1]
 8007744:	3120      	adds	r1, #32
 8007746:	438a      	bics	r2, r1
 8007748:	2a58      	cmp	r2, #88	@ 0x58
 800774a:	d000      	beq.n	800774e <_strtod_l+0x46>
 800774c:	e073      	b.n	8007836 <_strtod_l+0x12e>
 800774e:	9302      	str	r3, [sp, #8]
 8007750:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8007752:	4a9b      	ldr	r2, [pc, #620]	@ (80079c0 <_strtod_l+0x2b8>)
 8007754:	9301      	str	r3, [sp, #4]
 8007756:	ab1e      	add	r3, sp, #120	@ 0x78
 8007758:	9300      	str	r3, [sp, #0]
 800775a:	9805      	ldr	r0, [sp, #20]
 800775c:	ab1f      	add	r3, sp, #124	@ 0x7c
 800775e:	a91d      	add	r1, sp, #116	@ 0x74
 8007760:	f002 f89c 	bl	800989c <__gethex>
 8007764:	230f      	movs	r3, #15
 8007766:	0002      	movs	r2, r0
 8007768:	401a      	ands	r2, r3
 800776a:	0004      	movs	r4, r0
 800776c:	9206      	str	r2, [sp, #24]
 800776e:	4218      	tst	r0, r3
 8007770:	d005      	beq.n	800777e <_strtod_l+0x76>
 8007772:	2a06      	cmp	r2, #6
 8007774:	d12b      	bne.n	80077ce <_strtod_l+0xc6>
 8007776:	2300      	movs	r3, #0
 8007778:	3501      	adds	r5, #1
 800777a:	951d      	str	r5, [sp, #116]	@ 0x74
 800777c:	9312      	str	r3, [sp, #72]	@ 0x48
 800777e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8007780:	2b00      	cmp	r3, #0
 8007782:	d002      	beq.n	800778a <_strtod_l+0x82>
 8007784:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8007786:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8007788:	6013      	str	r3, [r2, #0]
 800778a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800778c:	2b00      	cmp	r3, #0
 800778e:	d019      	beq.n	80077c4 <_strtod_l+0xbc>
 8007790:	2380      	movs	r3, #128	@ 0x80
 8007792:	0030      	movs	r0, r6
 8007794:	061b      	lsls	r3, r3, #24
 8007796:	18f9      	adds	r1, r7, r3
 8007798:	b023      	add	sp, #140	@ 0x8c
 800779a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800779c:	2a20      	cmp	r2, #32
 800779e:	d1c7      	bne.n	8007730 <_strtod_l+0x28>
 80077a0:	3101      	adds	r1, #1
 80077a2:	e7ba      	b.n	800771a <_strtod_l+0x12>
 80077a4:	2a2d      	cmp	r2, #45	@ 0x2d
 80077a6:	d1c3      	bne.n	8007730 <_strtod_l+0x28>
 80077a8:	3a2c      	subs	r2, #44	@ 0x2c
 80077aa:	9212      	str	r2, [sp, #72]	@ 0x48
 80077ac:	1c4a      	adds	r2, r1, #1
 80077ae:	921d      	str	r2, [sp, #116]	@ 0x74
 80077b0:	784a      	ldrb	r2, [r1, #1]
 80077b2:	2a00      	cmp	r2, #0
 80077b4:	d1be      	bne.n	8007734 <_strtod_l+0x2c>
 80077b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80077b8:	931d      	str	r3, [sp, #116]	@ 0x74
 80077ba:	2300      	movs	r3, #0
 80077bc:	9312      	str	r3, [sp, #72]	@ 0x48
 80077be:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80077c0:	2b00      	cmp	r3, #0
 80077c2:	d1df      	bne.n	8007784 <_strtod_l+0x7c>
 80077c4:	0030      	movs	r0, r6
 80077c6:	0039      	movs	r1, r7
 80077c8:	e7e6      	b.n	8007798 <_strtod_l+0x90>
 80077ca:	2200      	movs	r2, #0
 80077cc:	e7ed      	b.n	80077aa <_strtod_l+0xa2>
 80077ce:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 80077d0:	2a00      	cmp	r2, #0
 80077d2:	d007      	beq.n	80077e4 <_strtod_l+0xdc>
 80077d4:	2135      	movs	r1, #53	@ 0x35
 80077d6:	a820      	add	r0, sp, #128	@ 0x80
 80077d8:	f7ff ff3a 	bl	8007650 <__copybits>
 80077dc:	991e      	ldr	r1, [sp, #120]	@ 0x78
 80077de:	9805      	ldr	r0, [sp, #20]
 80077e0:	f7ff fafc 	bl	8006ddc <_Bfree>
 80077e4:	9806      	ldr	r0, [sp, #24]
 80077e6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80077e8:	3801      	subs	r0, #1
 80077ea:	2804      	cmp	r0, #4
 80077ec:	d806      	bhi.n	80077fc <_strtod_l+0xf4>
 80077ee:	f7f8 fc93 	bl	8000118 <__gnu_thumb1_case_uqi>
 80077f2:	0312      	.short	0x0312
 80077f4:	1e1c      	.short	0x1e1c
 80077f6:	12          	.byte	0x12
 80077f7:	00          	.byte	0x00
 80077f8:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 80077fa:	9f21      	ldr	r7, [sp, #132]	@ 0x84
 80077fc:	05e4      	lsls	r4, r4, #23
 80077fe:	d502      	bpl.n	8007806 <_strtod_l+0xfe>
 8007800:	2380      	movs	r3, #128	@ 0x80
 8007802:	061b      	lsls	r3, r3, #24
 8007804:	431f      	orrs	r7, r3
 8007806:	4b6f      	ldr	r3, [pc, #444]	@ (80079c4 <_strtod_l+0x2bc>)
 8007808:	423b      	tst	r3, r7
 800780a:	d1b8      	bne.n	800777e <_strtod_l+0x76>
 800780c:	f7fe faea 	bl	8005de4 <__errno>
 8007810:	2322      	movs	r3, #34	@ 0x22
 8007812:	6003      	str	r3, [r0, #0]
 8007814:	e7b3      	b.n	800777e <_strtod_l+0x76>
 8007816:	496c      	ldr	r1, [pc, #432]	@ (80079c8 <_strtod_l+0x2c0>)
 8007818:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800781a:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 800781c:	400a      	ands	r2, r1
 800781e:	496b      	ldr	r1, [pc, #428]	@ (80079cc <_strtod_l+0x2c4>)
 8007820:	185b      	adds	r3, r3, r1
 8007822:	051b      	lsls	r3, r3, #20
 8007824:	431a      	orrs	r2, r3
 8007826:	0017      	movs	r7, r2
 8007828:	e7e8      	b.n	80077fc <_strtod_l+0xf4>
 800782a:	4f66      	ldr	r7, [pc, #408]	@ (80079c4 <_strtod_l+0x2bc>)
 800782c:	e7e6      	b.n	80077fc <_strtod_l+0xf4>
 800782e:	2601      	movs	r6, #1
 8007830:	4f67      	ldr	r7, [pc, #412]	@ (80079d0 <_strtod_l+0x2c8>)
 8007832:	4276      	negs	r6, r6
 8007834:	e7e2      	b.n	80077fc <_strtod_l+0xf4>
 8007836:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8007838:	1c5a      	adds	r2, r3, #1
 800783a:	921d      	str	r2, [sp, #116]	@ 0x74
 800783c:	785b      	ldrb	r3, [r3, #1]
 800783e:	2b30      	cmp	r3, #48	@ 0x30
 8007840:	d0f9      	beq.n	8007836 <_strtod_l+0x12e>
 8007842:	2b00      	cmp	r3, #0
 8007844:	d09b      	beq.n	800777e <_strtod_l+0x76>
 8007846:	2301      	movs	r3, #1
 8007848:	930c      	str	r3, [sp, #48]	@ 0x30
 800784a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800784c:	220a      	movs	r2, #10
 800784e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8007850:	2300      	movs	r3, #0
 8007852:	9310      	str	r3, [sp, #64]	@ 0x40
 8007854:	930d      	str	r3, [sp, #52]	@ 0x34
 8007856:	9308      	str	r3, [sp, #32]
 8007858:	981d      	ldr	r0, [sp, #116]	@ 0x74
 800785a:	7804      	ldrb	r4, [r0, #0]
 800785c:	0023      	movs	r3, r4
 800785e:	3b30      	subs	r3, #48	@ 0x30
 8007860:	b2d9      	uxtb	r1, r3
 8007862:	2909      	cmp	r1, #9
 8007864:	d927      	bls.n	80078b6 <_strtod_l+0x1ae>
 8007866:	2201      	movs	r2, #1
 8007868:	495a      	ldr	r1, [pc, #360]	@ (80079d4 <_strtod_l+0x2cc>)
 800786a:	f001 ff0b 	bl	8009684 <strncmp>
 800786e:	2800      	cmp	r0, #0
 8007870:	d033      	beq.n	80078da <_strtod_l+0x1d2>
 8007872:	2000      	movs	r0, #0
 8007874:	0023      	movs	r3, r4
 8007876:	4684      	mov	ip, r0
 8007878:	9a08      	ldr	r2, [sp, #32]
 800787a:	900e      	str	r0, [sp, #56]	@ 0x38
 800787c:	9206      	str	r2, [sp, #24]
 800787e:	2220      	movs	r2, #32
 8007880:	0019      	movs	r1, r3
 8007882:	4391      	bics	r1, r2
 8007884:	000a      	movs	r2, r1
 8007886:	2100      	movs	r1, #0
 8007888:	9107      	str	r1, [sp, #28]
 800788a:	2a45      	cmp	r2, #69	@ 0x45
 800788c:	d000      	beq.n	8007890 <_strtod_l+0x188>
 800788e:	e0cb      	b.n	8007a28 <_strtod_l+0x320>
 8007890:	9b06      	ldr	r3, [sp, #24]
 8007892:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8007894:	4303      	orrs	r3, r0
 8007896:	4313      	orrs	r3, r2
 8007898:	428b      	cmp	r3, r1
 800789a:	d08c      	beq.n	80077b6 <_strtod_l+0xae>
 800789c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800789e:	9309      	str	r3, [sp, #36]	@ 0x24
 80078a0:	3301      	adds	r3, #1
 80078a2:	931d      	str	r3, [sp, #116]	@ 0x74
 80078a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80078a6:	785b      	ldrb	r3, [r3, #1]
 80078a8:	2b2b      	cmp	r3, #43	@ 0x2b
 80078aa:	d07b      	beq.n	80079a4 <_strtod_l+0x29c>
 80078ac:	000c      	movs	r4, r1
 80078ae:	2b2d      	cmp	r3, #45	@ 0x2d
 80078b0:	d17e      	bne.n	80079b0 <_strtod_l+0x2a8>
 80078b2:	2401      	movs	r4, #1
 80078b4:	e077      	b.n	80079a6 <_strtod_l+0x29e>
 80078b6:	9908      	ldr	r1, [sp, #32]
 80078b8:	2908      	cmp	r1, #8
 80078ba:	dc09      	bgt.n	80078d0 <_strtod_l+0x1c8>
 80078bc:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80078be:	4351      	muls	r1, r2
 80078c0:	185b      	adds	r3, r3, r1
 80078c2:	930d      	str	r3, [sp, #52]	@ 0x34
 80078c4:	9b08      	ldr	r3, [sp, #32]
 80078c6:	3001      	adds	r0, #1
 80078c8:	3301      	adds	r3, #1
 80078ca:	9308      	str	r3, [sp, #32]
 80078cc:	901d      	str	r0, [sp, #116]	@ 0x74
 80078ce:	e7c3      	b.n	8007858 <_strtod_l+0x150>
 80078d0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80078d2:	4355      	muls	r5, r2
 80078d4:	195b      	adds	r3, r3, r5
 80078d6:	9310      	str	r3, [sp, #64]	@ 0x40
 80078d8:	e7f4      	b.n	80078c4 <_strtod_l+0x1bc>
 80078da:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80078dc:	1c5a      	adds	r2, r3, #1
 80078de:	921d      	str	r2, [sp, #116]	@ 0x74
 80078e0:	9a08      	ldr	r2, [sp, #32]
 80078e2:	785b      	ldrb	r3, [r3, #1]
 80078e4:	2a00      	cmp	r2, #0
 80078e6:	d03e      	beq.n	8007966 <_strtod_l+0x25e>
 80078e8:	900e      	str	r0, [sp, #56]	@ 0x38
 80078ea:	9206      	str	r2, [sp, #24]
 80078ec:	001a      	movs	r2, r3
 80078ee:	3a30      	subs	r2, #48	@ 0x30
 80078f0:	2a09      	cmp	r2, #9
 80078f2:	d912      	bls.n	800791a <_strtod_l+0x212>
 80078f4:	2201      	movs	r2, #1
 80078f6:	4694      	mov	ip, r2
 80078f8:	e7c1      	b.n	800787e <_strtod_l+0x176>
 80078fa:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80078fc:	3001      	adds	r0, #1
 80078fe:	1c5a      	adds	r2, r3, #1
 8007900:	921d      	str	r2, [sp, #116]	@ 0x74
 8007902:	785b      	ldrb	r3, [r3, #1]
 8007904:	2b30      	cmp	r3, #48	@ 0x30
 8007906:	d0f8      	beq.n	80078fa <_strtod_l+0x1f2>
 8007908:	001a      	movs	r2, r3
 800790a:	3a31      	subs	r2, #49	@ 0x31
 800790c:	2a08      	cmp	r2, #8
 800790e:	d844      	bhi.n	800799a <_strtod_l+0x292>
 8007910:	900e      	str	r0, [sp, #56]	@ 0x38
 8007912:	2000      	movs	r0, #0
 8007914:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8007916:	9006      	str	r0, [sp, #24]
 8007918:	9213      	str	r2, [sp, #76]	@ 0x4c
 800791a:	001c      	movs	r4, r3
 800791c:	1c42      	adds	r2, r0, #1
 800791e:	3c30      	subs	r4, #48	@ 0x30
 8007920:	2b30      	cmp	r3, #48	@ 0x30
 8007922:	d01a      	beq.n	800795a <_strtod_l+0x252>
 8007924:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007926:	9906      	ldr	r1, [sp, #24]
 8007928:	189b      	adds	r3, r3, r2
 800792a:	930e      	str	r3, [sp, #56]	@ 0x38
 800792c:	230a      	movs	r3, #10
 800792e:	469c      	mov	ip, r3
 8007930:	9d06      	ldr	r5, [sp, #24]
 8007932:	1c4b      	adds	r3, r1, #1
 8007934:	1b5d      	subs	r5, r3, r5
 8007936:	42aa      	cmp	r2, r5
 8007938:	dc17      	bgt.n	800796a <_strtod_l+0x262>
 800793a:	43c3      	mvns	r3, r0
 800793c:	9a06      	ldr	r2, [sp, #24]
 800793e:	17db      	asrs	r3, r3, #31
 8007940:	4003      	ands	r3, r0
 8007942:	18d1      	adds	r1, r2, r3
 8007944:	3201      	adds	r2, #1
 8007946:	18d3      	adds	r3, r2, r3
 8007948:	9306      	str	r3, [sp, #24]
 800794a:	2908      	cmp	r1, #8
 800794c:	dc1c      	bgt.n	8007988 <_strtod_l+0x280>
 800794e:	230a      	movs	r3, #10
 8007950:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8007952:	4353      	muls	r3, r2
 8007954:	2200      	movs	r2, #0
 8007956:	18e3      	adds	r3, r4, r3
 8007958:	930d      	str	r3, [sp, #52]	@ 0x34
 800795a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800795c:	0010      	movs	r0, r2
 800795e:	1c59      	adds	r1, r3, #1
 8007960:	911d      	str	r1, [sp, #116]	@ 0x74
 8007962:	785b      	ldrb	r3, [r3, #1]
 8007964:	e7c2      	b.n	80078ec <_strtod_l+0x1e4>
 8007966:	9808      	ldr	r0, [sp, #32]
 8007968:	e7cc      	b.n	8007904 <_strtod_l+0x1fc>
 800796a:	2908      	cmp	r1, #8
 800796c:	dc05      	bgt.n	800797a <_strtod_l+0x272>
 800796e:	4665      	mov	r5, ip
 8007970:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8007972:	4369      	muls	r1, r5
 8007974:	910d      	str	r1, [sp, #52]	@ 0x34
 8007976:	0019      	movs	r1, r3
 8007978:	e7da      	b.n	8007930 <_strtod_l+0x228>
 800797a:	2b10      	cmp	r3, #16
 800797c:	dcfb      	bgt.n	8007976 <_strtod_l+0x26e>
 800797e:	4661      	mov	r1, ip
 8007980:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8007982:	434d      	muls	r5, r1
 8007984:	9510      	str	r5, [sp, #64]	@ 0x40
 8007986:	e7f6      	b.n	8007976 <_strtod_l+0x26e>
 8007988:	2200      	movs	r2, #0
 800798a:	290f      	cmp	r1, #15
 800798c:	dce5      	bgt.n	800795a <_strtod_l+0x252>
 800798e:	230a      	movs	r3, #10
 8007990:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8007992:	435d      	muls	r5, r3
 8007994:	1963      	adds	r3, r4, r5
 8007996:	9310      	str	r3, [sp, #64]	@ 0x40
 8007998:	e7df      	b.n	800795a <_strtod_l+0x252>
 800799a:	2200      	movs	r2, #0
 800799c:	920e      	str	r2, [sp, #56]	@ 0x38
 800799e:	9206      	str	r2, [sp, #24]
 80079a0:	3201      	adds	r2, #1
 80079a2:	e7a8      	b.n	80078f6 <_strtod_l+0x1ee>
 80079a4:	2400      	movs	r4, #0
 80079a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80079a8:	3302      	adds	r3, #2
 80079aa:	931d      	str	r3, [sp, #116]	@ 0x74
 80079ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80079ae:	789b      	ldrb	r3, [r3, #2]
 80079b0:	001a      	movs	r2, r3
 80079b2:	3a30      	subs	r2, #48	@ 0x30
 80079b4:	2a09      	cmp	r2, #9
 80079b6:	d913      	bls.n	80079e0 <_strtod_l+0x2d8>
 80079b8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80079ba:	921d      	str	r2, [sp, #116]	@ 0x74
 80079bc:	2200      	movs	r2, #0
 80079be:	e032      	b.n	8007a26 <_strtod_l+0x31e>
 80079c0:	0800a5d4 	.word	0x0800a5d4
 80079c4:	7ff00000 	.word	0x7ff00000
 80079c8:	ffefffff 	.word	0xffefffff
 80079cc:	00000433 	.word	0x00000433
 80079d0:	7fffffff 	.word	0x7fffffff
 80079d4:	0800a3f1 	.word	0x0800a3f1
 80079d8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80079da:	1c5a      	adds	r2, r3, #1
 80079dc:	921d      	str	r2, [sp, #116]	@ 0x74
 80079de:	785b      	ldrb	r3, [r3, #1]
 80079e0:	2b30      	cmp	r3, #48	@ 0x30
 80079e2:	d0f9      	beq.n	80079d8 <_strtod_l+0x2d0>
 80079e4:	2200      	movs	r2, #0
 80079e6:	9207      	str	r2, [sp, #28]
 80079e8:	001a      	movs	r2, r3
 80079ea:	3a31      	subs	r2, #49	@ 0x31
 80079ec:	2a08      	cmp	r2, #8
 80079ee:	d81b      	bhi.n	8007a28 <_strtod_l+0x320>
 80079f0:	3b30      	subs	r3, #48	@ 0x30
 80079f2:	001a      	movs	r2, r3
 80079f4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80079f6:	9307      	str	r3, [sp, #28]
 80079f8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80079fa:	1c59      	adds	r1, r3, #1
 80079fc:	911d      	str	r1, [sp, #116]	@ 0x74
 80079fe:	785b      	ldrb	r3, [r3, #1]
 8007a00:	001d      	movs	r5, r3
 8007a02:	3d30      	subs	r5, #48	@ 0x30
 8007a04:	2d09      	cmp	r5, #9
 8007a06:	d93a      	bls.n	8007a7e <_strtod_l+0x376>
 8007a08:	9d07      	ldr	r5, [sp, #28]
 8007a0a:	1b49      	subs	r1, r1, r5
 8007a0c:	000d      	movs	r5, r1
 8007a0e:	49b3      	ldr	r1, [pc, #716]	@ (8007cdc <_strtod_l+0x5d4>)
 8007a10:	9107      	str	r1, [sp, #28]
 8007a12:	2d08      	cmp	r5, #8
 8007a14:	dc03      	bgt.n	8007a1e <_strtod_l+0x316>
 8007a16:	9207      	str	r2, [sp, #28]
 8007a18:	428a      	cmp	r2, r1
 8007a1a:	dd00      	ble.n	8007a1e <_strtod_l+0x316>
 8007a1c:	9107      	str	r1, [sp, #28]
 8007a1e:	2c00      	cmp	r4, #0
 8007a20:	d002      	beq.n	8007a28 <_strtod_l+0x320>
 8007a22:	9a07      	ldr	r2, [sp, #28]
 8007a24:	4252      	negs	r2, r2
 8007a26:	9207      	str	r2, [sp, #28]
 8007a28:	9a06      	ldr	r2, [sp, #24]
 8007a2a:	2a00      	cmp	r2, #0
 8007a2c:	d14b      	bne.n	8007ac6 <_strtod_l+0x3be>
 8007a2e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8007a30:	4310      	orrs	r0, r2
 8007a32:	d000      	beq.n	8007a36 <_strtod_l+0x32e>
 8007a34:	e6a3      	b.n	800777e <_strtod_l+0x76>
 8007a36:	4662      	mov	r2, ip
 8007a38:	2a00      	cmp	r2, #0
 8007a3a:	d000      	beq.n	8007a3e <_strtod_l+0x336>
 8007a3c:	e6bb      	b.n	80077b6 <_strtod_l+0xae>
 8007a3e:	2b69      	cmp	r3, #105	@ 0x69
 8007a40:	d025      	beq.n	8007a8e <_strtod_l+0x386>
 8007a42:	dc21      	bgt.n	8007a88 <_strtod_l+0x380>
 8007a44:	2b49      	cmp	r3, #73	@ 0x49
 8007a46:	d022      	beq.n	8007a8e <_strtod_l+0x386>
 8007a48:	2b4e      	cmp	r3, #78	@ 0x4e
 8007a4a:	d000      	beq.n	8007a4e <_strtod_l+0x346>
 8007a4c:	e6b3      	b.n	80077b6 <_strtod_l+0xae>
 8007a4e:	49a4      	ldr	r1, [pc, #656]	@ (8007ce0 <_strtod_l+0x5d8>)
 8007a50:	a81d      	add	r0, sp, #116	@ 0x74
 8007a52:	f002 f959 	bl	8009d08 <__match>
 8007a56:	2800      	cmp	r0, #0
 8007a58:	d100      	bne.n	8007a5c <_strtod_l+0x354>
 8007a5a:	e6ac      	b.n	80077b6 <_strtod_l+0xae>
 8007a5c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8007a5e:	781b      	ldrb	r3, [r3, #0]
 8007a60:	2b28      	cmp	r3, #40	@ 0x28
 8007a62:	d12a      	bne.n	8007aba <_strtod_l+0x3b2>
 8007a64:	499f      	ldr	r1, [pc, #636]	@ (8007ce4 <_strtod_l+0x5dc>)
 8007a66:	aa20      	add	r2, sp, #128	@ 0x80
 8007a68:	a81d      	add	r0, sp, #116	@ 0x74
 8007a6a:	f002 f961 	bl	8009d30 <__hexnan>
 8007a6e:	2805      	cmp	r0, #5
 8007a70:	d123      	bne.n	8007aba <_strtod_l+0x3b2>
 8007a72:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8007a74:	4a9c      	ldr	r2, [pc, #624]	@ (8007ce8 <_strtod_l+0x5e0>)
 8007a76:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 8007a78:	431a      	orrs	r2, r3
 8007a7a:	0017      	movs	r7, r2
 8007a7c:	e67f      	b.n	800777e <_strtod_l+0x76>
 8007a7e:	210a      	movs	r1, #10
 8007a80:	434a      	muls	r2, r1
 8007a82:	18d2      	adds	r2, r2, r3
 8007a84:	3a30      	subs	r2, #48	@ 0x30
 8007a86:	e7b7      	b.n	80079f8 <_strtod_l+0x2f0>
 8007a88:	2b6e      	cmp	r3, #110	@ 0x6e
 8007a8a:	d0e0      	beq.n	8007a4e <_strtod_l+0x346>
 8007a8c:	e693      	b.n	80077b6 <_strtod_l+0xae>
 8007a8e:	4997      	ldr	r1, [pc, #604]	@ (8007cec <_strtod_l+0x5e4>)
 8007a90:	a81d      	add	r0, sp, #116	@ 0x74
 8007a92:	f002 f939 	bl	8009d08 <__match>
 8007a96:	2800      	cmp	r0, #0
 8007a98:	d100      	bne.n	8007a9c <_strtod_l+0x394>
 8007a9a:	e68c      	b.n	80077b6 <_strtod_l+0xae>
 8007a9c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8007a9e:	4994      	ldr	r1, [pc, #592]	@ (8007cf0 <_strtod_l+0x5e8>)
 8007aa0:	3b01      	subs	r3, #1
 8007aa2:	a81d      	add	r0, sp, #116	@ 0x74
 8007aa4:	931d      	str	r3, [sp, #116]	@ 0x74
 8007aa6:	f002 f92f 	bl	8009d08 <__match>
 8007aaa:	2800      	cmp	r0, #0
 8007aac:	d102      	bne.n	8007ab4 <_strtod_l+0x3ac>
 8007aae:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8007ab0:	3301      	adds	r3, #1
 8007ab2:	931d      	str	r3, [sp, #116]	@ 0x74
 8007ab4:	2600      	movs	r6, #0
 8007ab6:	4f8c      	ldr	r7, [pc, #560]	@ (8007ce8 <_strtod_l+0x5e0>)
 8007ab8:	e661      	b.n	800777e <_strtod_l+0x76>
 8007aba:	488e      	ldr	r0, [pc, #568]	@ (8007cf4 <_strtod_l+0x5ec>)
 8007abc:	f001 fe34 	bl	8009728 <nan>
 8007ac0:	0006      	movs	r6, r0
 8007ac2:	000f      	movs	r7, r1
 8007ac4:	e65b      	b.n	800777e <_strtod_l+0x76>
 8007ac6:	9b07      	ldr	r3, [sp, #28]
 8007ac8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007aca:	1a9b      	subs	r3, r3, r2
 8007acc:	930c      	str	r3, [sp, #48]	@ 0x30
 8007ace:	9b08      	ldr	r3, [sp, #32]
 8007ad0:	2b00      	cmp	r3, #0
 8007ad2:	d101      	bne.n	8007ad8 <_strtod_l+0x3d0>
 8007ad4:	9b06      	ldr	r3, [sp, #24]
 8007ad6:	9308      	str	r3, [sp, #32]
 8007ad8:	9c06      	ldr	r4, [sp, #24]
 8007ada:	2c10      	cmp	r4, #16
 8007adc:	dd00      	ble.n	8007ae0 <_strtod_l+0x3d8>
 8007ade:	2410      	movs	r4, #16
 8007ae0:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8007ae2:	f7fa fccb 	bl	800247c <__aeabi_ui2d>
 8007ae6:	9b06      	ldr	r3, [sp, #24]
 8007ae8:	0006      	movs	r6, r0
 8007aea:	000f      	movs	r7, r1
 8007aec:	2b09      	cmp	r3, #9
 8007aee:	dc13      	bgt.n	8007b18 <_strtod_l+0x410>
 8007af0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8007af2:	2b00      	cmp	r3, #0
 8007af4:	d100      	bne.n	8007af8 <_strtod_l+0x3f0>
 8007af6:	e642      	b.n	800777e <_strtod_l+0x76>
 8007af8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8007afa:	2b00      	cmp	r3, #0
 8007afc:	dc00      	bgt.n	8007b00 <_strtod_l+0x3f8>
 8007afe:	e07e      	b.n	8007bfe <_strtod_l+0x4f6>
 8007b00:	2b16      	cmp	r3, #22
 8007b02:	dc63      	bgt.n	8007bcc <_strtod_l+0x4c4>
 8007b04:	497c      	ldr	r1, [pc, #496]	@ (8007cf8 <_strtod_l+0x5f0>)
 8007b06:	00db      	lsls	r3, r3, #3
 8007b08:	18c9      	adds	r1, r1, r3
 8007b0a:	0032      	movs	r2, r6
 8007b0c:	6808      	ldr	r0, [r1, #0]
 8007b0e:	6849      	ldr	r1, [r1, #4]
 8007b10:	003b      	movs	r3, r7
 8007b12:	f7f9 fd37 	bl	8001584 <__aeabi_dmul>
 8007b16:	e7d3      	b.n	8007ac0 <_strtod_l+0x3b8>
 8007b18:	0022      	movs	r2, r4
 8007b1a:	4b77      	ldr	r3, [pc, #476]	@ (8007cf8 <_strtod_l+0x5f0>)
 8007b1c:	3a09      	subs	r2, #9
 8007b1e:	00d2      	lsls	r2, r2, #3
 8007b20:	189b      	adds	r3, r3, r2
 8007b22:	681a      	ldr	r2, [r3, #0]
 8007b24:	685b      	ldr	r3, [r3, #4]
 8007b26:	f7f9 fd2d 	bl	8001584 <__aeabi_dmul>
 8007b2a:	0006      	movs	r6, r0
 8007b2c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8007b2e:	000f      	movs	r7, r1
 8007b30:	f7fa fca4 	bl	800247c <__aeabi_ui2d>
 8007b34:	000b      	movs	r3, r1
 8007b36:	0002      	movs	r2, r0
 8007b38:	0039      	movs	r1, r7
 8007b3a:	0030      	movs	r0, r6
 8007b3c:	f7f8 fd22 	bl	8000584 <__aeabi_dadd>
 8007b40:	9b06      	ldr	r3, [sp, #24]
 8007b42:	0006      	movs	r6, r0
 8007b44:	000f      	movs	r7, r1
 8007b46:	2b0f      	cmp	r3, #15
 8007b48:	ddd2      	ble.n	8007af0 <_strtod_l+0x3e8>
 8007b4a:	9b06      	ldr	r3, [sp, #24]
 8007b4c:	1b1c      	subs	r4, r3, r4
 8007b4e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8007b50:	18e4      	adds	r4, r4, r3
 8007b52:	2c00      	cmp	r4, #0
 8007b54:	dc00      	bgt.n	8007b58 <_strtod_l+0x450>
 8007b56:	e09b      	b.n	8007c90 <_strtod_l+0x588>
 8007b58:	220f      	movs	r2, #15
 8007b5a:	0023      	movs	r3, r4
 8007b5c:	4013      	ands	r3, r2
 8007b5e:	4214      	tst	r4, r2
 8007b60:	d00a      	beq.n	8007b78 <_strtod_l+0x470>
 8007b62:	4965      	ldr	r1, [pc, #404]	@ (8007cf8 <_strtod_l+0x5f0>)
 8007b64:	00db      	lsls	r3, r3, #3
 8007b66:	18c9      	adds	r1, r1, r3
 8007b68:	0032      	movs	r2, r6
 8007b6a:	6808      	ldr	r0, [r1, #0]
 8007b6c:	6849      	ldr	r1, [r1, #4]
 8007b6e:	003b      	movs	r3, r7
 8007b70:	f7f9 fd08 	bl	8001584 <__aeabi_dmul>
 8007b74:	0006      	movs	r6, r0
 8007b76:	000f      	movs	r7, r1
 8007b78:	230f      	movs	r3, #15
 8007b7a:	439c      	bics	r4, r3
 8007b7c:	d073      	beq.n	8007c66 <_strtod_l+0x55e>
 8007b7e:	3326      	adds	r3, #38	@ 0x26
 8007b80:	33ff      	adds	r3, #255	@ 0xff
 8007b82:	429c      	cmp	r4, r3
 8007b84:	dd4b      	ble.n	8007c1e <_strtod_l+0x516>
 8007b86:	2300      	movs	r3, #0
 8007b88:	9306      	str	r3, [sp, #24]
 8007b8a:	9307      	str	r3, [sp, #28]
 8007b8c:	930d      	str	r3, [sp, #52]	@ 0x34
 8007b8e:	9308      	str	r3, [sp, #32]
 8007b90:	2322      	movs	r3, #34	@ 0x22
 8007b92:	2600      	movs	r6, #0
 8007b94:	9a05      	ldr	r2, [sp, #20]
 8007b96:	4f54      	ldr	r7, [pc, #336]	@ (8007ce8 <_strtod_l+0x5e0>)
 8007b98:	6013      	str	r3, [r2, #0]
 8007b9a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007b9c:	42b3      	cmp	r3, r6
 8007b9e:	d100      	bne.n	8007ba2 <_strtod_l+0x49a>
 8007ba0:	e5ed      	b.n	800777e <_strtod_l+0x76>
 8007ba2:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8007ba4:	9805      	ldr	r0, [sp, #20]
 8007ba6:	f7ff f919 	bl	8006ddc <_Bfree>
 8007baa:	9908      	ldr	r1, [sp, #32]
 8007bac:	9805      	ldr	r0, [sp, #20]
 8007bae:	f7ff f915 	bl	8006ddc <_Bfree>
 8007bb2:	9907      	ldr	r1, [sp, #28]
 8007bb4:	9805      	ldr	r0, [sp, #20]
 8007bb6:	f7ff f911 	bl	8006ddc <_Bfree>
 8007bba:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8007bbc:	9805      	ldr	r0, [sp, #20]
 8007bbe:	f7ff f90d 	bl	8006ddc <_Bfree>
 8007bc2:	9906      	ldr	r1, [sp, #24]
 8007bc4:	9805      	ldr	r0, [sp, #20]
 8007bc6:	f7ff f909 	bl	8006ddc <_Bfree>
 8007bca:	e5d8      	b.n	800777e <_strtod_l+0x76>
 8007bcc:	2325      	movs	r3, #37	@ 0x25
 8007bce:	9a06      	ldr	r2, [sp, #24]
 8007bd0:	1a9b      	subs	r3, r3, r2
 8007bd2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8007bd4:	4293      	cmp	r3, r2
 8007bd6:	dbb8      	blt.n	8007b4a <_strtod_l+0x442>
 8007bd8:	240f      	movs	r4, #15
 8007bda:	9b06      	ldr	r3, [sp, #24]
 8007bdc:	4d46      	ldr	r5, [pc, #280]	@ (8007cf8 <_strtod_l+0x5f0>)
 8007bde:	1ae4      	subs	r4, r4, r3
 8007be0:	00e1      	lsls	r1, r4, #3
 8007be2:	1869      	adds	r1, r5, r1
 8007be4:	0032      	movs	r2, r6
 8007be6:	6808      	ldr	r0, [r1, #0]
 8007be8:	6849      	ldr	r1, [r1, #4]
 8007bea:	003b      	movs	r3, r7
 8007bec:	f7f9 fcca 	bl	8001584 <__aeabi_dmul>
 8007bf0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8007bf2:	1b1c      	subs	r4, r3, r4
 8007bf4:	00e4      	lsls	r4, r4, #3
 8007bf6:	192d      	adds	r5, r5, r4
 8007bf8:	682a      	ldr	r2, [r5, #0]
 8007bfa:	686b      	ldr	r3, [r5, #4]
 8007bfc:	e789      	b.n	8007b12 <_strtod_l+0x40a>
 8007bfe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8007c00:	3316      	adds	r3, #22
 8007c02:	dba2      	blt.n	8007b4a <_strtod_l+0x442>
 8007c04:	9907      	ldr	r1, [sp, #28]
 8007c06:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007c08:	4b3b      	ldr	r3, [pc, #236]	@ (8007cf8 <_strtod_l+0x5f0>)
 8007c0a:	1a52      	subs	r2, r2, r1
 8007c0c:	00d2      	lsls	r2, r2, #3
 8007c0e:	189b      	adds	r3, r3, r2
 8007c10:	0030      	movs	r0, r6
 8007c12:	681a      	ldr	r2, [r3, #0]
 8007c14:	685b      	ldr	r3, [r3, #4]
 8007c16:	0039      	movs	r1, r7
 8007c18:	f7f9 f87a 	bl	8000d10 <__aeabi_ddiv>
 8007c1c:	e750      	b.n	8007ac0 <_strtod_l+0x3b8>
 8007c1e:	2300      	movs	r3, #0
 8007c20:	0030      	movs	r0, r6
 8007c22:	0039      	movs	r1, r7
 8007c24:	4d35      	ldr	r5, [pc, #212]	@ (8007cfc <_strtod_l+0x5f4>)
 8007c26:	1124      	asrs	r4, r4, #4
 8007c28:	9309      	str	r3, [sp, #36]	@ 0x24
 8007c2a:	2c01      	cmp	r4, #1
 8007c2c:	dc1e      	bgt.n	8007c6c <_strtod_l+0x564>
 8007c2e:	2b00      	cmp	r3, #0
 8007c30:	d001      	beq.n	8007c36 <_strtod_l+0x52e>
 8007c32:	0006      	movs	r6, r0
 8007c34:	000f      	movs	r7, r1
 8007c36:	4b32      	ldr	r3, [pc, #200]	@ (8007d00 <_strtod_l+0x5f8>)
 8007c38:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007c3a:	18ff      	adds	r7, r7, r3
 8007c3c:	4b2f      	ldr	r3, [pc, #188]	@ (8007cfc <_strtod_l+0x5f4>)
 8007c3e:	00d5      	lsls	r5, r2, #3
 8007c40:	195d      	adds	r5, r3, r5
 8007c42:	0032      	movs	r2, r6
 8007c44:	6828      	ldr	r0, [r5, #0]
 8007c46:	6869      	ldr	r1, [r5, #4]
 8007c48:	003b      	movs	r3, r7
 8007c4a:	f7f9 fc9b 	bl	8001584 <__aeabi_dmul>
 8007c4e:	4b26      	ldr	r3, [pc, #152]	@ (8007ce8 <_strtod_l+0x5e0>)
 8007c50:	4a2c      	ldr	r2, [pc, #176]	@ (8007d04 <_strtod_l+0x5fc>)
 8007c52:	0006      	movs	r6, r0
 8007c54:	400b      	ands	r3, r1
 8007c56:	4293      	cmp	r3, r2
 8007c58:	d895      	bhi.n	8007b86 <_strtod_l+0x47e>
 8007c5a:	4a2b      	ldr	r2, [pc, #172]	@ (8007d08 <_strtod_l+0x600>)
 8007c5c:	4293      	cmp	r3, r2
 8007c5e:	d913      	bls.n	8007c88 <_strtod_l+0x580>
 8007c60:	2601      	movs	r6, #1
 8007c62:	4f2a      	ldr	r7, [pc, #168]	@ (8007d0c <_strtod_l+0x604>)
 8007c64:	4276      	negs	r6, r6
 8007c66:	2300      	movs	r3, #0
 8007c68:	9309      	str	r3, [sp, #36]	@ 0x24
 8007c6a:	e086      	b.n	8007d7a <_strtod_l+0x672>
 8007c6c:	2201      	movs	r2, #1
 8007c6e:	4214      	tst	r4, r2
 8007c70:	d004      	beq.n	8007c7c <_strtod_l+0x574>
 8007c72:	682a      	ldr	r2, [r5, #0]
 8007c74:	686b      	ldr	r3, [r5, #4]
 8007c76:	f7f9 fc85 	bl	8001584 <__aeabi_dmul>
 8007c7a:	2301      	movs	r3, #1
 8007c7c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007c7e:	1064      	asrs	r4, r4, #1
 8007c80:	3201      	adds	r2, #1
 8007c82:	9209      	str	r2, [sp, #36]	@ 0x24
 8007c84:	3508      	adds	r5, #8
 8007c86:	e7d0      	b.n	8007c2a <_strtod_l+0x522>
 8007c88:	23d4      	movs	r3, #212	@ 0xd4
 8007c8a:	049b      	lsls	r3, r3, #18
 8007c8c:	18cf      	adds	r7, r1, r3
 8007c8e:	e7ea      	b.n	8007c66 <_strtod_l+0x55e>
 8007c90:	2c00      	cmp	r4, #0
 8007c92:	d0e8      	beq.n	8007c66 <_strtod_l+0x55e>
 8007c94:	4264      	negs	r4, r4
 8007c96:	230f      	movs	r3, #15
 8007c98:	0022      	movs	r2, r4
 8007c9a:	401a      	ands	r2, r3
 8007c9c:	421c      	tst	r4, r3
 8007c9e:	d00a      	beq.n	8007cb6 <_strtod_l+0x5ae>
 8007ca0:	4b15      	ldr	r3, [pc, #84]	@ (8007cf8 <_strtod_l+0x5f0>)
 8007ca2:	00d2      	lsls	r2, r2, #3
 8007ca4:	189b      	adds	r3, r3, r2
 8007ca6:	0030      	movs	r0, r6
 8007ca8:	681a      	ldr	r2, [r3, #0]
 8007caa:	685b      	ldr	r3, [r3, #4]
 8007cac:	0039      	movs	r1, r7
 8007cae:	f7f9 f82f 	bl	8000d10 <__aeabi_ddiv>
 8007cb2:	0006      	movs	r6, r0
 8007cb4:	000f      	movs	r7, r1
 8007cb6:	1124      	asrs	r4, r4, #4
 8007cb8:	d0d5      	beq.n	8007c66 <_strtod_l+0x55e>
 8007cba:	2c1f      	cmp	r4, #31
 8007cbc:	dd28      	ble.n	8007d10 <_strtod_l+0x608>
 8007cbe:	2300      	movs	r3, #0
 8007cc0:	9306      	str	r3, [sp, #24]
 8007cc2:	9307      	str	r3, [sp, #28]
 8007cc4:	930d      	str	r3, [sp, #52]	@ 0x34
 8007cc6:	9308      	str	r3, [sp, #32]
 8007cc8:	2322      	movs	r3, #34	@ 0x22
 8007cca:	9a05      	ldr	r2, [sp, #20]
 8007ccc:	2600      	movs	r6, #0
 8007cce:	6013      	str	r3, [r2, #0]
 8007cd0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007cd2:	2700      	movs	r7, #0
 8007cd4:	2b00      	cmp	r3, #0
 8007cd6:	d000      	beq.n	8007cda <_strtod_l+0x5d2>
 8007cd8:	e763      	b.n	8007ba2 <_strtod_l+0x49a>
 8007cda:	e550      	b.n	800777e <_strtod_l+0x76>
 8007cdc:	00004e1f 	.word	0x00004e1f
 8007ce0:	0800a2e1 	.word	0x0800a2e1
 8007ce4:	0800a5c0 	.word	0x0800a5c0
 8007ce8:	7ff00000 	.word	0x7ff00000
 8007cec:	0800a2d9 	.word	0x0800a2d9
 8007cf0:	0800a30e 	.word	0x0800a30e
 8007cf4:	0800a462 	.word	0x0800a462
 8007cf8:	0800a4f8 	.word	0x0800a4f8
 8007cfc:	0800a4d0 	.word	0x0800a4d0
 8007d00:	fcb00000 	.word	0xfcb00000
 8007d04:	7ca00000 	.word	0x7ca00000
 8007d08:	7c900000 	.word	0x7c900000
 8007d0c:	7fefffff 	.word	0x7fefffff
 8007d10:	2310      	movs	r3, #16
 8007d12:	0022      	movs	r2, r4
 8007d14:	401a      	ands	r2, r3
 8007d16:	9209      	str	r2, [sp, #36]	@ 0x24
 8007d18:	421c      	tst	r4, r3
 8007d1a:	d001      	beq.n	8007d20 <_strtod_l+0x618>
 8007d1c:	335a      	adds	r3, #90	@ 0x5a
 8007d1e:	9309      	str	r3, [sp, #36]	@ 0x24
 8007d20:	0030      	movs	r0, r6
 8007d22:	0039      	movs	r1, r7
 8007d24:	2300      	movs	r3, #0
 8007d26:	4dc0      	ldr	r5, [pc, #768]	@ (8008028 <_strtod_l+0x920>)
 8007d28:	2201      	movs	r2, #1
 8007d2a:	4214      	tst	r4, r2
 8007d2c:	d004      	beq.n	8007d38 <_strtod_l+0x630>
 8007d2e:	682a      	ldr	r2, [r5, #0]
 8007d30:	686b      	ldr	r3, [r5, #4]
 8007d32:	f7f9 fc27 	bl	8001584 <__aeabi_dmul>
 8007d36:	2301      	movs	r3, #1
 8007d38:	1064      	asrs	r4, r4, #1
 8007d3a:	3508      	adds	r5, #8
 8007d3c:	2c00      	cmp	r4, #0
 8007d3e:	d1f3      	bne.n	8007d28 <_strtod_l+0x620>
 8007d40:	2b00      	cmp	r3, #0
 8007d42:	d001      	beq.n	8007d48 <_strtod_l+0x640>
 8007d44:	0006      	movs	r6, r0
 8007d46:	000f      	movs	r7, r1
 8007d48:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007d4a:	2b00      	cmp	r3, #0
 8007d4c:	d00d      	beq.n	8007d6a <_strtod_l+0x662>
 8007d4e:	236b      	movs	r3, #107	@ 0x6b
 8007d50:	007a      	lsls	r2, r7, #1
 8007d52:	0d52      	lsrs	r2, r2, #21
 8007d54:	0039      	movs	r1, r7
 8007d56:	1a9b      	subs	r3, r3, r2
 8007d58:	2b00      	cmp	r3, #0
 8007d5a:	dd06      	ble.n	8007d6a <_strtod_l+0x662>
 8007d5c:	2b1f      	cmp	r3, #31
 8007d5e:	dd5c      	ble.n	8007e1a <_strtod_l+0x712>
 8007d60:	2600      	movs	r6, #0
 8007d62:	2b34      	cmp	r3, #52	@ 0x34
 8007d64:	dd52      	ble.n	8007e0c <_strtod_l+0x704>
 8007d66:	27dc      	movs	r7, #220	@ 0xdc
 8007d68:	04bf      	lsls	r7, r7, #18
 8007d6a:	2200      	movs	r2, #0
 8007d6c:	2300      	movs	r3, #0
 8007d6e:	0030      	movs	r0, r6
 8007d70:	0039      	movs	r1, r7
 8007d72:	f7f8 fb6b 	bl	800044c <__aeabi_dcmpeq>
 8007d76:	2800      	cmp	r0, #0
 8007d78:	d1a1      	bne.n	8007cbe <_strtod_l+0x5b6>
 8007d7a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007d7c:	9a08      	ldr	r2, [sp, #32]
 8007d7e:	9300      	str	r3, [sp, #0]
 8007d80:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8007d82:	9b06      	ldr	r3, [sp, #24]
 8007d84:	9805      	ldr	r0, [sp, #20]
 8007d86:	f7ff f891 	bl	8006eac <__s2b>
 8007d8a:	900d      	str	r0, [sp, #52]	@ 0x34
 8007d8c:	2800      	cmp	r0, #0
 8007d8e:	d100      	bne.n	8007d92 <_strtod_l+0x68a>
 8007d90:	e6f9      	b.n	8007b86 <_strtod_l+0x47e>
 8007d92:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8007d94:	9907      	ldr	r1, [sp, #28]
 8007d96:	43db      	mvns	r3, r3
 8007d98:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007d9a:	17db      	asrs	r3, r3, #31
 8007d9c:	1a52      	subs	r2, r2, r1
 8007d9e:	9214      	str	r2, [sp, #80]	@ 0x50
 8007da0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8007da2:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8007da4:	17d2      	asrs	r2, r2, #31
 8007da6:	4011      	ands	r1, r2
 8007da8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8007daa:	9114      	str	r1, [sp, #80]	@ 0x50
 8007dac:	401a      	ands	r2, r3
 8007dae:	2300      	movs	r3, #0
 8007db0:	921a      	str	r2, [sp, #104]	@ 0x68
 8007db2:	9306      	str	r3, [sp, #24]
 8007db4:	9307      	str	r3, [sp, #28]
 8007db6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007db8:	9805      	ldr	r0, [sp, #20]
 8007dba:	6859      	ldr	r1, [r3, #4]
 8007dbc:	f7fe ffca 	bl	8006d54 <_Balloc>
 8007dc0:	9008      	str	r0, [sp, #32]
 8007dc2:	2800      	cmp	r0, #0
 8007dc4:	d100      	bne.n	8007dc8 <_strtod_l+0x6c0>
 8007dc6:	e6e3      	b.n	8007b90 <_strtod_l+0x488>
 8007dc8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007dca:	300c      	adds	r0, #12
 8007dcc:	0019      	movs	r1, r3
 8007dce:	691a      	ldr	r2, [r3, #16]
 8007dd0:	310c      	adds	r1, #12
 8007dd2:	3202      	adds	r2, #2
 8007dd4:	0092      	lsls	r2, r2, #2
 8007dd6:	f001 fc9d 	bl	8009714 <memcpy>
 8007dda:	ab20      	add	r3, sp, #128	@ 0x80
 8007ddc:	9301      	str	r3, [sp, #4]
 8007dde:	ab1f      	add	r3, sp, #124	@ 0x7c
 8007de0:	9300      	str	r3, [sp, #0]
 8007de2:	0032      	movs	r2, r6
 8007de4:	003b      	movs	r3, r7
 8007de6:	9805      	ldr	r0, [sp, #20]
 8007de8:	9610      	str	r6, [sp, #64]	@ 0x40
 8007dea:	9711      	str	r7, [sp, #68]	@ 0x44
 8007dec:	f7ff fba6 	bl	800753c <__d2b>
 8007df0:	901e      	str	r0, [sp, #120]	@ 0x78
 8007df2:	2800      	cmp	r0, #0
 8007df4:	d100      	bne.n	8007df8 <_strtod_l+0x6f0>
 8007df6:	e6cb      	b.n	8007b90 <_strtod_l+0x488>
 8007df8:	2101      	movs	r1, #1
 8007dfa:	9805      	ldr	r0, [sp, #20]
 8007dfc:	f7ff f8f2 	bl	8006fe4 <__i2b>
 8007e00:	9007      	str	r0, [sp, #28]
 8007e02:	2800      	cmp	r0, #0
 8007e04:	d10e      	bne.n	8007e24 <_strtod_l+0x71c>
 8007e06:	2300      	movs	r3, #0
 8007e08:	9307      	str	r3, [sp, #28]
 8007e0a:	e6c1      	b.n	8007b90 <_strtod_l+0x488>
 8007e0c:	234b      	movs	r3, #75	@ 0x4b
 8007e0e:	1a9a      	subs	r2, r3, r2
 8007e10:	3b4c      	subs	r3, #76	@ 0x4c
 8007e12:	4093      	lsls	r3, r2
 8007e14:	4019      	ands	r1, r3
 8007e16:	000f      	movs	r7, r1
 8007e18:	e7a7      	b.n	8007d6a <_strtod_l+0x662>
 8007e1a:	2201      	movs	r2, #1
 8007e1c:	4252      	negs	r2, r2
 8007e1e:	409a      	lsls	r2, r3
 8007e20:	4016      	ands	r6, r2
 8007e22:	e7a2      	b.n	8007d6a <_strtod_l+0x662>
 8007e24:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8007e26:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8007e28:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8007e2a:	1ad4      	subs	r4, r2, r3
 8007e2c:	2b00      	cmp	r3, #0
 8007e2e:	db01      	blt.n	8007e34 <_strtod_l+0x72c>
 8007e30:	9c1a      	ldr	r4, [sp, #104]	@ 0x68
 8007e32:	195d      	adds	r5, r3, r5
 8007e34:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8007e36:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8007e38:	1a5b      	subs	r3, r3, r1
 8007e3a:	2136      	movs	r1, #54	@ 0x36
 8007e3c:	189b      	adds	r3, r3, r2
 8007e3e:	1a8a      	subs	r2, r1, r2
 8007e40:	497a      	ldr	r1, [pc, #488]	@ (800802c <_strtod_l+0x924>)
 8007e42:	2001      	movs	r0, #1
 8007e44:	468c      	mov	ip, r1
 8007e46:	2100      	movs	r1, #0
 8007e48:	3b01      	subs	r3, #1
 8007e4a:	9115      	str	r1, [sp, #84]	@ 0x54
 8007e4c:	9016      	str	r0, [sp, #88]	@ 0x58
 8007e4e:	4563      	cmp	r3, ip
 8007e50:	da06      	bge.n	8007e60 <_strtod_l+0x758>
 8007e52:	4661      	mov	r1, ip
 8007e54:	1ac9      	subs	r1, r1, r3
 8007e56:	1a52      	subs	r2, r2, r1
 8007e58:	291f      	cmp	r1, #31
 8007e5a:	dc3f      	bgt.n	8007edc <_strtod_l+0x7d4>
 8007e5c:	4088      	lsls	r0, r1
 8007e5e:	9016      	str	r0, [sp, #88]	@ 0x58
 8007e60:	18ab      	adds	r3, r5, r2
 8007e62:	930e      	str	r3, [sp, #56]	@ 0x38
 8007e64:	18a4      	adds	r4, r4, r2
 8007e66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007e68:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007e6a:	191c      	adds	r4, r3, r4
 8007e6c:	002b      	movs	r3, r5
 8007e6e:	4295      	cmp	r5, r2
 8007e70:	dd00      	ble.n	8007e74 <_strtod_l+0x76c>
 8007e72:	0013      	movs	r3, r2
 8007e74:	42a3      	cmp	r3, r4
 8007e76:	dd00      	ble.n	8007e7a <_strtod_l+0x772>
 8007e78:	0023      	movs	r3, r4
 8007e7a:	2b00      	cmp	r3, #0
 8007e7c:	dd04      	ble.n	8007e88 <_strtod_l+0x780>
 8007e7e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007e80:	1ae4      	subs	r4, r4, r3
 8007e82:	1ad2      	subs	r2, r2, r3
 8007e84:	920e      	str	r2, [sp, #56]	@ 0x38
 8007e86:	1aed      	subs	r5, r5, r3
 8007e88:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8007e8a:	2b00      	cmp	r3, #0
 8007e8c:	dd16      	ble.n	8007ebc <_strtod_l+0x7b4>
 8007e8e:	001a      	movs	r2, r3
 8007e90:	9907      	ldr	r1, [sp, #28]
 8007e92:	9805      	ldr	r0, [sp, #20]
 8007e94:	f7ff f968 	bl	8007168 <__pow5mult>
 8007e98:	9007      	str	r0, [sp, #28]
 8007e9a:	2800      	cmp	r0, #0
 8007e9c:	d0b3      	beq.n	8007e06 <_strtod_l+0x6fe>
 8007e9e:	0001      	movs	r1, r0
 8007ea0:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8007ea2:	9805      	ldr	r0, [sp, #20]
 8007ea4:	f7ff f8b6 	bl	8007014 <__multiply>
 8007ea8:	9013      	str	r0, [sp, #76]	@ 0x4c
 8007eaa:	2800      	cmp	r0, #0
 8007eac:	d100      	bne.n	8007eb0 <_strtod_l+0x7a8>
 8007eae:	e66f      	b.n	8007b90 <_strtod_l+0x488>
 8007eb0:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8007eb2:	9805      	ldr	r0, [sp, #20]
 8007eb4:	f7fe ff92 	bl	8006ddc <_Bfree>
 8007eb8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8007eba:	931e      	str	r3, [sp, #120]	@ 0x78
 8007ebc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007ebe:	2b00      	cmp	r3, #0
 8007ec0:	dc12      	bgt.n	8007ee8 <_strtod_l+0x7e0>
 8007ec2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8007ec4:	2b00      	cmp	r3, #0
 8007ec6:	dd18      	ble.n	8007efa <_strtod_l+0x7f2>
 8007ec8:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8007eca:	9908      	ldr	r1, [sp, #32]
 8007ecc:	9805      	ldr	r0, [sp, #20]
 8007ece:	f7ff f94b 	bl	8007168 <__pow5mult>
 8007ed2:	9008      	str	r0, [sp, #32]
 8007ed4:	2800      	cmp	r0, #0
 8007ed6:	d110      	bne.n	8007efa <_strtod_l+0x7f2>
 8007ed8:	2300      	movs	r3, #0
 8007eda:	e658      	b.n	8007b8e <_strtod_l+0x486>
 8007edc:	4954      	ldr	r1, [pc, #336]	@ (8008030 <_strtod_l+0x928>)
 8007ede:	1acb      	subs	r3, r1, r3
 8007ee0:	0001      	movs	r1, r0
 8007ee2:	4099      	lsls	r1, r3
 8007ee4:	9115      	str	r1, [sp, #84]	@ 0x54
 8007ee6:	e7ba      	b.n	8007e5e <_strtod_l+0x756>
 8007ee8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007eea:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8007eec:	9805      	ldr	r0, [sp, #20]
 8007eee:	f7ff f997 	bl	8007220 <__lshift>
 8007ef2:	901e      	str	r0, [sp, #120]	@ 0x78
 8007ef4:	2800      	cmp	r0, #0
 8007ef6:	d1e4      	bne.n	8007ec2 <_strtod_l+0x7ba>
 8007ef8:	e64a      	b.n	8007b90 <_strtod_l+0x488>
 8007efa:	2c00      	cmp	r4, #0
 8007efc:	dd07      	ble.n	8007f0e <_strtod_l+0x806>
 8007efe:	0022      	movs	r2, r4
 8007f00:	9908      	ldr	r1, [sp, #32]
 8007f02:	9805      	ldr	r0, [sp, #20]
 8007f04:	f7ff f98c 	bl	8007220 <__lshift>
 8007f08:	9008      	str	r0, [sp, #32]
 8007f0a:	2800      	cmp	r0, #0
 8007f0c:	d0e4      	beq.n	8007ed8 <_strtod_l+0x7d0>
 8007f0e:	2d00      	cmp	r5, #0
 8007f10:	dd08      	ble.n	8007f24 <_strtod_l+0x81c>
 8007f12:	002a      	movs	r2, r5
 8007f14:	9907      	ldr	r1, [sp, #28]
 8007f16:	9805      	ldr	r0, [sp, #20]
 8007f18:	f7ff f982 	bl	8007220 <__lshift>
 8007f1c:	9007      	str	r0, [sp, #28]
 8007f1e:	2800      	cmp	r0, #0
 8007f20:	d100      	bne.n	8007f24 <_strtod_l+0x81c>
 8007f22:	e635      	b.n	8007b90 <_strtod_l+0x488>
 8007f24:	9a08      	ldr	r2, [sp, #32]
 8007f26:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8007f28:	9805      	ldr	r0, [sp, #20]
 8007f2a:	f7ff fa01 	bl	8007330 <__mdiff>
 8007f2e:	9006      	str	r0, [sp, #24]
 8007f30:	2800      	cmp	r0, #0
 8007f32:	d100      	bne.n	8007f36 <_strtod_l+0x82e>
 8007f34:	e62c      	b.n	8007b90 <_strtod_l+0x488>
 8007f36:	68c3      	ldr	r3, [r0, #12]
 8007f38:	9907      	ldr	r1, [sp, #28]
 8007f3a:	9313      	str	r3, [sp, #76]	@ 0x4c
 8007f3c:	2300      	movs	r3, #0
 8007f3e:	60c3      	str	r3, [r0, #12]
 8007f40:	f7ff f9da 	bl	80072f8 <__mcmp>
 8007f44:	2800      	cmp	r0, #0
 8007f46:	da3b      	bge.n	8007fc0 <_strtod_l+0x8b8>
 8007f48:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8007f4a:	4333      	orrs	r3, r6
 8007f4c:	d167      	bne.n	800801e <_strtod_l+0x916>
 8007f4e:	033b      	lsls	r3, r7, #12
 8007f50:	d165      	bne.n	800801e <_strtod_l+0x916>
 8007f52:	22d6      	movs	r2, #214	@ 0xd6
 8007f54:	4b37      	ldr	r3, [pc, #220]	@ (8008034 <_strtod_l+0x92c>)
 8007f56:	04d2      	lsls	r2, r2, #19
 8007f58:	403b      	ands	r3, r7
 8007f5a:	4293      	cmp	r3, r2
 8007f5c:	d95f      	bls.n	800801e <_strtod_l+0x916>
 8007f5e:	9b06      	ldr	r3, [sp, #24]
 8007f60:	695b      	ldr	r3, [r3, #20]
 8007f62:	2b00      	cmp	r3, #0
 8007f64:	d103      	bne.n	8007f6e <_strtod_l+0x866>
 8007f66:	9b06      	ldr	r3, [sp, #24]
 8007f68:	691b      	ldr	r3, [r3, #16]
 8007f6a:	2b01      	cmp	r3, #1
 8007f6c:	dd57      	ble.n	800801e <_strtod_l+0x916>
 8007f6e:	9906      	ldr	r1, [sp, #24]
 8007f70:	2201      	movs	r2, #1
 8007f72:	9805      	ldr	r0, [sp, #20]
 8007f74:	f7ff f954 	bl	8007220 <__lshift>
 8007f78:	9907      	ldr	r1, [sp, #28]
 8007f7a:	9006      	str	r0, [sp, #24]
 8007f7c:	f7ff f9bc 	bl	80072f8 <__mcmp>
 8007f80:	2800      	cmp	r0, #0
 8007f82:	dd4c      	ble.n	800801e <_strtod_l+0x916>
 8007f84:	4b2b      	ldr	r3, [pc, #172]	@ (8008034 <_strtod_l+0x92c>)
 8007f86:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007f88:	403b      	ands	r3, r7
 8007f8a:	2a00      	cmp	r2, #0
 8007f8c:	d074      	beq.n	8008078 <_strtod_l+0x970>
 8007f8e:	22d6      	movs	r2, #214	@ 0xd6
 8007f90:	04d2      	lsls	r2, r2, #19
 8007f92:	4293      	cmp	r3, r2
 8007f94:	d870      	bhi.n	8008078 <_strtod_l+0x970>
 8007f96:	22dc      	movs	r2, #220	@ 0xdc
 8007f98:	0492      	lsls	r2, r2, #18
 8007f9a:	4293      	cmp	r3, r2
 8007f9c:	d800      	bhi.n	8007fa0 <_strtod_l+0x898>
 8007f9e:	e693      	b.n	8007cc8 <_strtod_l+0x5c0>
 8007fa0:	0030      	movs	r0, r6
 8007fa2:	0039      	movs	r1, r7
 8007fa4:	4b24      	ldr	r3, [pc, #144]	@ (8008038 <_strtod_l+0x930>)
 8007fa6:	2200      	movs	r2, #0
 8007fa8:	f7f9 faec 	bl	8001584 <__aeabi_dmul>
 8007fac:	4b21      	ldr	r3, [pc, #132]	@ (8008034 <_strtod_l+0x92c>)
 8007fae:	0006      	movs	r6, r0
 8007fb0:	000f      	movs	r7, r1
 8007fb2:	420b      	tst	r3, r1
 8007fb4:	d000      	beq.n	8007fb8 <_strtod_l+0x8b0>
 8007fb6:	e5f4      	b.n	8007ba2 <_strtod_l+0x49a>
 8007fb8:	2322      	movs	r3, #34	@ 0x22
 8007fba:	9a05      	ldr	r2, [sp, #20]
 8007fbc:	6013      	str	r3, [r2, #0]
 8007fbe:	e5f0      	b.n	8007ba2 <_strtod_l+0x49a>
 8007fc0:	970e      	str	r7, [sp, #56]	@ 0x38
 8007fc2:	2800      	cmp	r0, #0
 8007fc4:	d175      	bne.n	80080b2 <_strtod_l+0x9aa>
 8007fc6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8007fc8:	033b      	lsls	r3, r7, #12
 8007fca:	0b1b      	lsrs	r3, r3, #12
 8007fcc:	2a00      	cmp	r2, #0
 8007fce:	d039      	beq.n	8008044 <_strtod_l+0x93c>
 8007fd0:	4a1a      	ldr	r2, [pc, #104]	@ (800803c <_strtod_l+0x934>)
 8007fd2:	4293      	cmp	r3, r2
 8007fd4:	d138      	bne.n	8008048 <_strtod_l+0x940>
 8007fd6:	2101      	movs	r1, #1
 8007fd8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007fda:	4249      	negs	r1, r1
 8007fdc:	0032      	movs	r2, r6
 8007fde:	0008      	movs	r0, r1
 8007fe0:	2b00      	cmp	r3, #0
 8007fe2:	d00b      	beq.n	8007ffc <_strtod_l+0x8f4>
 8007fe4:	24d4      	movs	r4, #212	@ 0xd4
 8007fe6:	4b13      	ldr	r3, [pc, #76]	@ (8008034 <_strtod_l+0x92c>)
 8007fe8:	0008      	movs	r0, r1
 8007fea:	403b      	ands	r3, r7
 8007fec:	04e4      	lsls	r4, r4, #19
 8007fee:	42a3      	cmp	r3, r4
 8007ff0:	d804      	bhi.n	8007ffc <_strtod_l+0x8f4>
 8007ff2:	306c      	adds	r0, #108	@ 0x6c
 8007ff4:	0d1b      	lsrs	r3, r3, #20
 8007ff6:	1ac3      	subs	r3, r0, r3
 8007ff8:	4099      	lsls	r1, r3
 8007ffa:	0008      	movs	r0, r1
 8007ffc:	4282      	cmp	r2, r0
 8007ffe:	d123      	bne.n	8008048 <_strtod_l+0x940>
 8008000:	4b0f      	ldr	r3, [pc, #60]	@ (8008040 <_strtod_l+0x938>)
 8008002:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8008004:	4299      	cmp	r1, r3
 8008006:	d102      	bne.n	800800e <_strtod_l+0x906>
 8008008:	3201      	adds	r2, #1
 800800a:	d100      	bne.n	800800e <_strtod_l+0x906>
 800800c:	e5c0      	b.n	8007b90 <_strtod_l+0x488>
 800800e:	4b09      	ldr	r3, [pc, #36]	@ (8008034 <_strtod_l+0x92c>)
 8008010:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8008012:	2600      	movs	r6, #0
 8008014:	401a      	ands	r2, r3
 8008016:	0013      	movs	r3, r2
 8008018:	2280      	movs	r2, #128	@ 0x80
 800801a:	0352      	lsls	r2, r2, #13
 800801c:	189f      	adds	r7, r3, r2
 800801e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008020:	2b00      	cmp	r3, #0
 8008022:	d1bd      	bne.n	8007fa0 <_strtod_l+0x898>
 8008024:	e5bd      	b.n	8007ba2 <_strtod_l+0x49a>
 8008026:	46c0      	nop			@ (mov r8, r8)
 8008028:	0800a5e8 	.word	0x0800a5e8
 800802c:	fffffc02 	.word	0xfffffc02
 8008030:	fffffbe2 	.word	0xfffffbe2
 8008034:	7ff00000 	.word	0x7ff00000
 8008038:	39500000 	.word	0x39500000
 800803c:	000fffff 	.word	0x000fffff
 8008040:	7fefffff 	.word	0x7fefffff
 8008044:	4333      	orrs	r3, r6
 8008046:	d09d      	beq.n	8007f84 <_strtod_l+0x87c>
 8008048:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 800804a:	2b00      	cmp	r3, #0
 800804c:	d01c      	beq.n	8008088 <_strtod_l+0x980>
 800804e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008050:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8008052:	4213      	tst	r3, r2
 8008054:	d0e3      	beq.n	800801e <_strtod_l+0x916>
 8008056:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8008058:	0030      	movs	r0, r6
 800805a:	0039      	movs	r1, r7
 800805c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800805e:	2b00      	cmp	r3, #0
 8008060:	d016      	beq.n	8008090 <_strtod_l+0x988>
 8008062:	f7ff fb39 	bl	80076d8 <sulp>
 8008066:	0002      	movs	r2, r0
 8008068:	000b      	movs	r3, r1
 800806a:	9810      	ldr	r0, [sp, #64]	@ 0x40
 800806c:	9911      	ldr	r1, [sp, #68]	@ 0x44
 800806e:	f7f8 fa89 	bl	8000584 <__aeabi_dadd>
 8008072:	0006      	movs	r6, r0
 8008074:	000f      	movs	r7, r1
 8008076:	e7d2      	b.n	800801e <_strtod_l+0x916>
 8008078:	2601      	movs	r6, #1
 800807a:	4a92      	ldr	r2, [pc, #584]	@ (80082c4 <_strtod_l+0xbbc>)
 800807c:	4276      	negs	r6, r6
 800807e:	189b      	adds	r3, r3, r2
 8008080:	4a91      	ldr	r2, [pc, #580]	@ (80082c8 <_strtod_l+0xbc0>)
 8008082:	431a      	orrs	r2, r3
 8008084:	0017      	movs	r7, r2
 8008086:	e7ca      	b.n	800801e <_strtod_l+0x916>
 8008088:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800808a:	4233      	tst	r3, r6
 800808c:	d0c7      	beq.n	800801e <_strtod_l+0x916>
 800808e:	e7e2      	b.n	8008056 <_strtod_l+0x94e>
 8008090:	f7ff fb22 	bl	80076d8 <sulp>
 8008094:	0002      	movs	r2, r0
 8008096:	000b      	movs	r3, r1
 8008098:	9810      	ldr	r0, [sp, #64]	@ 0x40
 800809a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 800809c:	f7f9 fd58 	bl	8001b50 <__aeabi_dsub>
 80080a0:	2200      	movs	r2, #0
 80080a2:	2300      	movs	r3, #0
 80080a4:	0006      	movs	r6, r0
 80080a6:	000f      	movs	r7, r1
 80080a8:	f7f8 f9d0 	bl	800044c <__aeabi_dcmpeq>
 80080ac:	2800      	cmp	r0, #0
 80080ae:	d0b6      	beq.n	800801e <_strtod_l+0x916>
 80080b0:	e60a      	b.n	8007cc8 <_strtod_l+0x5c0>
 80080b2:	9907      	ldr	r1, [sp, #28]
 80080b4:	9806      	ldr	r0, [sp, #24]
 80080b6:	f7ff faa1 	bl	80075fc <__ratio>
 80080ba:	2380      	movs	r3, #128	@ 0x80
 80080bc:	2200      	movs	r2, #0
 80080be:	05db      	lsls	r3, r3, #23
 80080c0:	0004      	movs	r4, r0
 80080c2:	000d      	movs	r5, r1
 80080c4:	f7f8 f9d2 	bl	800046c <__aeabi_dcmple>
 80080c8:	2800      	cmp	r0, #0
 80080ca:	d06c      	beq.n	80081a6 <_strtod_l+0xa9e>
 80080cc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80080ce:	2b00      	cmp	r3, #0
 80080d0:	d177      	bne.n	80081c2 <_strtod_l+0xaba>
 80080d2:	2e00      	cmp	r6, #0
 80080d4:	d157      	bne.n	8008186 <_strtod_l+0xa7e>
 80080d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80080d8:	031b      	lsls	r3, r3, #12
 80080da:	d15a      	bne.n	8008192 <_strtod_l+0xa8a>
 80080dc:	2200      	movs	r2, #0
 80080de:	0020      	movs	r0, r4
 80080e0:	0029      	movs	r1, r5
 80080e2:	4b7a      	ldr	r3, [pc, #488]	@ (80082cc <_strtod_l+0xbc4>)
 80080e4:	f7f8 f9b8 	bl	8000458 <__aeabi_dcmplt>
 80080e8:	2800      	cmp	r0, #0
 80080ea:	d159      	bne.n	80081a0 <_strtod_l+0xa98>
 80080ec:	0020      	movs	r0, r4
 80080ee:	0029      	movs	r1, r5
 80080f0:	2200      	movs	r2, #0
 80080f2:	4b77      	ldr	r3, [pc, #476]	@ (80082d0 <_strtod_l+0xbc8>)
 80080f4:	f7f9 fa46 	bl	8001584 <__aeabi_dmul>
 80080f8:	0004      	movs	r4, r0
 80080fa:	000d      	movs	r5, r1
 80080fc:	2380      	movs	r3, #128	@ 0x80
 80080fe:	061b      	lsls	r3, r3, #24
 8008100:	18eb      	adds	r3, r5, r3
 8008102:	940a      	str	r4, [sp, #40]	@ 0x28
 8008104:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008106:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8008108:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800810a:	9216      	str	r2, [sp, #88]	@ 0x58
 800810c:	9317      	str	r3, [sp, #92]	@ 0x5c
 800810e:	4a71      	ldr	r2, [pc, #452]	@ (80082d4 <_strtod_l+0xbcc>)
 8008110:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008112:	4013      	ands	r3, r2
 8008114:	9315      	str	r3, [sp, #84]	@ 0x54
 8008116:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8008118:	4b6f      	ldr	r3, [pc, #444]	@ (80082d8 <_strtod_l+0xbd0>)
 800811a:	429a      	cmp	r2, r3
 800811c:	d000      	beq.n	8008120 <_strtod_l+0xa18>
 800811e:	e087      	b.n	8008230 <_strtod_l+0xb28>
 8008120:	4a6e      	ldr	r2, [pc, #440]	@ (80082dc <_strtod_l+0xbd4>)
 8008122:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008124:	4694      	mov	ip, r2
 8008126:	4463      	add	r3, ip
 8008128:	001f      	movs	r7, r3
 800812a:	0030      	movs	r0, r6
 800812c:	0019      	movs	r1, r3
 800812e:	f7ff f999 	bl	8007464 <__ulp>
 8008132:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8008134:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8008136:	f7f9 fa25 	bl	8001584 <__aeabi_dmul>
 800813a:	0032      	movs	r2, r6
 800813c:	003b      	movs	r3, r7
 800813e:	f7f8 fa21 	bl	8000584 <__aeabi_dadd>
 8008142:	4a64      	ldr	r2, [pc, #400]	@ (80082d4 <_strtod_l+0xbcc>)
 8008144:	4b66      	ldr	r3, [pc, #408]	@ (80082e0 <_strtod_l+0xbd8>)
 8008146:	0006      	movs	r6, r0
 8008148:	400a      	ands	r2, r1
 800814a:	429a      	cmp	r2, r3
 800814c:	d940      	bls.n	80081d0 <_strtod_l+0xac8>
 800814e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8008150:	4a64      	ldr	r2, [pc, #400]	@ (80082e4 <_strtod_l+0xbdc>)
 8008152:	4293      	cmp	r3, r2
 8008154:	d103      	bne.n	800815e <_strtod_l+0xa56>
 8008156:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8008158:	3301      	adds	r3, #1
 800815a:	d100      	bne.n	800815e <_strtod_l+0xa56>
 800815c:	e518      	b.n	8007b90 <_strtod_l+0x488>
 800815e:	2601      	movs	r6, #1
 8008160:	4f60      	ldr	r7, [pc, #384]	@ (80082e4 <_strtod_l+0xbdc>)
 8008162:	4276      	negs	r6, r6
 8008164:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8008166:	9805      	ldr	r0, [sp, #20]
 8008168:	f7fe fe38 	bl	8006ddc <_Bfree>
 800816c:	9908      	ldr	r1, [sp, #32]
 800816e:	9805      	ldr	r0, [sp, #20]
 8008170:	f7fe fe34 	bl	8006ddc <_Bfree>
 8008174:	9907      	ldr	r1, [sp, #28]
 8008176:	9805      	ldr	r0, [sp, #20]
 8008178:	f7fe fe30 	bl	8006ddc <_Bfree>
 800817c:	9906      	ldr	r1, [sp, #24]
 800817e:	9805      	ldr	r0, [sp, #20]
 8008180:	f7fe fe2c 	bl	8006ddc <_Bfree>
 8008184:	e617      	b.n	8007db6 <_strtod_l+0x6ae>
 8008186:	2e01      	cmp	r6, #1
 8008188:	d103      	bne.n	8008192 <_strtod_l+0xa8a>
 800818a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800818c:	2b00      	cmp	r3, #0
 800818e:	d100      	bne.n	8008192 <_strtod_l+0xa8a>
 8008190:	e59a      	b.n	8007cc8 <_strtod_l+0x5c0>
 8008192:	2300      	movs	r3, #0
 8008194:	4c54      	ldr	r4, [pc, #336]	@ (80082e8 <_strtod_l+0xbe0>)
 8008196:	4d4d      	ldr	r5, [pc, #308]	@ (80082cc <_strtod_l+0xbc4>)
 8008198:	930a      	str	r3, [sp, #40]	@ 0x28
 800819a:	940b      	str	r4, [sp, #44]	@ 0x2c
 800819c:	2400      	movs	r4, #0
 800819e:	e7b2      	b.n	8008106 <_strtod_l+0x9fe>
 80081a0:	2400      	movs	r4, #0
 80081a2:	4d4b      	ldr	r5, [pc, #300]	@ (80082d0 <_strtod_l+0xbc8>)
 80081a4:	e7aa      	b.n	80080fc <_strtod_l+0x9f4>
 80081a6:	0020      	movs	r0, r4
 80081a8:	0029      	movs	r1, r5
 80081aa:	4b49      	ldr	r3, [pc, #292]	@ (80082d0 <_strtod_l+0xbc8>)
 80081ac:	2200      	movs	r2, #0
 80081ae:	f7f9 f9e9 	bl	8001584 <__aeabi_dmul>
 80081b2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80081b4:	0004      	movs	r4, r0
 80081b6:	000d      	movs	r5, r1
 80081b8:	2b00      	cmp	r3, #0
 80081ba:	d09f      	beq.n	80080fc <_strtod_l+0x9f4>
 80081bc:	940a      	str	r4, [sp, #40]	@ 0x28
 80081be:	950b      	str	r5, [sp, #44]	@ 0x2c
 80081c0:	e7a1      	b.n	8008106 <_strtod_l+0x9fe>
 80081c2:	2300      	movs	r3, #0
 80081c4:	4c41      	ldr	r4, [pc, #260]	@ (80082cc <_strtod_l+0xbc4>)
 80081c6:	0025      	movs	r5, r4
 80081c8:	930a      	str	r3, [sp, #40]	@ 0x28
 80081ca:	940b      	str	r4, [sp, #44]	@ 0x2c
 80081cc:	001c      	movs	r4, r3
 80081ce:	e79a      	b.n	8008106 <_strtod_l+0x9fe>
 80081d0:	23d4      	movs	r3, #212	@ 0xd4
 80081d2:	049b      	lsls	r3, r3, #18
 80081d4:	18cf      	adds	r7, r1, r3
 80081d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80081d8:	9710      	str	r7, [sp, #64]	@ 0x40
 80081da:	2b00      	cmp	r3, #0
 80081dc:	d1c2      	bne.n	8008164 <_strtod_l+0xa5c>
 80081de:	4b3d      	ldr	r3, [pc, #244]	@ (80082d4 <_strtod_l+0xbcc>)
 80081e0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80081e2:	403b      	ands	r3, r7
 80081e4:	429a      	cmp	r2, r3
 80081e6:	d1bd      	bne.n	8008164 <_strtod_l+0xa5c>
 80081e8:	0020      	movs	r0, r4
 80081ea:	0029      	movs	r1, r5
 80081ec:	f7f8 f97a 	bl	80004e4 <__aeabi_d2lz>
 80081f0:	f7f8 f9b2 	bl	8000558 <__aeabi_l2d>
 80081f4:	0002      	movs	r2, r0
 80081f6:	000b      	movs	r3, r1
 80081f8:	0020      	movs	r0, r4
 80081fa:	0029      	movs	r1, r5
 80081fc:	f7f9 fca8 	bl	8001b50 <__aeabi_dsub>
 8008200:	033c      	lsls	r4, r7, #12
 8008202:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8008204:	0b24      	lsrs	r4, r4, #12
 8008206:	4334      	orrs	r4, r6
 8008208:	900e      	str	r0, [sp, #56]	@ 0x38
 800820a:	910f      	str	r1, [sp, #60]	@ 0x3c
 800820c:	4a37      	ldr	r2, [pc, #220]	@ (80082ec <_strtod_l+0xbe4>)
 800820e:	431c      	orrs	r4, r3
 8008210:	d052      	beq.n	80082b8 <_strtod_l+0xbb0>
 8008212:	4b37      	ldr	r3, [pc, #220]	@ (80082f0 <_strtod_l+0xbe8>)
 8008214:	f7f8 f920 	bl	8000458 <__aeabi_dcmplt>
 8008218:	2800      	cmp	r0, #0
 800821a:	d000      	beq.n	800821e <_strtod_l+0xb16>
 800821c:	e4c1      	b.n	8007ba2 <_strtod_l+0x49a>
 800821e:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8008220:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8008222:	4a34      	ldr	r2, [pc, #208]	@ (80082f4 <_strtod_l+0xbec>)
 8008224:	4b2a      	ldr	r3, [pc, #168]	@ (80082d0 <_strtod_l+0xbc8>)
 8008226:	f7f8 f92b 	bl	8000480 <__aeabi_dcmpgt>
 800822a:	2800      	cmp	r0, #0
 800822c:	d09a      	beq.n	8008164 <_strtod_l+0xa5c>
 800822e:	e4b8      	b.n	8007ba2 <_strtod_l+0x49a>
 8008230:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008232:	2b00      	cmp	r3, #0
 8008234:	d02a      	beq.n	800828c <_strtod_l+0xb84>
 8008236:	23d4      	movs	r3, #212	@ 0xd4
 8008238:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800823a:	04db      	lsls	r3, r3, #19
 800823c:	429a      	cmp	r2, r3
 800823e:	d825      	bhi.n	800828c <_strtod_l+0xb84>
 8008240:	0020      	movs	r0, r4
 8008242:	0029      	movs	r1, r5
 8008244:	4a2c      	ldr	r2, [pc, #176]	@ (80082f8 <_strtod_l+0xbf0>)
 8008246:	4b2d      	ldr	r3, [pc, #180]	@ (80082fc <_strtod_l+0xbf4>)
 8008248:	f7f8 f910 	bl	800046c <__aeabi_dcmple>
 800824c:	2800      	cmp	r0, #0
 800824e:	d016      	beq.n	800827e <_strtod_l+0xb76>
 8008250:	0020      	movs	r0, r4
 8008252:	0029      	movs	r1, r5
 8008254:	f7f8 f928 	bl	80004a8 <__aeabi_d2uiz>
 8008258:	2800      	cmp	r0, #0
 800825a:	d100      	bne.n	800825e <_strtod_l+0xb56>
 800825c:	3001      	adds	r0, #1
 800825e:	f7fa f90d 	bl	800247c <__aeabi_ui2d>
 8008262:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8008264:	0004      	movs	r4, r0
 8008266:	000d      	movs	r5, r1
 8008268:	2b00      	cmp	r3, #0
 800826a:	d122      	bne.n	80082b2 <_strtod_l+0xbaa>
 800826c:	2380      	movs	r3, #128	@ 0x80
 800826e:	061b      	lsls	r3, r3, #24
 8008270:	18cb      	adds	r3, r1, r3
 8008272:	9018      	str	r0, [sp, #96]	@ 0x60
 8008274:	9319      	str	r3, [sp, #100]	@ 0x64
 8008276:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8008278:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800827a:	9216      	str	r2, [sp, #88]	@ 0x58
 800827c:	9317      	str	r3, [sp, #92]	@ 0x5c
 800827e:	22d6      	movs	r2, #214	@ 0xd6
 8008280:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8008282:	04d2      	lsls	r2, r2, #19
 8008284:	189b      	adds	r3, r3, r2
 8008286:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8008288:	1a9b      	subs	r3, r3, r2
 800828a:	9317      	str	r3, [sp, #92]	@ 0x5c
 800828c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 800828e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8008290:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 8008292:	9f17      	ldr	r7, [sp, #92]	@ 0x5c
 8008294:	f7ff f8e6 	bl	8007464 <__ulp>
 8008298:	0002      	movs	r2, r0
 800829a:	000b      	movs	r3, r1
 800829c:	0030      	movs	r0, r6
 800829e:	0039      	movs	r1, r7
 80082a0:	f7f9 f970 	bl	8001584 <__aeabi_dmul>
 80082a4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80082a6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80082a8:	f7f8 f96c 	bl	8000584 <__aeabi_dadd>
 80082ac:	0006      	movs	r6, r0
 80082ae:	000f      	movs	r7, r1
 80082b0:	e791      	b.n	80081d6 <_strtod_l+0xace>
 80082b2:	9418      	str	r4, [sp, #96]	@ 0x60
 80082b4:	9519      	str	r5, [sp, #100]	@ 0x64
 80082b6:	e7de      	b.n	8008276 <_strtod_l+0xb6e>
 80082b8:	4b11      	ldr	r3, [pc, #68]	@ (8008300 <_strtod_l+0xbf8>)
 80082ba:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80082bc:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80082be:	f7f8 f8cb 	bl	8000458 <__aeabi_dcmplt>
 80082c2:	e7b2      	b.n	800822a <_strtod_l+0xb22>
 80082c4:	fff00000 	.word	0xfff00000
 80082c8:	000fffff 	.word	0x000fffff
 80082cc:	3ff00000 	.word	0x3ff00000
 80082d0:	3fe00000 	.word	0x3fe00000
 80082d4:	7ff00000 	.word	0x7ff00000
 80082d8:	7fe00000 	.word	0x7fe00000
 80082dc:	fcb00000 	.word	0xfcb00000
 80082e0:	7c9fffff 	.word	0x7c9fffff
 80082e4:	7fefffff 	.word	0x7fefffff
 80082e8:	bff00000 	.word	0xbff00000
 80082ec:	94a03595 	.word	0x94a03595
 80082f0:	3fdfffff 	.word	0x3fdfffff
 80082f4:	35afe535 	.word	0x35afe535
 80082f8:	ffc00000 	.word	0xffc00000
 80082fc:	41dfffff 	.word	0x41dfffff
 8008300:	3fcfffff 	.word	0x3fcfffff

08008304 <_strtod_r>:
 8008304:	b510      	push	{r4, lr}
 8008306:	4b02      	ldr	r3, [pc, #8]	@ (8008310 <_strtod_r+0xc>)
 8008308:	f7ff f9fe 	bl	8007708 <_strtod_l>
 800830c:	bd10      	pop	{r4, pc}
 800830e:	46c0      	nop			@ (mov r8, r8)
 8008310:	2000006c 	.word	0x2000006c

08008314 <_strtol_l.isra.0>:
 8008314:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008316:	b085      	sub	sp, #20
 8008318:	0017      	movs	r7, r2
 800831a:	001e      	movs	r6, r3
 800831c:	9003      	str	r0, [sp, #12]
 800831e:	9101      	str	r1, [sp, #4]
 8008320:	2b24      	cmp	r3, #36	@ 0x24
 8008322:	d823      	bhi.n	800836c <_strtol_l.isra.0+0x58>
 8008324:	000c      	movs	r4, r1
 8008326:	2b01      	cmp	r3, #1
 8008328:	d020      	beq.n	800836c <_strtol_l.isra.0+0x58>
 800832a:	4b3d      	ldr	r3, [pc, #244]	@ (8008420 <_strtol_l.isra.0+0x10c>)
 800832c:	2208      	movs	r2, #8
 800832e:	469c      	mov	ip, r3
 8008330:	0023      	movs	r3, r4
 8008332:	4661      	mov	r1, ip
 8008334:	781d      	ldrb	r5, [r3, #0]
 8008336:	3401      	adds	r4, #1
 8008338:	5d48      	ldrb	r0, [r1, r5]
 800833a:	0001      	movs	r1, r0
 800833c:	4011      	ands	r1, r2
 800833e:	4210      	tst	r0, r2
 8008340:	d1f6      	bne.n	8008330 <_strtol_l.isra.0+0x1c>
 8008342:	2d2d      	cmp	r5, #45	@ 0x2d
 8008344:	d119      	bne.n	800837a <_strtol_l.isra.0+0x66>
 8008346:	7825      	ldrb	r5, [r4, #0]
 8008348:	1c9c      	adds	r4, r3, #2
 800834a:	2301      	movs	r3, #1
 800834c:	9300      	str	r3, [sp, #0]
 800834e:	2210      	movs	r2, #16
 8008350:	0033      	movs	r3, r6
 8008352:	4393      	bics	r3, r2
 8008354:	d11d      	bne.n	8008392 <_strtol_l.isra.0+0x7e>
 8008356:	2d30      	cmp	r5, #48	@ 0x30
 8008358:	d115      	bne.n	8008386 <_strtol_l.isra.0+0x72>
 800835a:	2120      	movs	r1, #32
 800835c:	7823      	ldrb	r3, [r4, #0]
 800835e:	438b      	bics	r3, r1
 8008360:	2b58      	cmp	r3, #88	@ 0x58
 8008362:	d110      	bne.n	8008386 <_strtol_l.isra.0+0x72>
 8008364:	7865      	ldrb	r5, [r4, #1]
 8008366:	3402      	adds	r4, #2
 8008368:	2610      	movs	r6, #16
 800836a:	e012      	b.n	8008392 <_strtol_l.isra.0+0x7e>
 800836c:	f7fd fd3a 	bl	8005de4 <__errno>
 8008370:	2316      	movs	r3, #22
 8008372:	6003      	str	r3, [r0, #0]
 8008374:	2000      	movs	r0, #0
 8008376:	b005      	add	sp, #20
 8008378:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800837a:	9100      	str	r1, [sp, #0]
 800837c:	2d2b      	cmp	r5, #43	@ 0x2b
 800837e:	d1e6      	bne.n	800834e <_strtol_l.isra.0+0x3a>
 8008380:	7825      	ldrb	r5, [r4, #0]
 8008382:	1c9c      	adds	r4, r3, #2
 8008384:	e7e3      	b.n	800834e <_strtol_l.isra.0+0x3a>
 8008386:	2e00      	cmp	r6, #0
 8008388:	d1ee      	bne.n	8008368 <_strtol_l.isra.0+0x54>
 800838a:	360a      	adds	r6, #10
 800838c:	2d30      	cmp	r5, #48	@ 0x30
 800838e:	d100      	bne.n	8008392 <_strtol_l.isra.0+0x7e>
 8008390:	3e02      	subs	r6, #2
 8008392:	4a24      	ldr	r2, [pc, #144]	@ (8008424 <_strtol_l.isra.0+0x110>)
 8008394:	9b00      	ldr	r3, [sp, #0]
 8008396:	4694      	mov	ip, r2
 8008398:	4463      	add	r3, ip
 800839a:	0031      	movs	r1, r6
 800839c:	0018      	movs	r0, r3
 800839e:	9302      	str	r3, [sp, #8]
 80083a0:	f7f7 ff54 	bl	800024c <__aeabi_uidivmod>
 80083a4:	2200      	movs	r2, #0
 80083a6:	4684      	mov	ip, r0
 80083a8:	0010      	movs	r0, r2
 80083aa:	002b      	movs	r3, r5
 80083ac:	3b30      	subs	r3, #48	@ 0x30
 80083ae:	2b09      	cmp	r3, #9
 80083b0:	d811      	bhi.n	80083d6 <_strtol_l.isra.0+0xc2>
 80083b2:	001d      	movs	r5, r3
 80083b4:	42ae      	cmp	r6, r5
 80083b6:	dd1d      	ble.n	80083f4 <_strtol_l.isra.0+0xe0>
 80083b8:	1c53      	adds	r3, r2, #1
 80083ba:	d009      	beq.n	80083d0 <_strtol_l.isra.0+0xbc>
 80083bc:	2201      	movs	r2, #1
 80083be:	4252      	negs	r2, r2
 80083c0:	4584      	cmp	ip, r0
 80083c2:	d305      	bcc.n	80083d0 <_strtol_l.isra.0+0xbc>
 80083c4:	d101      	bne.n	80083ca <_strtol_l.isra.0+0xb6>
 80083c6:	42a9      	cmp	r1, r5
 80083c8:	db11      	blt.n	80083ee <_strtol_l.isra.0+0xda>
 80083ca:	2201      	movs	r2, #1
 80083cc:	4370      	muls	r0, r6
 80083ce:	1828      	adds	r0, r5, r0
 80083d0:	7825      	ldrb	r5, [r4, #0]
 80083d2:	3401      	adds	r4, #1
 80083d4:	e7e9      	b.n	80083aa <_strtol_l.isra.0+0x96>
 80083d6:	002b      	movs	r3, r5
 80083d8:	3b41      	subs	r3, #65	@ 0x41
 80083da:	2b19      	cmp	r3, #25
 80083dc:	d801      	bhi.n	80083e2 <_strtol_l.isra.0+0xce>
 80083de:	3d37      	subs	r5, #55	@ 0x37
 80083e0:	e7e8      	b.n	80083b4 <_strtol_l.isra.0+0xa0>
 80083e2:	002b      	movs	r3, r5
 80083e4:	3b61      	subs	r3, #97	@ 0x61
 80083e6:	2b19      	cmp	r3, #25
 80083e8:	d804      	bhi.n	80083f4 <_strtol_l.isra.0+0xe0>
 80083ea:	3d57      	subs	r5, #87	@ 0x57
 80083ec:	e7e2      	b.n	80083b4 <_strtol_l.isra.0+0xa0>
 80083ee:	2201      	movs	r2, #1
 80083f0:	4252      	negs	r2, r2
 80083f2:	e7ed      	b.n	80083d0 <_strtol_l.isra.0+0xbc>
 80083f4:	1c53      	adds	r3, r2, #1
 80083f6:	d108      	bne.n	800840a <_strtol_l.isra.0+0xf6>
 80083f8:	2322      	movs	r3, #34	@ 0x22
 80083fa:	9a03      	ldr	r2, [sp, #12]
 80083fc:	9802      	ldr	r0, [sp, #8]
 80083fe:	6013      	str	r3, [r2, #0]
 8008400:	2f00      	cmp	r7, #0
 8008402:	d0b8      	beq.n	8008376 <_strtol_l.isra.0+0x62>
 8008404:	1e63      	subs	r3, r4, #1
 8008406:	9301      	str	r3, [sp, #4]
 8008408:	e007      	b.n	800841a <_strtol_l.isra.0+0x106>
 800840a:	9b00      	ldr	r3, [sp, #0]
 800840c:	2b00      	cmp	r3, #0
 800840e:	d000      	beq.n	8008412 <_strtol_l.isra.0+0xfe>
 8008410:	4240      	negs	r0, r0
 8008412:	2f00      	cmp	r7, #0
 8008414:	d0af      	beq.n	8008376 <_strtol_l.isra.0+0x62>
 8008416:	2a00      	cmp	r2, #0
 8008418:	d1f4      	bne.n	8008404 <_strtol_l.isra.0+0xf0>
 800841a:	9b01      	ldr	r3, [sp, #4]
 800841c:	603b      	str	r3, [r7, #0]
 800841e:	e7aa      	b.n	8008376 <_strtol_l.isra.0+0x62>
 8008420:	0800a611 	.word	0x0800a611
 8008424:	7fffffff 	.word	0x7fffffff

08008428 <_strtol_r>:
 8008428:	b510      	push	{r4, lr}
 800842a:	f7ff ff73 	bl	8008314 <_strtol_l.isra.0>
 800842e:	bd10      	pop	{r4, pc}

08008430 <__ssputs_r>:
 8008430:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008432:	688e      	ldr	r6, [r1, #8]
 8008434:	b085      	sub	sp, #20
 8008436:	001f      	movs	r7, r3
 8008438:	000c      	movs	r4, r1
 800843a:	680b      	ldr	r3, [r1, #0]
 800843c:	9002      	str	r0, [sp, #8]
 800843e:	9203      	str	r2, [sp, #12]
 8008440:	42be      	cmp	r6, r7
 8008442:	d830      	bhi.n	80084a6 <__ssputs_r+0x76>
 8008444:	210c      	movs	r1, #12
 8008446:	5e62      	ldrsh	r2, [r4, r1]
 8008448:	2190      	movs	r1, #144	@ 0x90
 800844a:	00c9      	lsls	r1, r1, #3
 800844c:	420a      	tst	r2, r1
 800844e:	d028      	beq.n	80084a2 <__ssputs_r+0x72>
 8008450:	2003      	movs	r0, #3
 8008452:	6921      	ldr	r1, [r4, #16]
 8008454:	1a5b      	subs	r3, r3, r1
 8008456:	9301      	str	r3, [sp, #4]
 8008458:	6963      	ldr	r3, [r4, #20]
 800845a:	4343      	muls	r3, r0
 800845c:	9801      	ldr	r0, [sp, #4]
 800845e:	0fdd      	lsrs	r5, r3, #31
 8008460:	18ed      	adds	r5, r5, r3
 8008462:	1c7b      	adds	r3, r7, #1
 8008464:	181b      	adds	r3, r3, r0
 8008466:	106d      	asrs	r5, r5, #1
 8008468:	42ab      	cmp	r3, r5
 800846a:	d900      	bls.n	800846e <__ssputs_r+0x3e>
 800846c:	001d      	movs	r5, r3
 800846e:	0552      	lsls	r2, r2, #21
 8008470:	d528      	bpl.n	80084c4 <__ssputs_r+0x94>
 8008472:	0029      	movs	r1, r5
 8008474:	9802      	ldr	r0, [sp, #8]
 8008476:	f7fe fbdd 	bl	8006c34 <_malloc_r>
 800847a:	1e06      	subs	r6, r0, #0
 800847c:	d02c      	beq.n	80084d8 <__ssputs_r+0xa8>
 800847e:	9a01      	ldr	r2, [sp, #4]
 8008480:	6921      	ldr	r1, [r4, #16]
 8008482:	f001 f947 	bl	8009714 <memcpy>
 8008486:	89a2      	ldrh	r2, [r4, #12]
 8008488:	4b18      	ldr	r3, [pc, #96]	@ (80084ec <__ssputs_r+0xbc>)
 800848a:	401a      	ands	r2, r3
 800848c:	2380      	movs	r3, #128	@ 0x80
 800848e:	4313      	orrs	r3, r2
 8008490:	81a3      	strh	r3, [r4, #12]
 8008492:	9b01      	ldr	r3, [sp, #4]
 8008494:	6126      	str	r6, [r4, #16]
 8008496:	18f6      	adds	r6, r6, r3
 8008498:	6026      	str	r6, [r4, #0]
 800849a:	003e      	movs	r6, r7
 800849c:	6165      	str	r5, [r4, #20]
 800849e:	1aed      	subs	r5, r5, r3
 80084a0:	60a5      	str	r5, [r4, #8]
 80084a2:	42be      	cmp	r6, r7
 80084a4:	d900      	bls.n	80084a8 <__ssputs_r+0x78>
 80084a6:	003e      	movs	r6, r7
 80084a8:	0032      	movs	r2, r6
 80084aa:	9903      	ldr	r1, [sp, #12]
 80084ac:	6820      	ldr	r0, [r4, #0]
 80084ae:	f001 f8d7 	bl	8009660 <memmove>
 80084b2:	2000      	movs	r0, #0
 80084b4:	68a3      	ldr	r3, [r4, #8]
 80084b6:	1b9b      	subs	r3, r3, r6
 80084b8:	60a3      	str	r3, [r4, #8]
 80084ba:	6823      	ldr	r3, [r4, #0]
 80084bc:	199b      	adds	r3, r3, r6
 80084be:	6023      	str	r3, [r4, #0]
 80084c0:	b005      	add	sp, #20
 80084c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80084c4:	002a      	movs	r2, r5
 80084c6:	9802      	ldr	r0, [sp, #8]
 80084c8:	f001 fcec 	bl	8009ea4 <_realloc_r>
 80084cc:	1e06      	subs	r6, r0, #0
 80084ce:	d1e0      	bne.n	8008492 <__ssputs_r+0x62>
 80084d0:	6921      	ldr	r1, [r4, #16]
 80084d2:	9802      	ldr	r0, [sp, #8]
 80084d4:	f7fe fb38 	bl	8006b48 <_free_r>
 80084d8:	230c      	movs	r3, #12
 80084da:	2001      	movs	r0, #1
 80084dc:	9a02      	ldr	r2, [sp, #8]
 80084de:	4240      	negs	r0, r0
 80084e0:	6013      	str	r3, [r2, #0]
 80084e2:	89a2      	ldrh	r2, [r4, #12]
 80084e4:	3334      	adds	r3, #52	@ 0x34
 80084e6:	4313      	orrs	r3, r2
 80084e8:	81a3      	strh	r3, [r4, #12]
 80084ea:	e7e9      	b.n	80084c0 <__ssputs_r+0x90>
 80084ec:	fffffb7f 	.word	0xfffffb7f

080084f0 <_svfiprintf_r>:
 80084f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80084f2:	b0a1      	sub	sp, #132	@ 0x84
 80084f4:	9003      	str	r0, [sp, #12]
 80084f6:	001d      	movs	r5, r3
 80084f8:	898b      	ldrh	r3, [r1, #12]
 80084fa:	000f      	movs	r7, r1
 80084fc:	0016      	movs	r6, r2
 80084fe:	061b      	lsls	r3, r3, #24
 8008500:	d511      	bpl.n	8008526 <_svfiprintf_r+0x36>
 8008502:	690b      	ldr	r3, [r1, #16]
 8008504:	2b00      	cmp	r3, #0
 8008506:	d10e      	bne.n	8008526 <_svfiprintf_r+0x36>
 8008508:	2140      	movs	r1, #64	@ 0x40
 800850a:	f7fe fb93 	bl	8006c34 <_malloc_r>
 800850e:	6038      	str	r0, [r7, #0]
 8008510:	6138      	str	r0, [r7, #16]
 8008512:	2800      	cmp	r0, #0
 8008514:	d105      	bne.n	8008522 <_svfiprintf_r+0x32>
 8008516:	230c      	movs	r3, #12
 8008518:	9a03      	ldr	r2, [sp, #12]
 800851a:	6013      	str	r3, [r2, #0]
 800851c:	2001      	movs	r0, #1
 800851e:	4240      	negs	r0, r0
 8008520:	e0cf      	b.n	80086c2 <_svfiprintf_r+0x1d2>
 8008522:	2340      	movs	r3, #64	@ 0x40
 8008524:	617b      	str	r3, [r7, #20]
 8008526:	2300      	movs	r3, #0
 8008528:	ac08      	add	r4, sp, #32
 800852a:	6163      	str	r3, [r4, #20]
 800852c:	3320      	adds	r3, #32
 800852e:	7663      	strb	r3, [r4, #25]
 8008530:	3310      	adds	r3, #16
 8008532:	76a3      	strb	r3, [r4, #26]
 8008534:	9507      	str	r5, [sp, #28]
 8008536:	0035      	movs	r5, r6
 8008538:	782b      	ldrb	r3, [r5, #0]
 800853a:	2b00      	cmp	r3, #0
 800853c:	d001      	beq.n	8008542 <_svfiprintf_r+0x52>
 800853e:	2b25      	cmp	r3, #37	@ 0x25
 8008540:	d148      	bne.n	80085d4 <_svfiprintf_r+0xe4>
 8008542:	1bab      	subs	r3, r5, r6
 8008544:	9305      	str	r3, [sp, #20]
 8008546:	42b5      	cmp	r5, r6
 8008548:	d00b      	beq.n	8008562 <_svfiprintf_r+0x72>
 800854a:	0032      	movs	r2, r6
 800854c:	0039      	movs	r1, r7
 800854e:	9803      	ldr	r0, [sp, #12]
 8008550:	f7ff ff6e 	bl	8008430 <__ssputs_r>
 8008554:	3001      	adds	r0, #1
 8008556:	d100      	bne.n	800855a <_svfiprintf_r+0x6a>
 8008558:	e0ae      	b.n	80086b8 <_svfiprintf_r+0x1c8>
 800855a:	6963      	ldr	r3, [r4, #20]
 800855c:	9a05      	ldr	r2, [sp, #20]
 800855e:	189b      	adds	r3, r3, r2
 8008560:	6163      	str	r3, [r4, #20]
 8008562:	782b      	ldrb	r3, [r5, #0]
 8008564:	2b00      	cmp	r3, #0
 8008566:	d100      	bne.n	800856a <_svfiprintf_r+0x7a>
 8008568:	e0a6      	b.n	80086b8 <_svfiprintf_r+0x1c8>
 800856a:	2201      	movs	r2, #1
 800856c:	2300      	movs	r3, #0
 800856e:	4252      	negs	r2, r2
 8008570:	6062      	str	r2, [r4, #4]
 8008572:	a904      	add	r1, sp, #16
 8008574:	3254      	adds	r2, #84	@ 0x54
 8008576:	1852      	adds	r2, r2, r1
 8008578:	1c6e      	adds	r6, r5, #1
 800857a:	6023      	str	r3, [r4, #0]
 800857c:	60e3      	str	r3, [r4, #12]
 800857e:	60a3      	str	r3, [r4, #8]
 8008580:	7013      	strb	r3, [r2, #0]
 8008582:	65a3      	str	r3, [r4, #88]	@ 0x58
 8008584:	4b54      	ldr	r3, [pc, #336]	@ (80086d8 <_svfiprintf_r+0x1e8>)
 8008586:	2205      	movs	r2, #5
 8008588:	0018      	movs	r0, r3
 800858a:	7831      	ldrb	r1, [r6, #0]
 800858c:	9305      	str	r3, [sp, #20]
 800858e:	f7fd fc56 	bl	8005e3e <memchr>
 8008592:	1c75      	adds	r5, r6, #1
 8008594:	2800      	cmp	r0, #0
 8008596:	d11f      	bne.n	80085d8 <_svfiprintf_r+0xe8>
 8008598:	6822      	ldr	r2, [r4, #0]
 800859a:	06d3      	lsls	r3, r2, #27
 800859c:	d504      	bpl.n	80085a8 <_svfiprintf_r+0xb8>
 800859e:	2353      	movs	r3, #83	@ 0x53
 80085a0:	a904      	add	r1, sp, #16
 80085a2:	185b      	adds	r3, r3, r1
 80085a4:	2120      	movs	r1, #32
 80085a6:	7019      	strb	r1, [r3, #0]
 80085a8:	0713      	lsls	r3, r2, #28
 80085aa:	d504      	bpl.n	80085b6 <_svfiprintf_r+0xc6>
 80085ac:	2353      	movs	r3, #83	@ 0x53
 80085ae:	a904      	add	r1, sp, #16
 80085b0:	185b      	adds	r3, r3, r1
 80085b2:	212b      	movs	r1, #43	@ 0x2b
 80085b4:	7019      	strb	r1, [r3, #0]
 80085b6:	7833      	ldrb	r3, [r6, #0]
 80085b8:	2b2a      	cmp	r3, #42	@ 0x2a
 80085ba:	d016      	beq.n	80085ea <_svfiprintf_r+0xfa>
 80085bc:	0035      	movs	r5, r6
 80085be:	2100      	movs	r1, #0
 80085c0:	200a      	movs	r0, #10
 80085c2:	68e3      	ldr	r3, [r4, #12]
 80085c4:	782a      	ldrb	r2, [r5, #0]
 80085c6:	1c6e      	adds	r6, r5, #1
 80085c8:	3a30      	subs	r2, #48	@ 0x30
 80085ca:	2a09      	cmp	r2, #9
 80085cc:	d950      	bls.n	8008670 <_svfiprintf_r+0x180>
 80085ce:	2900      	cmp	r1, #0
 80085d0:	d111      	bne.n	80085f6 <_svfiprintf_r+0x106>
 80085d2:	e017      	b.n	8008604 <_svfiprintf_r+0x114>
 80085d4:	3501      	adds	r5, #1
 80085d6:	e7af      	b.n	8008538 <_svfiprintf_r+0x48>
 80085d8:	9b05      	ldr	r3, [sp, #20]
 80085da:	6822      	ldr	r2, [r4, #0]
 80085dc:	1ac0      	subs	r0, r0, r3
 80085de:	2301      	movs	r3, #1
 80085e0:	4083      	lsls	r3, r0
 80085e2:	4313      	orrs	r3, r2
 80085e4:	002e      	movs	r6, r5
 80085e6:	6023      	str	r3, [r4, #0]
 80085e8:	e7cc      	b.n	8008584 <_svfiprintf_r+0x94>
 80085ea:	9b07      	ldr	r3, [sp, #28]
 80085ec:	1d19      	adds	r1, r3, #4
 80085ee:	681b      	ldr	r3, [r3, #0]
 80085f0:	9107      	str	r1, [sp, #28]
 80085f2:	2b00      	cmp	r3, #0
 80085f4:	db01      	blt.n	80085fa <_svfiprintf_r+0x10a>
 80085f6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80085f8:	e004      	b.n	8008604 <_svfiprintf_r+0x114>
 80085fa:	425b      	negs	r3, r3
 80085fc:	60e3      	str	r3, [r4, #12]
 80085fe:	2302      	movs	r3, #2
 8008600:	4313      	orrs	r3, r2
 8008602:	6023      	str	r3, [r4, #0]
 8008604:	782b      	ldrb	r3, [r5, #0]
 8008606:	2b2e      	cmp	r3, #46	@ 0x2e
 8008608:	d10c      	bne.n	8008624 <_svfiprintf_r+0x134>
 800860a:	786b      	ldrb	r3, [r5, #1]
 800860c:	2b2a      	cmp	r3, #42	@ 0x2a
 800860e:	d134      	bne.n	800867a <_svfiprintf_r+0x18a>
 8008610:	9b07      	ldr	r3, [sp, #28]
 8008612:	3502      	adds	r5, #2
 8008614:	1d1a      	adds	r2, r3, #4
 8008616:	681b      	ldr	r3, [r3, #0]
 8008618:	9207      	str	r2, [sp, #28]
 800861a:	2b00      	cmp	r3, #0
 800861c:	da01      	bge.n	8008622 <_svfiprintf_r+0x132>
 800861e:	2301      	movs	r3, #1
 8008620:	425b      	negs	r3, r3
 8008622:	9309      	str	r3, [sp, #36]	@ 0x24
 8008624:	4e2d      	ldr	r6, [pc, #180]	@ (80086dc <_svfiprintf_r+0x1ec>)
 8008626:	2203      	movs	r2, #3
 8008628:	0030      	movs	r0, r6
 800862a:	7829      	ldrb	r1, [r5, #0]
 800862c:	f7fd fc07 	bl	8005e3e <memchr>
 8008630:	2800      	cmp	r0, #0
 8008632:	d006      	beq.n	8008642 <_svfiprintf_r+0x152>
 8008634:	2340      	movs	r3, #64	@ 0x40
 8008636:	1b80      	subs	r0, r0, r6
 8008638:	4083      	lsls	r3, r0
 800863a:	6822      	ldr	r2, [r4, #0]
 800863c:	3501      	adds	r5, #1
 800863e:	4313      	orrs	r3, r2
 8008640:	6023      	str	r3, [r4, #0]
 8008642:	7829      	ldrb	r1, [r5, #0]
 8008644:	2206      	movs	r2, #6
 8008646:	4826      	ldr	r0, [pc, #152]	@ (80086e0 <_svfiprintf_r+0x1f0>)
 8008648:	1c6e      	adds	r6, r5, #1
 800864a:	7621      	strb	r1, [r4, #24]
 800864c:	f7fd fbf7 	bl	8005e3e <memchr>
 8008650:	2800      	cmp	r0, #0
 8008652:	d038      	beq.n	80086c6 <_svfiprintf_r+0x1d6>
 8008654:	4b23      	ldr	r3, [pc, #140]	@ (80086e4 <_svfiprintf_r+0x1f4>)
 8008656:	2b00      	cmp	r3, #0
 8008658:	d122      	bne.n	80086a0 <_svfiprintf_r+0x1b0>
 800865a:	2207      	movs	r2, #7
 800865c:	9b07      	ldr	r3, [sp, #28]
 800865e:	3307      	adds	r3, #7
 8008660:	4393      	bics	r3, r2
 8008662:	3308      	adds	r3, #8
 8008664:	9307      	str	r3, [sp, #28]
 8008666:	6963      	ldr	r3, [r4, #20]
 8008668:	9a04      	ldr	r2, [sp, #16]
 800866a:	189b      	adds	r3, r3, r2
 800866c:	6163      	str	r3, [r4, #20]
 800866e:	e762      	b.n	8008536 <_svfiprintf_r+0x46>
 8008670:	4343      	muls	r3, r0
 8008672:	0035      	movs	r5, r6
 8008674:	2101      	movs	r1, #1
 8008676:	189b      	adds	r3, r3, r2
 8008678:	e7a4      	b.n	80085c4 <_svfiprintf_r+0xd4>
 800867a:	2300      	movs	r3, #0
 800867c:	200a      	movs	r0, #10
 800867e:	0019      	movs	r1, r3
 8008680:	3501      	adds	r5, #1
 8008682:	6063      	str	r3, [r4, #4]
 8008684:	782a      	ldrb	r2, [r5, #0]
 8008686:	1c6e      	adds	r6, r5, #1
 8008688:	3a30      	subs	r2, #48	@ 0x30
 800868a:	2a09      	cmp	r2, #9
 800868c:	d903      	bls.n	8008696 <_svfiprintf_r+0x1a6>
 800868e:	2b00      	cmp	r3, #0
 8008690:	d0c8      	beq.n	8008624 <_svfiprintf_r+0x134>
 8008692:	9109      	str	r1, [sp, #36]	@ 0x24
 8008694:	e7c6      	b.n	8008624 <_svfiprintf_r+0x134>
 8008696:	4341      	muls	r1, r0
 8008698:	0035      	movs	r5, r6
 800869a:	2301      	movs	r3, #1
 800869c:	1889      	adds	r1, r1, r2
 800869e:	e7f1      	b.n	8008684 <_svfiprintf_r+0x194>
 80086a0:	aa07      	add	r2, sp, #28
 80086a2:	9200      	str	r2, [sp, #0]
 80086a4:	0021      	movs	r1, r4
 80086a6:	003a      	movs	r2, r7
 80086a8:	4b0f      	ldr	r3, [pc, #60]	@ (80086e8 <_svfiprintf_r+0x1f8>)
 80086aa:	9803      	ldr	r0, [sp, #12]
 80086ac:	f7fc fb68 	bl	8004d80 <_printf_float>
 80086b0:	9004      	str	r0, [sp, #16]
 80086b2:	9b04      	ldr	r3, [sp, #16]
 80086b4:	3301      	adds	r3, #1
 80086b6:	d1d6      	bne.n	8008666 <_svfiprintf_r+0x176>
 80086b8:	89bb      	ldrh	r3, [r7, #12]
 80086ba:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80086bc:	065b      	lsls	r3, r3, #25
 80086be:	d500      	bpl.n	80086c2 <_svfiprintf_r+0x1d2>
 80086c0:	e72c      	b.n	800851c <_svfiprintf_r+0x2c>
 80086c2:	b021      	add	sp, #132	@ 0x84
 80086c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80086c6:	aa07      	add	r2, sp, #28
 80086c8:	9200      	str	r2, [sp, #0]
 80086ca:	0021      	movs	r1, r4
 80086cc:	003a      	movs	r2, r7
 80086ce:	4b06      	ldr	r3, [pc, #24]	@ (80086e8 <_svfiprintf_r+0x1f8>)
 80086d0:	9803      	ldr	r0, [sp, #12]
 80086d2:	f7fc fe03 	bl	80052dc <_printf_i>
 80086d6:	e7eb      	b.n	80086b0 <_svfiprintf_r+0x1c0>
 80086d8:	0800a3f3 	.word	0x0800a3f3
 80086dc:	0800a3f9 	.word	0x0800a3f9
 80086e0:	0800a3fd 	.word	0x0800a3fd
 80086e4:	08004d81 	.word	0x08004d81
 80086e8:	08008431 	.word	0x08008431

080086ec <__sfputc_r>:
 80086ec:	6893      	ldr	r3, [r2, #8]
 80086ee:	b510      	push	{r4, lr}
 80086f0:	3b01      	subs	r3, #1
 80086f2:	6093      	str	r3, [r2, #8]
 80086f4:	2b00      	cmp	r3, #0
 80086f6:	da04      	bge.n	8008702 <__sfputc_r+0x16>
 80086f8:	6994      	ldr	r4, [r2, #24]
 80086fa:	42a3      	cmp	r3, r4
 80086fc:	db07      	blt.n	800870e <__sfputc_r+0x22>
 80086fe:	290a      	cmp	r1, #10
 8008700:	d005      	beq.n	800870e <__sfputc_r+0x22>
 8008702:	6813      	ldr	r3, [r2, #0]
 8008704:	1c58      	adds	r0, r3, #1
 8008706:	6010      	str	r0, [r2, #0]
 8008708:	7019      	strb	r1, [r3, #0]
 800870a:	0008      	movs	r0, r1
 800870c:	bd10      	pop	{r4, pc}
 800870e:	f000 ff06 	bl	800951e <__swbuf_r>
 8008712:	0001      	movs	r1, r0
 8008714:	e7f9      	b.n	800870a <__sfputc_r+0x1e>

08008716 <__sfputs_r>:
 8008716:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008718:	0006      	movs	r6, r0
 800871a:	000f      	movs	r7, r1
 800871c:	0014      	movs	r4, r2
 800871e:	18d5      	adds	r5, r2, r3
 8008720:	42ac      	cmp	r4, r5
 8008722:	d101      	bne.n	8008728 <__sfputs_r+0x12>
 8008724:	2000      	movs	r0, #0
 8008726:	e007      	b.n	8008738 <__sfputs_r+0x22>
 8008728:	7821      	ldrb	r1, [r4, #0]
 800872a:	003a      	movs	r2, r7
 800872c:	0030      	movs	r0, r6
 800872e:	f7ff ffdd 	bl	80086ec <__sfputc_r>
 8008732:	3401      	adds	r4, #1
 8008734:	1c43      	adds	r3, r0, #1
 8008736:	d1f3      	bne.n	8008720 <__sfputs_r+0xa>
 8008738:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800873c <_vfiprintf_r>:
 800873c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800873e:	b0a1      	sub	sp, #132	@ 0x84
 8008740:	000f      	movs	r7, r1
 8008742:	0015      	movs	r5, r2
 8008744:	001e      	movs	r6, r3
 8008746:	9003      	str	r0, [sp, #12]
 8008748:	2800      	cmp	r0, #0
 800874a:	d004      	beq.n	8008756 <_vfiprintf_r+0x1a>
 800874c:	6a03      	ldr	r3, [r0, #32]
 800874e:	2b00      	cmp	r3, #0
 8008750:	d101      	bne.n	8008756 <_vfiprintf_r+0x1a>
 8008752:	f7fd f96b 	bl	8005a2c <__sinit>
 8008756:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8008758:	07db      	lsls	r3, r3, #31
 800875a:	d405      	bmi.n	8008768 <_vfiprintf_r+0x2c>
 800875c:	89bb      	ldrh	r3, [r7, #12]
 800875e:	059b      	lsls	r3, r3, #22
 8008760:	d402      	bmi.n	8008768 <_vfiprintf_r+0x2c>
 8008762:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8008764:	f7fd fb69 	bl	8005e3a <__retarget_lock_acquire_recursive>
 8008768:	89bb      	ldrh	r3, [r7, #12]
 800876a:	071b      	lsls	r3, r3, #28
 800876c:	d502      	bpl.n	8008774 <_vfiprintf_r+0x38>
 800876e:	693b      	ldr	r3, [r7, #16]
 8008770:	2b00      	cmp	r3, #0
 8008772:	d113      	bne.n	800879c <_vfiprintf_r+0x60>
 8008774:	0039      	movs	r1, r7
 8008776:	9803      	ldr	r0, [sp, #12]
 8008778:	f000 ff14 	bl	80095a4 <__swsetup_r>
 800877c:	2800      	cmp	r0, #0
 800877e:	d00d      	beq.n	800879c <_vfiprintf_r+0x60>
 8008780:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8008782:	07db      	lsls	r3, r3, #31
 8008784:	d503      	bpl.n	800878e <_vfiprintf_r+0x52>
 8008786:	2001      	movs	r0, #1
 8008788:	4240      	negs	r0, r0
 800878a:	b021      	add	sp, #132	@ 0x84
 800878c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800878e:	89bb      	ldrh	r3, [r7, #12]
 8008790:	059b      	lsls	r3, r3, #22
 8008792:	d4f8      	bmi.n	8008786 <_vfiprintf_r+0x4a>
 8008794:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8008796:	f7fd fb51 	bl	8005e3c <__retarget_lock_release_recursive>
 800879a:	e7f4      	b.n	8008786 <_vfiprintf_r+0x4a>
 800879c:	2300      	movs	r3, #0
 800879e:	ac08      	add	r4, sp, #32
 80087a0:	6163      	str	r3, [r4, #20]
 80087a2:	3320      	adds	r3, #32
 80087a4:	7663      	strb	r3, [r4, #25]
 80087a6:	3310      	adds	r3, #16
 80087a8:	76a3      	strb	r3, [r4, #26]
 80087aa:	9607      	str	r6, [sp, #28]
 80087ac:	002e      	movs	r6, r5
 80087ae:	7833      	ldrb	r3, [r6, #0]
 80087b0:	2b00      	cmp	r3, #0
 80087b2:	d001      	beq.n	80087b8 <_vfiprintf_r+0x7c>
 80087b4:	2b25      	cmp	r3, #37	@ 0x25
 80087b6:	d148      	bne.n	800884a <_vfiprintf_r+0x10e>
 80087b8:	1b73      	subs	r3, r6, r5
 80087ba:	9305      	str	r3, [sp, #20]
 80087bc:	42ae      	cmp	r6, r5
 80087be:	d00b      	beq.n	80087d8 <_vfiprintf_r+0x9c>
 80087c0:	002a      	movs	r2, r5
 80087c2:	0039      	movs	r1, r7
 80087c4:	9803      	ldr	r0, [sp, #12]
 80087c6:	f7ff ffa6 	bl	8008716 <__sfputs_r>
 80087ca:	3001      	adds	r0, #1
 80087cc:	d100      	bne.n	80087d0 <_vfiprintf_r+0x94>
 80087ce:	e0ae      	b.n	800892e <_vfiprintf_r+0x1f2>
 80087d0:	6963      	ldr	r3, [r4, #20]
 80087d2:	9a05      	ldr	r2, [sp, #20]
 80087d4:	189b      	adds	r3, r3, r2
 80087d6:	6163      	str	r3, [r4, #20]
 80087d8:	7833      	ldrb	r3, [r6, #0]
 80087da:	2b00      	cmp	r3, #0
 80087dc:	d100      	bne.n	80087e0 <_vfiprintf_r+0xa4>
 80087de:	e0a6      	b.n	800892e <_vfiprintf_r+0x1f2>
 80087e0:	2201      	movs	r2, #1
 80087e2:	2300      	movs	r3, #0
 80087e4:	4252      	negs	r2, r2
 80087e6:	6062      	str	r2, [r4, #4]
 80087e8:	a904      	add	r1, sp, #16
 80087ea:	3254      	adds	r2, #84	@ 0x54
 80087ec:	1852      	adds	r2, r2, r1
 80087ee:	1c75      	adds	r5, r6, #1
 80087f0:	6023      	str	r3, [r4, #0]
 80087f2:	60e3      	str	r3, [r4, #12]
 80087f4:	60a3      	str	r3, [r4, #8]
 80087f6:	7013      	strb	r3, [r2, #0]
 80087f8:	65a3      	str	r3, [r4, #88]	@ 0x58
 80087fa:	4b59      	ldr	r3, [pc, #356]	@ (8008960 <_vfiprintf_r+0x224>)
 80087fc:	2205      	movs	r2, #5
 80087fe:	0018      	movs	r0, r3
 8008800:	7829      	ldrb	r1, [r5, #0]
 8008802:	9305      	str	r3, [sp, #20]
 8008804:	f7fd fb1b 	bl	8005e3e <memchr>
 8008808:	1c6e      	adds	r6, r5, #1
 800880a:	2800      	cmp	r0, #0
 800880c:	d11f      	bne.n	800884e <_vfiprintf_r+0x112>
 800880e:	6822      	ldr	r2, [r4, #0]
 8008810:	06d3      	lsls	r3, r2, #27
 8008812:	d504      	bpl.n	800881e <_vfiprintf_r+0xe2>
 8008814:	2353      	movs	r3, #83	@ 0x53
 8008816:	a904      	add	r1, sp, #16
 8008818:	185b      	adds	r3, r3, r1
 800881a:	2120      	movs	r1, #32
 800881c:	7019      	strb	r1, [r3, #0]
 800881e:	0713      	lsls	r3, r2, #28
 8008820:	d504      	bpl.n	800882c <_vfiprintf_r+0xf0>
 8008822:	2353      	movs	r3, #83	@ 0x53
 8008824:	a904      	add	r1, sp, #16
 8008826:	185b      	adds	r3, r3, r1
 8008828:	212b      	movs	r1, #43	@ 0x2b
 800882a:	7019      	strb	r1, [r3, #0]
 800882c:	782b      	ldrb	r3, [r5, #0]
 800882e:	2b2a      	cmp	r3, #42	@ 0x2a
 8008830:	d016      	beq.n	8008860 <_vfiprintf_r+0x124>
 8008832:	002e      	movs	r6, r5
 8008834:	2100      	movs	r1, #0
 8008836:	200a      	movs	r0, #10
 8008838:	68e3      	ldr	r3, [r4, #12]
 800883a:	7832      	ldrb	r2, [r6, #0]
 800883c:	1c75      	adds	r5, r6, #1
 800883e:	3a30      	subs	r2, #48	@ 0x30
 8008840:	2a09      	cmp	r2, #9
 8008842:	d950      	bls.n	80088e6 <_vfiprintf_r+0x1aa>
 8008844:	2900      	cmp	r1, #0
 8008846:	d111      	bne.n	800886c <_vfiprintf_r+0x130>
 8008848:	e017      	b.n	800887a <_vfiprintf_r+0x13e>
 800884a:	3601      	adds	r6, #1
 800884c:	e7af      	b.n	80087ae <_vfiprintf_r+0x72>
 800884e:	9b05      	ldr	r3, [sp, #20]
 8008850:	6822      	ldr	r2, [r4, #0]
 8008852:	1ac0      	subs	r0, r0, r3
 8008854:	2301      	movs	r3, #1
 8008856:	4083      	lsls	r3, r0
 8008858:	4313      	orrs	r3, r2
 800885a:	0035      	movs	r5, r6
 800885c:	6023      	str	r3, [r4, #0]
 800885e:	e7cc      	b.n	80087fa <_vfiprintf_r+0xbe>
 8008860:	9b07      	ldr	r3, [sp, #28]
 8008862:	1d19      	adds	r1, r3, #4
 8008864:	681b      	ldr	r3, [r3, #0]
 8008866:	9107      	str	r1, [sp, #28]
 8008868:	2b00      	cmp	r3, #0
 800886a:	db01      	blt.n	8008870 <_vfiprintf_r+0x134>
 800886c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800886e:	e004      	b.n	800887a <_vfiprintf_r+0x13e>
 8008870:	425b      	negs	r3, r3
 8008872:	60e3      	str	r3, [r4, #12]
 8008874:	2302      	movs	r3, #2
 8008876:	4313      	orrs	r3, r2
 8008878:	6023      	str	r3, [r4, #0]
 800887a:	7833      	ldrb	r3, [r6, #0]
 800887c:	2b2e      	cmp	r3, #46	@ 0x2e
 800887e:	d10c      	bne.n	800889a <_vfiprintf_r+0x15e>
 8008880:	7873      	ldrb	r3, [r6, #1]
 8008882:	2b2a      	cmp	r3, #42	@ 0x2a
 8008884:	d134      	bne.n	80088f0 <_vfiprintf_r+0x1b4>
 8008886:	9b07      	ldr	r3, [sp, #28]
 8008888:	3602      	adds	r6, #2
 800888a:	1d1a      	adds	r2, r3, #4
 800888c:	681b      	ldr	r3, [r3, #0]
 800888e:	9207      	str	r2, [sp, #28]
 8008890:	2b00      	cmp	r3, #0
 8008892:	da01      	bge.n	8008898 <_vfiprintf_r+0x15c>
 8008894:	2301      	movs	r3, #1
 8008896:	425b      	negs	r3, r3
 8008898:	9309      	str	r3, [sp, #36]	@ 0x24
 800889a:	4d32      	ldr	r5, [pc, #200]	@ (8008964 <_vfiprintf_r+0x228>)
 800889c:	2203      	movs	r2, #3
 800889e:	0028      	movs	r0, r5
 80088a0:	7831      	ldrb	r1, [r6, #0]
 80088a2:	f7fd facc 	bl	8005e3e <memchr>
 80088a6:	2800      	cmp	r0, #0
 80088a8:	d006      	beq.n	80088b8 <_vfiprintf_r+0x17c>
 80088aa:	2340      	movs	r3, #64	@ 0x40
 80088ac:	1b40      	subs	r0, r0, r5
 80088ae:	4083      	lsls	r3, r0
 80088b0:	6822      	ldr	r2, [r4, #0]
 80088b2:	3601      	adds	r6, #1
 80088b4:	4313      	orrs	r3, r2
 80088b6:	6023      	str	r3, [r4, #0]
 80088b8:	7831      	ldrb	r1, [r6, #0]
 80088ba:	2206      	movs	r2, #6
 80088bc:	482a      	ldr	r0, [pc, #168]	@ (8008968 <_vfiprintf_r+0x22c>)
 80088be:	1c75      	adds	r5, r6, #1
 80088c0:	7621      	strb	r1, [r4, #24]
 80088c2:	f7fd fabc 	bl	8005e3e <memchr>
 80088c6:	2800      	cmp	r0, #0
 80088c8:	d040      	beq.n	800894c <_vfiprintf_r+0x210>
 80088ca:	4b28      	ldr	r3, [pc, #160]	@ (800896c <_vfiprintf_r+0x230>)
 80088cc:	2b00      	cmp	r3, #0
 80088ce:	d122      	bne.n	8008916 <_vfiprintf_r+0x1da>
 80088d0:	2207      	movs	r2, #7
 80088d2:	9b07      	ldr	r3, [sp, #28]
 80088d4:	3307      	adds	r3, #7
 80088d6:	4393      	bics	r3, r2
 80088d8:	3308      	adds	r3, #8
 80088da:	9307      	str	r3, [sp, #28]
 80088dc:	6963      	ldr	r3, [r4, #20]
 80088de:	9a04      	ldr	r2, [sp, #16]
 80088e0:	189b      	adds	r3, r3, r2
 80088e2:	6163      	str	r3, [r4, #20]
 80088e4:	e762      	b.n	80087ac <_vfiprintf_r+0x70>
 80088e6:	4343      	muls	r3, r0
 80088e8:	002e      	movs	r6, r5
 80088ea:	2101      	movs	r1, #1
 80088ec:	189b      	adds	r3, r3, r2
 80088ee:	e7a4      	b.n	800883a <_vfiprintf_r+0xfe>
 80088f0:	2300      	movs	r3, #0
 80088f2:	200a      	movs	r0, #10
 80088f4:	0019      	movs	r1, r3
 80088f6:	3601      	adds	r6, #1
 80088f8:	6063      	str	r3, [r4, #4]
 80088fa:	7832      	ldrb	r2, [r6, #0]
 80088fc:	1c75      	adds	r5, r6, #1
 80088fe:	3a30      	subs	r2, #48	@ 0x30
 8008900:	2a09      	cmp	r2, #9
 8008902:	d903      	bls.n	800890c <_vfiprintf_r+0x1d0>
 8008904:	2b00      	cmp	r3, #0
 8008906:	d0c8      	beq.n	800889a <_vfiprintf_r+0x15e>
 8008908:	9109      	str	r1, [sp, #36]	@ 0x24
 800890a:	e7c6      	b.n	800889a <_vfiprintf_r+0x15e>
 800890c:	4341      	muls	r1, r0
 800890e:	002e      	movs	r6, r5
 8008910:	2301      	movs	r3, #1
 8008912:	1889      	adds	r1, r1, r2
 8008914:	e7f1      	b.n	80088fa <_vfiprintf_r+0x1be>
 8008916:	aa07      	add	r2, sp, #28
 8008918:	9200      	str	r2, [sp, #0]
 800891a:	0021      	movs	r1, r4
 800891c:	003a      	movs	r2, r7
 800891e:	4b14      	ldr	r3, [pc, #80]	@ (8008970 <_vfiprintf_r+0x234>)
 8008920:	9803      	ldr	r0, [sp, #12]
 8008922:	f7fc fa2d 	bl	8004d80 <_printf_float>
 8008926:	9004      	str	r0, [sp, #16]
 8008928:	9b04      	ldr	r3, [sp, #16]
 800892a:	3301      	adds	r3, #1
 800892c:	d1d6      	bne.n	80088dc <_vfiprintf_r+0x1a0>
 800892e:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8008930:	07db      	lsls	r3, r3, #31
 8008932:	d405      	bmi.n	8008940 <_vfiprintf_r+0x204>
 8008934:	89bb      	ldrh	r3, [r7, #12]
 8008936:	059b      	lsls	r3, r3, #22
 8008938:	d402      	bmi.n	8008940 <_vfiprintf_r+0x204>
 800893a:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 800893c:	f7fd fa7e 	bl	8005e3c <__retarget_lock_release_recursive>
 8008940:	89bb      	ldrh	r3, [r7, #12]
 8008942:	065b      	lsls	r3, r3, #25
 8008944:	d500      	bpl.n	8008948 <_vfiprintf_r+0x20c>
 8008946:	e71e      	b.n	8008786 <_vfiprintf_r+0x4a>
 8008948:	980d      	ldr	r0, [sp, #52]	@ 0x34
 800894a:	e71e      	b.n	800878a <_vfiprintf_r+0x4e>
 800894c:	aa07      	add	r2, sp, #28
 800894e:	9200      	str	r2, [sp, #0]
 8008950:	0021      	movs	r1, r4
 8008952:	003a      	movs	r2, r7
 8008954:	4b06      	ldr	r3, [pc, #24]	@ (8008970 <_vfiprintf_r+0x234>)
 8008956:	9803      	ldr	r0, [sp, #12]
 8008958:	f7fc fcc0 	bl	80052dc <_printf_i>
 800895c:	e7e3      	b.n	8008926 <_vfiprintf_r+0x1ea>
 800895e:	46c0      	nop			@ (mov r8, r8)
 8008960:	0800a3f3 	.word	0x0800a3f3
 8008964:	0800a3f9 	.word	0x0800a3f9
 8008968:	0800a3fd 	.word	0x0800a3fd
 800896c:	08004d81 	.word	0x08004d81
 8008970:	08008717 	.word	0x08008717

08008974 <__svfiscanf_r>:
 8008974:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008976:	4cb1      	ldr	r4, [pc, #708]	@ (8008c3c <__svfiscanf_r+0x2c8>)
 8008978:	001e      	movs	r6, r3
 800897a:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
 800897c:	44a5      	add	sp, r4
 800897e:	0015      	movs	r5, r2
 8008980:	000c      	movs	r4, r1
 8008982:	9000      	str	r0, [sp, #0]
 8008984:	07db      	lsls	r3, r3, #31
 8008986:	d405      	bmi.n	8008994 <__svfiscanf_r+0x20>
 8008988:	898b      	ldrh	r3, [r1, #12]
 800898a:	059b      	lsls	r3, r3, #22
 800898c:	d402      	bmi.n	8008994 <__svfiscanf_r+0x20>
 800898e:	6d88      	ldr	r0, [r1, #88]	@ 0x58
 8008990:	f7fd fa53 	bl	8005e3a <__retarget_lock_acquire_recursive>
 8008994:	2300      	movs	r3, #0
 8008996:	22be      	movs	r2, #190	@ 0xbe
 8008998:	9346      	str	r3, [sp, #280]	@ 0x118
 800899a:	9347      	str	r3, [sp, #284]	@ 0x11c
 800899c:	ab03      	add	r3, sp, #12
 800899e:	9348      	str	r3, [sp, #288]	@ 0x120
 80089a0:	4ba7      	ldr	r3, [pc, #668]	@ (8008c40 <__svfiscanf_r+0x2cc>)
 80089a2:	0052      	lsls	r2, r2, #1
 80089a4:	a943      	add	r1, sp, #268	@ 0x10c
 80089a6:	508b      	str	r3, [r1, r2]
 80089a8:	4ba6      	ldr	r3, [pc, #664]	@ (8008c44 <__svfiscanf_r+0x2d0>)
 80089aa:	3204      	adds	r2, #4
 80089ac:	a943      	add	r1, sp, #268	@ 0x10c
 80089ae:	508b      	str	r3, [r1, r2]
 80089b0:	9602      	str	r6, [sp, #8]
 80089b2:	782e      	ldrb	r6, [r5, #0]
 80089b4:	2e00      	cmp	r6, #0
 80089b6:	d100      	bne.n	80089ba <__svfiscanf_r+0x46>
 80089b8:	e15d      	b.n	8008c76 <__svfiscanf_r+0x302>
 80089ba:	4ba3      	ldr	r3, [pc, #652]	@ (8008c48 <__svfiscanf_r+0x2d4>)
 80089bc:	2108      	movs	r1, #8
 80089be:	5d9a      	ldrb	r2, [r3, r6]
 80089c0:	9301      	str	r3, [sp, #4]
 80089c2:	2308      	movs	r3, #8
 80089c4:	1c6f      	adds	r7, r5, #1
 80089c6:	4013      	ands	r3, r2
 80089c8:	420a      	tst	r2, r1
 80089ca:	d01e      	beq.n	8008a0a <__svfiscanf_r+0x96>
 80089cc:	26c0      	movs	r6, #192	@ 0xc0
 80089ce:	000d      	movs	r5, r1
 80089d0:	0076      	lsls	r6, r6, #1
 80089d2:	6863      	ldr	r3, [r4, #4]
 80089d4:	2b00      	cmp	r3, #0
 80089d6:	dd10      	ble.n	80089fa <__svfiscanf_r+0x86>
 80089d8:	6823      	ldr	r3, [r4, #0]
 80089da:	9901      	ldr	r1, [sp, #4]
 80089dc:	781a      	ldrb	r2, [r3, #0]
 80089de:	5c8a      	ldrb	r2, [r1, r2]
 80089e0:	422a      	tst	r2, r5
 80089e2:	d101      	bne.n	80089e8 <__svfiscanf_r+0x74>
 80089e4:	003d      	movs	r5, r7
 80089e6:	e7e4      	b.n	80089b2 <__svfiscanf_r+0x3e>
 80089e8:	9a47      	ldr	r2, [sp, #284]	@ 0x11c
 80089ea:	3301      	adds	r3, #1
 80089ec:	3201      	adds	r2, #1
 80089ee:	9247      	str	r2, [sp, #284]	@ 0x11c
 80089f0:	6862      	ldr	r2, [r4, #4]
 80089f2:	6023      	str	r3, [r4, #0]
 80089f4:	3a01      	subs	r2, #1
 80089f6:	6062      	str	r2, [r4, #4]
 80089f8:	e7eb      	b.n	80089d2 <__svfiscanf_r+0x5e>
 80089fa:	ab43      	add	r3, sp, #268	@ 0x10c
 80089fc:	0021      	movs	r1, r4
 80089fe:	599b      	ldr	r3, [r3, r6]
 8008a00:	9800      	ldr	r0, [sp, #0]
 8008a02:	4798      	blx	r3
 8008a04:	2800      	cmp	r0, #0
 8008a06:	d0e7      	beq.n	80089d8 <__svfiscanf_r+0x64>
 8008a08:	e7ec      	b.n	80089e4 <__svfiscanf_r+0x70>
 8008a0a:	2e25      	cmp	r6, #37	@ 0x25
 8008a0c:	d163      	bne.n	8008ad6 <__svfiscanf_r+0x162>
 8008a0e:	9345      	str	r3, [sp, #276]	@ 0x114
 8008a10:	9343      	str	r3, [sp, #268]	@ 0x10c
 8008a12:	786b      	ldrb	r3, [r5, #1]
 8008a14:	2b2a      	cmp	r3, #42	@ 0x2a
 8008a16:	d102      	bne.n	8008a1e <__svfiscanf_r+0xaa>
 8008a18:	3b1a      	subs	r3, #26
 8008a1a:	9343      	str	r3, [sp, #268]	@ 0x10c
 8008a1c:	1caf      	adds	r7, r5, #2
 8008a1e:	003d      	movs	r5, r7
 8008a20:	220a      	movs	r2, #10
 8008a22:	7829      	ldrb	r1, [r5, #0]
 8008a24:	1c6f      	adds	r7, r5, #1
 8008a26:	000b      	movs	r3, r1
 8008a28:	3b30      	subs	r3, #48	@ 0x30
 8008a2a:	2b09      	cmp	r3, #9
 8008a2c:	d920      	bls.n	8008a70 <__svfiscanf_r+0xfc>
 8008a2e:	4b87      	ldr	r3, [pc, #540]	@ (8008c4c <__svfiscanf_r+0x2d8>)
 8008a30:	2203      	movs	r2, #3
 8008a32:	0018      	movs	r0, r3
 8008a34:	9301      	str	r3, [sp, #4]
 8008a36:	f7fd fa02 	bl	8005e3e <memchr>
 8008a3a:	2800      	cmp	r0, #0
 8008a3c:	d007      	beq.n	8008a4e <__svfiscanf_r+0xda>
 8008a3e:	9b01      	ldr	r3, [sp, #4]
 8008a40:	003d      	movs	r5, r7
 8008a42:	1ac0      	subs	r0, r0, r3
 8008a44:	2301      	movs	r3, #1
 8008a46:	4083      	lsls	r3, r0
 8008a48:	9a43      	ldr	r2, [sp, #268]	@ 0x10c
 8008a4a:	4313      	orrs	r3, r2
 8008a4c:	9343      	str	r3, [sp, #268]	@ 0x10c
 8008a4e:	782b      	ldrb	r3, [r5, #0]
 8008a50:	1c6f      	adds	r7, r5, #1
 8008a52:	2b78      	cmp	r3, #120	@ 0x78
 8008a54:	d807      	bhi.n	8008a66 <__svfiscanf_r+0xf2>
 8008a56:	2b57      	cmp	r3, #87	@ 0x57
 8008a58:	d811      	bhi.n	8008a7e <__svfiscanf_r+0x10a>
 8008a5a:	2b25      	cmp	r3, #37	@ 0x25
 8008a5c:	d03b      	beq.n	8008ad6 <__svfiscanf_r+0x162>
 8008a5e:	d835      	bhi.n	8008acc <__svfiscanf_r+0x158>
 8008a60:	2b00      	cmp	r3, #0
 8008a62:	d100      	bne.n	8008a66 <__svfiscanf_r+0xf2>
 8008a64:	e0b7      	b.n	8008bd6 <__svfiscanf_r+0x262>
 8008a66:	2303      	movs	r3, #3
 8008a68:	9349      	str	r3, [sp, #292]	@ 0x124
 8008a6a:	3307      	adds	r3, #7
 8008a6c:	9344      	str	r3, [sp, #272]	@ 0x110
 8008a6e:	e070      	b.n	8008b52 <__svfiscanf_r+0x1de>
 8008a70:	9b45      	ldr	r3, [sp, #276]	@ 0x114
 8008a72:	003d      	movs	r5, r7
 8008a74:	4353      	muls	r3, r2
 8008a76:	3b30      	subs	r3, #48	@ 0x30
 8008a78:	185b      	adds	r3, r3, r1
 8008a7a:	9345      	str	r3, [sp, #276]	@ 0x114
 8008a7c:	e7d1      	b.n	8008a22 <__svfiscanf_r+0xae>
 8008a7e:	0018      	movs	r0, r3
 8008a80:	3858      	subs	r0, #88	@ 0x58
 8008a82:	2820      	cmp	r0, #32
 8008a84:	d8ef      	bhi.n	8008a66 <__svfiscanf_r+0xf2>
 8008a86:	f7f7 fb51 	bl	800012c <__gnu_thumb1_case_shi>
 8008a8a:	0052      	.short	0x0052
 8008a8c:	ffeeffee 	.word	0xffeeffee
 8008a90:	ffee0084 	.word	0xffee0084
 8008a94:	ffeeffee 	.word	0xffeeffee
 8008a98:	ffeeffee 	.word	0xffeeffee
 8008a9c:	ffeeffee 	.word	0xffeeffee
 8008aa0:	0082008f 	.word	0x0082008f
 8008aa4:	00240024 	.word	0x00240024
 8008aa8:	ffee0024 	.word	0xffee0024
 8008aac:	ffee005c 	.word	0xffee005c
 8008ab0:	ffeeffee 	.word	0xffeeffee
 8008ab4:	0097ffee 	.word	0x0097ffee
 8008ab8:	004e0060 	.word	0x004e0060
 8008abc:	ffeeffee 	.word	0xffeeffee
 8008ac0:	ffee0095 	.word	0xffee0095
 8008ac4:	ffee0082 	.word	0xffee0082
 8008ac8:	0052ffee 	.word	0x0052ffee
 8008acc:	3b45      	subs	r3, #69	@ 0x45
 8008ace:	2b02      	cmp	r3, #2
 8008ad0:	d8c9      	bhi.n	8008a66 <__svfiscanf_r+0xf2>
 8008ad2:	2305      	movs	r3, #5
 8008ad4:	e03c      	b.n	8008b50 <__svfiscanf_r+0x1dc>
 8008ad6:	6863      	ldr	r3, [r4, #4]
 8008ad8:	2b00      	cmp	r3, #0
 8008ada:	dd0d      	ble.n	8008af8 <__svfiscanf_r+0x184>
 8008adc:	6823      	ldr	r3, [r4, #0]
 8008ade:	781a      	ldrb	r2, [r3, #0]
 8008ae0:	42b2      	cmp	r2, r6
 8008ae2:	d000      	beq.n	8008ae6 <__svfiscanf_r+0x172>
 8008ae4:	e0c7      	b.n	8008c76 <__svfiscanf_r+0x302>
 8008ae6:	3301      	adds	r3, #1
 8008ae8:	6862      	ldr	r2, [r4, #4]
 8008aea:	6023      	str	r3, [r4, #0]
 8008aec:	9b47      	ldr	r3, [sp, #284]	@ 0x11c
 8008aee:	3a01      	subs	r2, #1
 8008af0:	3301      	adds	r3, #1
 8008af2:	6062      	str	r2, [r4, #4]
 8008af4:	9347      	str	r3, [sp, #284]	@ 0x11c
 8008af6:	e775      	b.n	80089e4 <__svfiscanf_r+0x70>
 8008af8:	23c0      	movs	r3, #192	@ 0xc0
 8008afa:	aa43      	add	r2, sp, #268	@ 0x10c
 8008afc:	005b      	lsls	r3, r3, #1
 8008afe:	0021      	movs	r1, r4
 8008b00:	58d3      	ldr	r3, [r2, r3]
 8008b02:	9800      	ldr	r0, [sp, #0]
 8008b04:	4798      	blx	r3
 8008b06:	2800      	cmp	r0, #0
 8008b08:	d0e8      	beq.n	8008adc <__svfiscanf_r+0x168>
 8008b0a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8008b0c:	07db      	lsls	r3, r3, #31
 8008b0e:	d400      	bmi.n	8008b12 <__svfiscanf_r+0x19e>
 8008b10:	e0a9      	b.n	8008c66 <__svfiscanf_r+0x2f2>
 8008b12:	9846      	ldr	r0, [sp, #280]	@ 0x118
 8008b14:	2800      	cmp	r0, #0
 8008b16:	d067      	beq.n	8008be8 <__svfiscanf_r+0x274>
 8008b18:	89a3      	ldrh	r3, [r4, #12]
 8008b1a:	065b      	lsls	r3, r3, #25
 8008b1c:	d464      	bmi.n	8008be8 <__svfiscanf_r+0x274>
 8008b1e:	23a5      	movs	r3, #165	@ 0xa5
 8008b20:	009b      	lsls	r3, r3, #2
 8008b22:	449d      	add	sp, r3
 8008b24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008b26:	2220      	movs	r2, #32
 8008b28:	9943      	ldr	r1, [sp, #268]	@ 0x10c
 8008b2a:	430a      	orrs	r2, r1
 8008b2c:	9243      	str	r2, [sp, #268]	@ 0x10c
 8008b2e:	2280      	movs	r2, #128	@ 0x80
 8008b30:	9943      	ldr	r1, [sp, #268]	@ 0x10c
 8008b32:	0092      	lsls	r2, r2, #2
 8008b34:	430a      	orrs	r2, r1
 8008b36:	9243      	str	r2, [sp, #268]	@ 0x10c
 8008b38:	2210      	movs	r2, #16
 8008b3a:	9244      	str	r2, [sp, #272]	@ 0x110
 8008b3c:	2b6e      	cmp	r3, #110	@ 0x6e
 8008b3e:	d902      	bls.n	8008b46 <__svfiscanf_r+0x1d2>
 8008b40:	e005      	b.n	8008b4e <__svfiscanf_r+0x1da>
 8008b42:	2300      	movs	r3, #0
 8008b44:	9344      	str	r3, [sp, #272]	@ 0x110
 8008b46:	2303      	movs	r3, #3
 8008b48:	e002      	b.n	8008b50 <__svfiscanf_r+0x1dc>
 8008b4a:	2308      	movs	r3, #8
 8008b4c:	9344      	str	r3, [sp, #272]	@ 0x110
 8008b4e:	2304      	movs	r3, #4
 8008b50:	9349      	str	r3, [sp, #292]	@ 0x124
 8008b52:	6863      	ldr	r3, [r4, #4]
 8008b54:	2b00      	cmp	r3, #0
 8008b56:	dd4a      	ble.n	8008bee <__svfiscanf_r+0x27a>
 8008b58:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 8008b5a:	065b      	lsls	r3, r3, #25
 8008b5c:	d408      	bmi.n	8008b70 <__svfiscanf_r+0x1fc>
 8008b5e:	26c0      	movs	r6, #192	@ 0xc0
 8008b60:	2508      	movs	r5, #8
 8008b62:	0076      	lsls	r6, r6, #1
 8008b64:	6823      	ldr	r3, [r4, #0]
 8008b66:	4938      	ldr	r1, [pc, #224]	@ (8008c48 <__svfiscanf_r+0x2d4>)
 8008b68:	781a      	ldrb	r2, [r3, #0]
 8008b6a:	5c8a      	ldrb	r2, [r1, r2]
 8008b6c:	422a      	tst	r2, r5
 8008b6e:	d148      	bne.n	8008c02 <__svfiscanf_r+0x28e>
 8008b70:	9b49      	ldr	r3, [sp, #292]	@ 0x124
 8008b72:	2b02      	cmp	r3, #2
 8008b74:	dc58      	bgt.n	8008c28 <__svfiscanf_r+0x2b4>
 8008b76:	0022      	movs	r2, r4
 8008b78:	9800      	ldr	r0, [sp, #0]
 8008b7a:	ab02      	add	r3, sp, #8
 8008b7c:	a943      	add	r1, sp, #268	@ 0x10c
 8008b7e:	f000 f89b 	bl	8008cb8 <_scanf_chars>
 8008b82:	2801      	cmp	r0, #1
 8008b84:	d077      	beq.n	8008c76 <__svfiscanf_r+0x302>
 8008b86:	2802      	cmp	r0, #2
 8008b88:	d000      	beq.n	8008b8c <__svfiscanf_r+0x218>
 8008b8a:	e72b      	b.n	80089e4 <__svfiscanf_r+0x70>
 8008b8c:	e7bd      	b.n	8008b0a <__svfiscanf_r+0x196>
 8008b8e:	220a      	movs	r2, #10
 8008b90:	e7d3      	b.n	8008b3a <__svfiscanf_r+0x1c6>
 8008b92:	0039      	movs	r1, r7
 8008b94:	a803      	add	r0, sp, #12
 8008b96:	f000 fbc7 	bl	8009328 <__sccl>
 8008b9a:	2340      	movs	r3, #64	@ 0x40
 8008b9c:	9a43      	ldr	r2, [sp, #268]	@ 0x10c
 8008b9e:	0007      	movs	r7, r0
 8008ba0:	4313      	orrs	r3, r2
 8008ba2:	9343      	str	r3, [sp, #268]	@ 0x10c
 8008ba4:	2301      	movs	r3, #1
 8008ba6:	e7d3      	b.n	8008b50 <__svfiscanf_r+0x1dc>
 8008ba8:	2340      	movs	r3, #64	@ 0x40
 8008baa:	9a43      	ldr	r2, [sp, #268]	@ 0x10c
 8008bac:	4313      	orrs	r3, r2
 8008bae:	9343      	str	r3, [sp, #268]	@ 0x10c
 8008bb0:	2300      	movs	r3, #0
 8008bb2:	e7cd      	b.n	8008b50 <__svfiscanf_r+0x1dc>
 8008bb4:	2302      	movs	r3, #2
 8008bb6:	e7cb      	b.n	8008b50 <__svfiscanf_r+0x1dc>
 8008bb8:	9a43      	ldr	r2, [sp, #268]	@ 0x10c
 8008bba:	06d3      	lsls	r3, r2, #27
 8008bbc:	d500      	bpl.n	8008bc0 <__svfiscanf_r+0x24c>
 8008bbe:	e711      	b.n	80089e4 <__svfiscanf_r+0x70>
 8008bc0:	9b02      	ldr	r3, [sp, #8]
 8008bc2:	9947      	ldr	r1, [sp, #284]	@ 0x11c
 8008bc4:	1d18      	adds	r0, r3, #4
 8008bc6:	9002      	str	r0, [sp, #8]
 8008bc8:	681b      	ldr	r3, [r3, #0]
 8008bca:	07d5      	lsls	r5, r2, #31
 8008bcc:	d501      	bpl.n	8008bd2 <__svfiscanf_r+0x25e>
 8008bce:	8019      	strh	r1, [r3, #0]
 8008bd0:	e708      	b.n	80089e4 <__svfiscanf_r+0x70>
 8008bd2:	6019      	str	r1, [r3, #0]
 8008bd4:	e706      	b.n	80089e4 <__svfiscanf_r+0x70>
 8008bd6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8008bd8:	07db      	lsls	r3, r3, #31
 8008bda:	d405      	bmi.n	8008be8 <__svfiscanf_r+0x274>
 8008bdc:	89a3      	ldrh	r3, [r4, #12]
 8008bde:	059b      	lsls	r3, r3, #22
 8008be0:	d402      	bmi.n	8008be8 <__svfiscanf_r+0x274>
 8008be2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8008be4:	f7fd f92a 	bl	8005e3c <__retarget_lock_release_recursive>
 8008be8:	2001      	movs	r0, #1
 8008bea:	4240      	negs	r0, r0
 8008bec:	e797      	b.n	8008b1e <__svfiscanf_r+0x1aa>
 8008bee:	23c0      	movs	r3, #192	@ 0xc0
 8008bf0:	aa43      	add	r2, sp, #268	@ 0x10c
 8008bf2:	005b      	lsls	r3, r3, #1
 8008bf4:	0021      	movs	r1, r4
 8008bf6:	58d3      	ldr	r3, [r2, r3]
 8008bf8:	9800      	ldr	r0, [sp, #0]
 8008bfa:	4798      	blx	r3
 8008bfc:	2800      	cmp	r0, #0
 8008bfe:	d0ab      	beq.n	8008b58 <__svfiscanf_r+0x1e4>
 8008c00:	e783      	b.n	8008b0a <__svfiscanf_r+0x196>
 8008c02:	9a47      	ldr	r2, [sp, #284]	@ 0x11c
 8008c04:	3201      	adds	r2, #1
 8008c06:	9247      	str	r2, [sp, #284]	@ 0x11c
 8008c08:	6862      	ldr	r2, [r4, #4]
 8008c0a:	3a01      	subs	r2, #1
 8008c0c:	6062      	str	r2, [r4, #4]
 8008c0e:	2a00      	cmp	r2, #0
 8008c10:	dd02      	ble.n	8008c18 <__svfiscanf_r+0x2a4>
 8008c12:	3301      	adds	r3, #1
 8008c14:	6023      	str	r3, [r4, #0]
 8008c16:	e7a5      	b.n	8008b64 <__svfiscanf_r+0x1f0>
 8008c18:	ab43      	add	r3, sp, #268	@ 0x10c
 8008c1a:	0021      	movs	r1, r4
 8008c1c:	599b      	ldr	r3, [r3, r6]
 8008c1e:	9800      	ldr	r0, [sp, #0]
 8008c20:	4798      	blx	r3
 8008c22:	2800      	cmp	r0, #0
 8008c24:	d09e      	beq.n	8008b64 <__svfiscanf_r+0x1f0>
 8008c26:	e770      	b.n	8008b0a <__svfiscanf_r+0x196>
 8008c28:	2b04      	cmp	r3, #4
 8008c2a:	dc11      	bgt.n	8008c50 <__svfiscanf_r+0x2dc>
 8008c2c:	0022      	movs	r2, r4
 8008c2e:	9800      	ldr	r0, [sp, #0]
 8008c30:	ab02      	add	r3, sp, #8
 8008c32:	a943      	add	r1, sp, #268	@ 0x10c
 8008c34:	f000 f8a0 	bl	8008d78 <_scanf_i>
 8008c38:	e7a3      	b.n	8008b82 <__svfiscanf_r+0x20e>
 8008c3a:	46c0      	nop			@ (mov r8, r8)
 8008c3c:	fffffd6c 	.word	0xfffffd6c
 8008c40:	08009419 	.word	0x08009419
 8008c44:	0800923d 	.word	0x0800923d
 8008c48:	0800a611 	.word	0x0800a611
 8008c4c:	0800a3f9 	.word	0x0800a3f9
 8008c50:	4b0e      	ldr	r3, [pc, #56]	@ (8008c8c <__svfiscanf_r+0x318>)
 8008c52:	2b00      	cmp	r3, #0
 8008c54:	d100      	bne.n	8008c58 <__svfiscanf_r+0x2e4>
 8008c56:	e6c5      	b.n	80089e4 <__svfiscanf_r+0x70>
 8008c58:	0022      	movs	r2, r4
 8008c5a:	9800      	ldr	r0, [sp, #0]
 8008c5c:	ab02      	add	r3, sp, #8
 8008c5e:	a943      	add	r1, sp, #268	@ 0x10c
 8008c60:	f7fc fc48 	bl	80054f4 <_scanf_float>
 8008c64:	e78d      	b.n	8008b82 <__svfiscanf_r+0x20e>
 8008c66:	89a3      	ldrh	r3, [r4, #12]
 8008c68:	059b      	lsls	r3, r3, #22
 8008c6a:	d500      	bpl.n	8008c6e <__svfiscanf_r+0x2fa>
 8008c6c:	e751      	b.n	8008b12 <__svfiscanf_r+0x19e>
 8008c6e:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8008c70:	f7fd f8e4 	bl	8005e3c <__retarget_lock_release_recursive>
 8008c74:	e74d      	b.n	8008b12 <__svfiscanf_r+0x19e>
 8008c76:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8008c78:	07db      	lsls	r3, r3, #31
 8008c7a:	d405      	bmi.n	8008c88 <__svfiscanf_r+0x314>
 8008c7c:	89a3      	ldrh	r3, [r4, #12]
 8008c7e:	059b      	lsls	r3, r3, #22
 8008c80:	d402      	bmi.n	8008c88 <__svfiscanf_r+0x314>
 8008c82:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8008c84:	f7fd f8da 	bl	8005e3c <__retarget_lock_release_recursive>
 8008c88:	9846      	ldr	r0, [sp, #280]	@ 0x118
 8008c8a:	e748      	b.n	8008b1e <__svfiscanf_r+0x1aa>
 8008c8c:	080054f5 	.word	0x080054f5

08008c90 <_vfiscanf_r>:
 8008c90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008c92:	0004      	movs	r4, r0
 8008c94:	000d      	movs	r5, r1
 8008c96:	0016      	movs	r6, r2
 8008c98:	001f      	movs	r7, r3
 8008c9a:	2800      	cmp	r0, #0
 8008c9c:	d004      	beq.n	8008ca8 <_vfiscanf_r+0x18>
 8008c9e:	6a03      	ldr	r3, [r0, #32]
 8008ca0:	2b00      	cmp	r3, #0
 8008ca2:	d101      	bne.n	8008ca8 <_vfiscanf_r+0x18>
 8008ca4:	f7fc fec2 	bl	8005a2c <__sinit>
 8008ca8:	003b      	movs	r3, r7
 8008caa:	0032      	movs	r2, r6
 8008cac:	0029      	movs	r1, r5
 8008cae:	0020      	movs	r0, r4
 8008cb0:	f7ff fe60 	bl	8008974 <__svfiscanf_r>
 8008cb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08008cb8 <_scanf_chars>:
 8008cb8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008cba:	0015      	movs	r5, r2
 8008cbc:	688a      	ldr	r2, [r1, #8]
 8008cbe:	000c      	movs	r4, r1
 8008cc0:	9001      	str	r0, [sp, #4]
 8008cc2:	2a00      	cmp	r2, #0
 8008cc4:	d104      	bne.n	8008cd0 <_scanf_chars+0x18>
 8008cc6:	698a      	ldr	r2, [r1, #24]
 8008cc8:	2a00      	cmp	r2, #0
 8008cca:	d117      	bne.n	8008cfc <_scanf_chars+0x44>
 8008ccc:	3201      	adds	r2, #1
 8008cce:	60a2      	str	r2, [r4, #8]
 8008cd0:	6822      	ldr	r2, [r4, #0]
 8008cd2:	06d2      	lsls	r2, r2, #27
 8008cd4:	d403      	bmi.n	8008cde <_scanf_chars+0x26>
 8008cd6:	681a      	ldr	r2, [r3, #0]
 8008cd8:	1d11      	adds	r1, r2, #4
 8008cda:	6019      	str	r1, [r3, #0]
 8008cdc:	6817      	ldr	r7, [r2, #0]
 8008cde:	2600      	movs	r6, #0
 8008ce0:	69a0      	ldr	r0, [r4, #24]
 8008ce2:	2800      	cmp	r0, #0
 8008ce4:	d016      	beq.n	8008d14 <_scanf_chars+0x5c>
 8008ce6:	2801      	cmp	r0, #1
 8008ce8:	d10b      	bne.n	8008d02 <_scanf_chars+0x4a>
 8008cea:	682b      	ldr	r3, [r5, #0]
 8008cec:	6962      	ldr	r2, [r4, #20]
 8008cee:	781b      	ldrb	r3, [r3, #0]
 8008cf0:	5cd3      	ldrb	r3, [r2, r3]
 8008cf2:	2b00      	cmp	r3, #0
 8008cf4:	d10e      	bne.n	8008d14 <_scanf_chars+0x5c>
 8008cf6:	2e00      	cmp	r6, #0
 8008cf8:	d03b      	beq.n	8008d72 <_scanf_chars+0xba>
 8008cfa:	e029      	b.n	8008d50 <_scanf_chars+0x98>
 8008cfc:	2201      	movs	r2, #1
 8008cfe:	4252      	negs	r2, r2
 8008d00:	e7e5      	b.n	8008cce <_scanf_chars+0x16>
 8008d02:	2802      	cmp	r0, #2
 8008d04:	d124      	bne.n	8008d50 <_scanf_chars+0x98>
 8008d06:	682b      	ldr	r3, [r5, #0]
 8008d08:	4a1a      	ldr	r2, [pc, #104]	@ (8008d74 <_scanf_chars+0xbc>)
 8008d0a:	781b      	ldrb	r3, [r3, #0]
 8008d0c:	5cd3      	ldrb	r3, [r2, r3]
 8008d0e:	2208      	movs	r2, #8
 8008d10:	4213      	tst	r3, r2
 8008d12:	d11d      	bne.n	8008d50 <_scanf_chars+0x98>
 8008d14:	2210      	movs	r2, #16
 8008d16:	6823      	ldr	r3, [r4, #0]
 8008d18:	3601      	adds	r6, #1
 8008d1a:	4213      	tst	r3, r2
 8008d1c:	d103      	bne.n	8008d26 <_scanf_chars+0x6e>
 8008d1e:	682b      	ldr	r3, [r5, #0]
 8008d20:	781b      	ldrb	r3, [r3, #0]
 8008d22:	703b      	strb	r3, [r7, #0]
 8008d24:	3701      	adds	r7, #1
 8008d26:	682a      	ldr	r2, [r5, #0]
 8008d28:	686b      	ldr	r3, [r5, #4]
 8008d2a:	3201      	adds	r2, #1
 8008d2c:	602a      	str	r2, [r5, #0]
 8008d2e:	68a2      	ldr	r2, [r4, #8]
 8008d30:	3b01      	subs	r3, #1
 8008d32:	3a01      	subs	r2, #1
 8008d34:	606b      	str	r3, [r5, #4]
 8008d36:	60a2      	str	r2, [r4, #8]
 8008d38:	2a00      	cmp	r2, #0
 8008d3a:	d009      	beq.n	8008d50 <_scanf_chars+0x98>
 8008d3c:	2b00      	cmp	r3, #0
 8008d3e:	dccf      	bgt.n	8008ce0 <_scanf_chars+0x28>
 8008d40:	23c0      	movs	r3, #192	@ 0xc0
 8008d42:	005b      	lsls	r3, r3, #1
 8008d44:	0029      	movs	r1, r5
 8008d46:	58e3      	ldr	r3, [r4, r3]
 8008d48:	9801      	ldr	r0, [sp, #4]
 8008d4a:	4798      	blx	r3
 8008d4c:	2800      	cmp	r0, #0
 8008d4e:	d0c7      	beq.n	8008ce0 <_scanf_chars+0x28>
 8008d50:	6822      	ldr	r2, [r4, #0]
 8008d52:	2310      	movs	r3, #16
 8008d54:	0011      	movs	r1, r2
 8008d56:	4019      	ands	r1, r3
 8008d58:	421a      	tst	r2, r3
 8008d5a:	d106      	bne.n	8008d6a <_scanf_chars+0xb2>
 8008d5c:	68e3      	ldr	r3, [r4, #12]
 8008d5e:	3301      	adds	r3, #1
 8008d60:	60e3      	str	r3, [r4, #12]
 8008d62:	69a3      	ldr	r3, [r4, #24]
 8008d64:	2b00      	cmp	r3, #0
 8008d66:	d000      	beq.n	8008d6a <_scanf_chars+0xb2>
 8008d68:	7039      	strb	r1, [r7, #0]
 8008d6a:	2000      	movs	r0, #0
 8008d6c:	6923      	ldr	r3, [r4, #16]
 8008d6e:	199b      	adds	r3, r3, r6
 8008d70:	6123      	str	r3, [r4, #16]
 8008d72:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008d74:	0800a611 	.word	0x0800a611

08008d78 <_scanf_i>:
 8008d78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008d7a:	b08b      	sub	sp, #44	@ 0x2c
 8008d7c:	9301      	str	r3, [sp, #4]
 8008d7e:	4b78      	ldr	r3, [pc, #480]	@ (8008f60 <_scanf_i+0x1e8>)
 8008d80:	0016      	movs	r6, r2
 8008d82:	9004      	str	r0, [sp, #16]
 8008d84:	aa07      	add	r2, sp, #28
 8008d86:	cba1      	ldmia	r3!, {r0, r5, r7}
 8008d88:	c2a1      	stmia	r2!, {r0, r5, r7}
 8008d8a:	4a76      	ldr	r2, [pc, #472]	@ (8008f64 <_scanf_i+0x1ec>)
 8008d8c:	698b      	ldr	r3, [r1, #24]
 8008d8e:	000c      	movs	r4, r1
 8008d90:	9205      	str	r2, [sp, #20]
 8008d92:	2b03      	cmp	r3, #3
 8008d94:	d101      	bne.n	8008d9a <_scanf_i+0x22>
 8008d96:	4b74      	ldr	r3, [pc, #464]	@ (8008f68 <_scanf_i+0x1f0>)
 8008d98:	9305      	str	r3, [sp, #20]
 8008d9a:	22ae      	movs	r2, #174	@ 0xae
 8008d9c:	2000      	movs	r0, #0
 8008d9e:	68a3      	ldr	r3, [r4, #8]
 8008da0:	0052      	lsls	r2, r2, #1
 8008da2:	1e59      	subs	r1, r3, #1
 8008da4:	9003      	str	r0, [sp, #12]
 8008da6:	4291      	cmp	r1, r2
 8008da8:	d905      	bls.n	8008db6 <_scanf_i+0x3e>
 8008daa:	3b5e      	subs	r3, #94	@ 0x5e
 8008dac:	3bff      	subs	r3, #255	@ 0xff
 8008dae:	9303      	str	r3, [sp, #12]
 8008db0:	235e      	movs	r3, #94	@ 0x5e
 8008db2:	33ff      	adds	r3, #255	@ 0xff
 8008db4:	60a3      	str	r3, [r4, #8]
 8008db6:	0023      	movs	r3, r4
 8008db8:	331c      	adds	r3, #28
 8008dba:	9300      	str	r3, [sp, #0]
 8008dbc:	23d0      	movs	r3, #208	@ 0xd0
 8008dbe:	2700      	movs	r7, #0
 8008dc0:	6822      	ldr	r2, [r4, #0]
 8008dc2:	011b      	lsls	r3, r3, #4
 8008dc4:	4313      	orrs	r3, r2
 8008dc6:	6023      	str	r3, [r4, #0]
 8008dc8:	9b00      	ldr	r3, [sp, #0]
 8008dca:	9302      	str	r3, [sp, #8]
 8008dcc:	6833      	ldr	r3, [r6, #0]
 8008dce:	a807      	add	r0, sp, #28
 8008dd0:	7819      	ldrb	r1, [r3, #0]
 8008dd2:	00bb      	lsls	r3, r7, #2
 8008dd4:	2202      	movs	r2, #2
 8008dd6:	5818      	ldr	r0, [r3, r0]
 8008dd8:	f7fd f831 	bl	8005e3e <memchr>
 8008ddc:	2800      	cmp	r0, #0
 8008dde:	d029      	beq.n	8008e34 <_scanf_i+0xbc>
 8008de0:	2f01      	cmp	r7, #1
 8008de2:	d15e      	bne.n	8008ea2 <_scanf_i+0x12a>
 8008de4:	6863      	ldr	r3, [r4, #4]
 8008de6:	2b00      	cmp	r3, #0
 8008de8:	d106      	bne.n	8008df8 <_scanf_i+0x80>
 8008dea:	3308      	adds	r3, #8
 8008dec:	6822      	ldr	r2, [r4, #0]
 8008dee:	6063      	str	r3, [r4, #4]
 8008df0:	33f9      	adds	r3, #249	@ 0xf9
 8008df2:	33ff      	adds	r3, #255	@ 0xff
 8008df4:	4313      	orrs	r3, r2
 8008df6:	6023      	str	r3, [r4, #0]
 8008df8:	6823      	ldr	r3, [r4, #0]
 8008dfa:	4a5c      	ldr	r2, [pc, #368]	@ (8008f6c <_scanf_i+0x1f4>)
 8008dfc:	4013      	ands	r3, r2
 8008dfe:	6023      	str	r3, [r4, #0]
 8008e00:	68a3      	ldr	r3, [r4, #8]
 8008e02:	1e5a      	subs	r2, r3, #1
 8008e04:	60a2      	str	r2, [r4, #8]
 8008e06:	2b00      	cmp	r3, #0
 8008e08:	d014      	beq.n	8008e34 <_scanf_i+0xbc>
 8008e0a:	6833      	ldr	r3, [r6, #0]
 8008e0c:	1c5a      	adds	r2, r3, #1
 8008e0e:	6032      	str	r2, [r6, #0]
 8008e10:	781b      	ldrb	r3, [r3, #0]
 8008e12:	9a02      	ldr	r2, [sp, #8]
 8008e14:	7013      	strb	r3, [r2, #0]
 8008e16:	6873      	ldr	r3, [r6, #4]
 8008e18:	1c55      	adds	r5, r2, #1
 8008e1a:	3b01      	subs	r3, #1
 8008e1c:	6073      	str	r3, [r6, #4]
 8008e1e:	2b00      	cmp	r3, #0
 8008e20:	dc07      	bgt.n	8008e32 <_scanf_i+0xba>
 8008e22:	23c0      	movs	r3, #192	@ 0xc0
 8008e24:	005b      	lsls	r3, r3, #1
 8008e26:	0031      	movs	r1, r6
 8008e28:	58e3      	ldr	r3, [r4, r3]
 8008e2a:	9804      	ldr	r0, [sp, #16]
 8008e2c:	4798      	blx	r3
 8008e2e:	2800      	cmp	r0, #0
 8008e30:	d17e      	bne.n	8008f30 <_scanf_i+0x1b8>
 8008e32:	9502      	str	r5, [sp, #8]
 8008e34:	3701      	adds	r7, #1
 8008e36:	2f03      	cmp	r7, #3
 8008e38:	d1c8      	bne.n	8008dcc <_scanf_i+0x54>
 8008e3a:	6863      	ldr	r3, [r4, #4]
 8008e3c:	2b00      	cmp	r3, #0
 8008e3e:	d101      	bne.n	8008e44 <_scanf_i+0xcc>
 8008e40:	330a      	adds	r3, #10
 8008e42:	6063      	str	r3, [r4, #4]
 8008e44:	2700      	movs	r7, #0
 8008e46:	6863      	ldr	r3, [r4, #4]
 8008e48:	4949      	ldr	r1, [pc, #292]	@ (8008f70 <_scanf_i+0x1f8>)
 8008e4a:	6960      	ldr	r0, [r4, #20]
 8008e4c:	1ac9      	subs	r1, r1, r3
 8008e4e:	f000 fa6b 	bl	8009328 <__sccl>
 8008e52:	9d02      	ldr	r5, [sp, #8]
 8008e54:	68a3      	ldr	r3, [r4, #8]
 8008e56:	6820      	ldr	r0, [r4, #0]
 8008e58:	9302      	str	r3, [sp, #8]
 8008e5a:	2b00      	cmp	r3, #0
 8008e5c:	d03f      	beq.n	8008ede <_scanf_i+0x166>
 8008e5e:	6831      	ldr	r1, [r6, #0]
 8008e60:	6963      	ldr	r3, [r4, #20]
 8008e62:	780a      	ldrb	r2, [r1, #0]
 8008e64:	5c9b      	ldrb	r3, [r3, r2]
 8008e66:	2b00      	cmp	r3, #0
 8008e68:	d039      	beq.n	8008ede <_scanf_i+0x166>
 8008e6a:	2a30      	cmp	r2, #48	@ 0x30
 8008e6c:	d128      	bne.n	8008ec0 <_scanf_i+0x148>
 8008e6e:	2380      	movs	r3, #128	@ 0x80
 8008e70:	011b      	lsls	r3, r3, #4
 8008e72:	4218      	tst	r0, r3
 8008e74:	d024      	beq.n	8008ec0 <_scanf_i+0x148>
 8008e76:	9b03      	ldr	r3, [sp, #12]
 8008e78:	3701      	adds	r7, #1
 8008e7a:	2b00      	cmp	r3, #0
 8008e7c:	d005      	beq.n	8008e8a <_scanf_i+0x112>
 8008e7e:	001a      	movs	r2, r3
 8008e80:	9b02      	ldr	r3, [sp, #8]
 8008e82:	3a01      	subs	r2, #1
 8008e84:	3301      	adds	r3, #1
 8008e86:	9203      	str	r2, [sp, #12]
 8008e88:	60a3      	str	r3, [r4, #8]
 8008e8a:	6873      	ldr	r3, [r6, #4]
 8008e8c:	3b01      	subs	r3, #1
 8008e8e:	6073      	str	r3, [r6, #4]
 8008e90:	2b00      	cmp	r3, #0
 8008e92:	dd1c      	ble.n	8008ece <_scanf_i+0x156>
 8008e94:	6833      	ldr	r3, [r6, #0]
 8008e96:	3301      	adds	r3, #1
 8008e98:	6033      	str	r3, [r6, #0]
 8008e9a:	68a3      	ldr	r3, [r4, #8]
 8008e9c:	3b01      	subs	r3, #1
 8008e9e:	60a3      	str	r3, [r4, #8]
 8008ea0:	e7d8      	b.n	8008e54 <_scanf_i+0xdc>
 8008ea2:	2f02      	cmp	r7, #2
 8008ea4:	d1ac      	bne.n	8008e00 <_scanf_i+0x88>
 8008ea6:	23c0      	movs	r3, #192	@ 0xc0
 8008ea8:	2180      	movs	r1, #128	@ 0x80
 8008eaa:	6822      	ldr	r2, [r4, #0]
 8008eac:	00db      	lsls	r3, r3, #3
 8008eae:	4013      	ands	r3, r2
 8008eb0:	0089      	lsls	r1, r1, #2
 8008eb2:	428b      	cmp	r3, r1
 8008eb4:	d1c1      	bne.n	8008e3a <_scanf_i+0xc2>
 8008eb6:	2310      	movs	r3, #16
 8008eb8:	6063      	str	r3, [r4, #4]
 8008eba:	33f0      	adds	r3, #240	@ 0xf0
 8008ebc:	4313      	orrs	r3, r2
 8008ebe:	e79e      	b.n	8008dfe <_scanf_i+0x86>
 8008ec0:	4b2c      	ldr	r3, [pc, #176]	@ (8008f74 <_scanf_i+0x1fc>)
 8008ec2:	4003      	ands	r3, r0
 8008ec4:	6023      	str	r3, [r4, #0]
 8008ec6:	780b      	ldrb	r3, [r1, #0]
 8008ec8:	702b      	strb	r3, [r5, #0]
 8008eca:	3501      	adds	r5, #1
 8008ecc:	e7dd      	b.n	8008e8a <_scanf_i+0x112>
 8008ece:	23c0      	movs	r3, #192	@ 0xc0
 8008ed0:	005b      	lsls	r3, r3, #1
 8008ed2:	0031      	movs	r1, r6
 8008ed4:	58e3      	ldr	r3, [r4, r3]
 8008ed6:	9804      	ldr	r0, [sp, #16]
 8008ed8:	4798      	blx	r3
 8008eda:	2800      	cmp	r0, #0
 8008edc:	d0dd      	beq.n	8008e9a <_scanf_i+0x122>
 8008ede:	6823      	ldr	r3, [r4, #0]
 8008ee0:	05db      	lsls	r3, r3, #23
 8008ee2:	d50e      	bpl.n	8008f02 <_scanf_i+0x18a>
 8008ee4:	9b00      	ldr	r3, [sp, #0]
 8008ee6:	429d      	cmp	r5, r3
 8008ee8:	d907      	bls.n	8008efa <_scanf_i+0x182>
 8008eea:	23be      	movs	r3, #190	@ 0xbe
 8008eec:	3d01      	subs	r5, #1
 8008eee:	005b      	lsls	r3, r3, #1
 8008ef0:	0032      	movs	r2, r6
 8008ef2:	7829      	ldrb	r1, [r5, #0]
 8008ef4:	58e3      	ldr	r3, [r4, r3]
 8008ef6:	9804      	ldr	r0, [sp, #16]
 8008ef8:	4798      	blx	r3
 8008efa:	9b00      	ldr	r3, [sp, #0]
 8008efc:	2001      	movs	r0, #1
 8008efe:	429d      	cmp	r5, r3
 8008f00:	d029      	beq.n	8008f56 <_scanf_i+0x1de>
 8008f02:	6821      	ldr	r1, [r4, #0]
 8008f04:	2310      	movs	r3, #16
 8008f06:	000a      	movs	r2, r1
 8008f08:	401a      	ands	r2, r3
 8008f0a:	4219      	tst	r1, r3
 8008f0c:	d11c      	bne.n	8008f48 <_scanf_i+0x1d0>
 8008f0e:	702a      	strb	r2, [r5, #0]
 8008f10:	6863      	ldr	r3, [r4, #4]
 8008f12:	9900      	ldr	r1, [sp, #0]
 8008f14:	9804      	ldr	r0, [sp, #16]
 8008f16:	9e05      	ldr	r6, [sp, #20]
 8008f18:	47b0      	blx	r6
 8008f1a:	9b01      	ldr	r3, [sp, #4]
 8008f1c:	6822      	ldr	r2, [r4, #0]
 8008f1e:	681b      	ldr	r3, [r3, #0]
 8008f20:	0691      	lsls	r1, r2, #26
 8008f22:	d507      	bpl.n	8008f34 <_scanf_i+0x1bc>
 8008f24:	9901      	ldr	r1, [sp, #4]
 8008f26:	1d1a      	adds	r2, r3, #4
 8008f28:	600a      	str	r2, [r1, #0]
 8008f2a:	681b      	ldr	r3, [r3, #0]
 8008f2c:	6018      	str	r0, [r3, #0]
 8008f2e:	e008      	b.n	8008f42 <_scanf_i+0x1ca>
 8008f30:	2700      	movs	r7, #0
 8008f32:	e7d4      	b.n	8008ede <_scanf_i+0x166>
 8008f34:	1d19      	adds	r1, r3, #4
 8008f36:	07d6      	lsls	r6, r2, #31
 8008f38:	d50f      	bpl.n	8008f5a <_scanf_i+0x1e2>
 8008f3a:	9a01      	ldr	r2, [sp, #4]
 8008f3c:	6011      	str	r1, [r2, #0]
 8008f3e:	681b      	ldr	r3, [r3, #0]
 8008f40:	8018      	strh	r0, [r3, #0]
 8008f42:	68e3      	ldr	r3, [r4, #12]
 8008f44:	3301      	adds	r3, #1
 8008f46:	60e3      	str	r3, [r4, #12]
 8008f48:	2000      	movs	r0, #0
 8008f4a:	9b00      	ldr	r3, [sp, #0]
 8008f4c:	1aed      	subs	r5, r5, r3
 8008f4e:	6923      	ldr	r3, [r4, #16]
 8008f50:	19ed      	adds	r5, r5, r7
 8008f52:	195b      	adds	r3, r3, r5
 8008f54:	6123      	str	r3, [r4, #16]
 8008f56:	b00b      	add	sp, #44	@ 0x2c
 8008f58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008f5a:	9a01      	ldr	r2, [sp, #4]
 8008f5c:	6011      	str	r1, [r2, #0]
 8008f5e:	e7e4      	b.n	8008f2a <_scanf_i+0x1b2>
 8008f60:	0800a270 	.word	0x0800a270
 8008f64:	0800a009 	.word	0x0800a009
 8008f68:	08008429 	.word	0x08008429
 8008f6c:	fffffaff 	.word	0xfffffaff
 8008f70:	0800a414 	.word	0x0800a414
 8008f74:	fffff6ff 	.word	0xfffff6ff

08008f78 <__sflush_r>:
 8008f78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008f7a:	220c      	movs	r2, #12
 8008f7c:	5e8b      	ldrsh	r3, [r1, r2]
 8008f7e:	0005      	movs	r5, r0
 8008f80:	000c      	movs	r4, r1
 8008f82:	071a      	lsls	r2, r3, #28
 8008f84:	d456      	bmi.n	8009034 <__sflush_r+0xbc>
 8008f86:	684a      	ldr	r2, [r1, #4]
 8008f88:	2a00      	cmp	r2, #0
 8008f8a:	dc02      	bgt.n	8008f92 <__sflush_r+0x1a>
 8008f8c:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 8008f8e:	2a00      	cmp	r2, #0
 8008f90:	dd4e      	ble.n	8009030 <__sflush_r+0xb8>
 8008f92:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8008f94:	2f00      	cmp	r7, #0
 8008f96:	d04b      	beq.n	8009030 <__sflush_r+0xb8>
 8008f98:	2200      	movs	r2, #0
 8008f9a:	2080      	movs	r0, #128	@ 0x80
 8008f9c:	682e      	ldr	r6, [r5, #0]
 8008f9e:	602a      	str	r2, [r5, #0]
 8008fa0:	001a      	movs	r2, r3
 8008fa2:	0140      	lsls	r0, r0, #5
 8008fa4:	6a21      	ldr	r1, [r4, #32]
 8008fa6:	4002      	ands	r2, r0
 8008fa8:	4203      	tst	r3, r0
 8008faa:	d033      	beq.n	8009014 <__sflush_r+0x9c>
 8008fac:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8008fae:	89a3      	ldrh	r3, [r4, #12]
 8008fb0:	075b      	lsls	r3, r3, #29
 8008fb2:	d506      	bpl.n	8008fc2 <__sflush_r+0x4a>
 8008fb4:	6863      	ldr	r3, [r4, #4]
 8008fb6:	1ad2      	subs	r2, r2, r3
 8008fb8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8008fba:	2b00      	cmp	r3, #0
 8008fbc:	d001      	beq.n	8008fc2 <__sflush_r+0x4a>
 8008fbe:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008fc0:	1ad2      	subs	r2, r2, r3
 8008fc2:	2300      	movs	r3, #0
 8008fc4:	0028      	movs	r0, r5
 8008fc6:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8008fc8:	6a21      	ldr	r1, [r4, #32]
 8008fca:	47b8      	blx	r7
 8008fcc:	89a2      	ldrh	r2, [r4, #12]
 8008fce:	1c43      	adds	r3, r0, #1
 8008fd0:	d106      	bne.n	8008fe0 <__sflush_r+0x68>
 8008fd2:	6829      	ldr	r1, [r5, #0]
 8008fd4:	291d      	cmp	r1, #29
 8008fd6:	d846      	bhi.n	8009066 <__sflush_r+0xee>
 8008fd8:	4b29      	ldr	r3, [pc, #164]	@ (8009080 <__sflush_r+0x108>)
 8008fda:	40cb      	lsrs	r3, r1
 8008fdc:	07db      	lsls	r3, r3, #31
 8008fde:	d542      	bpl.n	8009066 <__sflush_r+0xee>
 8008fe0:	2300      	movs	r3, #0
 8008fe2:	6063      	str	r3, [r4, #4]
 8008fe4:	6923      	ldr	r3, [r4, #16]
 8008fe6:	6023      	str	r3, [r4, #0]
 8008fe8:	04d2      	lsls	r2, r2, #19
 8008fea:	d505      	bpl.n	8008ff8 <__sflush_r+0x80>
 8008fec:	1c43      	adds	r3, r0, #1
 8008fee:	d102      	bne.n	8008ff6 <__sflush_r+0x7e>
 8008ff0:	682b      	ldr	r3, [r5, #0]
 8008ff2:	2b00      	cmp	r3, #0
 8008ff4:	d100      	bne.n	8008ff8 <__sflush_r+0x80>
 8008ff6:	6560      	str	r0, [r4, #84]	@ 0x54
 8008ff8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8008ffa:	602e      	str	r6, [r5, #0]
 8008ffc:	2900      	cmp	r1, #0
 8008ffe:	d017      	beq.n	8009030 <__sflush_r+0xb8>
 8009000:	0023      	movs	r3, r4
 8009002:	3344      	adds	r3, #68	@ 0x44
 8009004:	4299      	cmp	r1, r3
 8009006:	d002      	beq.n	800900e <__sflush_r+0x96>
 8009008:	0028      	movs	r0, r5
 800900a:	f7fd fd9d 	bl	8006b48 <_free_r>
 800900e:	2300      	movs	r3, #0
 8009010:	6363      	str	r3, [r4, #52]	@ 0x34
 8009012:	e00d      	b.n	8009030 <__sflush_r+0xb8>
 8009014:	2301      	movs	r3, #1
 8009016:	0028      	movs	r0, r5
 8009018:	47b8      	blx	r7
 800901a:	0002      	movs	r2, r0
 800901c:	1c43      	adds	r3, r0, #1
 800901e:	d1c6      	bne.n	8008fae <__sflush_r+0x36>
 8009020:	682b      	ldr	r3, [r5, #0]
 8009022:	2b00      	cmp	r3, #0
 8009024:	d0c3      	beq.n	8008fae <__sflush_r+0x36>
 8009026:	2b1d      	cmp	r3, #29
 8009028:	d001      	beq.n	800902e <__sflush_r+0xb6>
 800902a:	2b16      	cmp	r3, #22
 800902c:	d11a      	bne.n	8009064 <__sflush_r+0xec>
 800902e:	602e      	str	r6, [r5, #0]
 8009030:	2000      	movs	r0, #0
 8009032:	e01e      	b.n	8009072 <__sflush_r+0xfa>
 8009034:	690e      	ldr	r6, [r1, #16]
 8009036:	2e00      	cmp	r6, #0
 8009038:	d0fa      	beq.n	8009030 <__sflush_r+0xb8>
 800903a:	680f      	ldr	r7, [r1, #0]
 800903c:	600e      	str	r6, [r1, #0]
 800903e:	1bba      	subs	r2, r7, r6
 8009040:	9201      	str	r2, [sp, #4]
 8009042:	2200      	movs	r2, #0
 8009044:	079b      	lsls	r3, r3, #30
 8009046:	d100      	bne.n	800904a <__sflush_r+0xd2>
 8009048:	694a      	ldr	r2, [r1, #20]
 800904a:	60a2      	str	r2, [r4, #8]
 800904c:	9b01      	ldr	r3, [sp, #4]
 800904e:	2b00      	cmp	r3, #0
 8009050:	ddee      	ble.n	8009030 <__sflush_r+0xb8>
 8009052:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8009054:	0032      	movs	r2, r6
 8009056:	001f      	movs	r7, r3
 8009058:	0028      	movs	r0, r5
 800905a:	9b01      	ldr	r3, [sp, #4]
 800905c:	6a21      	ldr	r1, [r4, #32]
 800905e:	47b8      	blx	r7
 8009060:	2800      	cmp	r0, #0
 8009062:	dc07      	bgt.n	8009074 <__sflush_r+0xfc>
 8009064:	89a2      	ldrh	r2, [r4, #12]
 8009066:	2340      	movs	r3, #64	@ 0x40
 8009068:	2001      	movs	r0, #1
 800906a:	4313      	orrs	r3, r2
 800906c:	b21b      	sxth	r3, r3
 800906e:	81a3      	strh	r3, [r4, #12]
 8009070:	4240      	negs	r0, r0
 8009072:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8009074:	9b01      	ldr	r3, [sp, #4]
 8009076:	1836      	adds	r6, r6, r0
 8009078:	1a1b      	subs	r3, r3, r0
 800907a:	9301      	str	r3, [sp, #4]
 800907c:	e7e6      	b.n	800904c <__sflush_r+0xd4>
 800907e:	46c0      	nop			@ (mov r8, r8)
 8009080:	20400001 	.word	0x20400001

08009084 <_fflush_r>:
 8009084:	690b      	ldr	r3, [r1, #16]
 8009086:	b570      	push	{r4, r5, r6, lr}
 8009088:	0005      	movs	r5, r0
 800908a:	000c      	movs	r4, r1
 800908c:	2b00      	cmp	r3, #0
 800908e:	d102      	bne.n	8009096 <_fflush_r+0x12>
 8009090:	2500      	movs	r5, #0
 8009092:	0028      	movs	r0, r5
 8009094:	bd70      	pop	{r4, r5, r6, pc}
 8009096:	2800      	cmp	r0, #0
 8009098:	d004      	beq.n	80090a4 <_fflush_r+0x20>
 800909a:	6a03      	ldr	r3, [r0, #32]
 800909c:	2b00      	cmp	r3, #0
 800909e:	d101      	bne.n	80090a4 <_fflush_r+0x20>
 80090a0:	f7fc fcc4 	bl	8005a2c <__sinit>
 80090a4:	220c      	movs	r2, #12
 80090a6:	5ea3      	ldrsh	r3, [r4, r2]
 80090a8:	2b00      	cmp	r3, #0
 80090aa:	d0f1      	beq.n	8009090 <_fflush_r+0xc>
 80090ac:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80090ae:	07d2      	lsls	r2, r2, #31
 80090b0:	d404      	bmi.n	80090bc <_fflush_r+0x38>
 80090b2:	059b      	lsls	r3, r3, #22
 80090b4:	d402      	bmi.n	80090bc <_fflush_r+0x38>
 80090b6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80090b8:	f7fc febf 	bl	8005e3a <__retarget_lock_acquire_recursive>
 80090bc:	0028      	movs	r0, r5
 80090be:	0021      	movs	r1, r4
 80090c0:	f7ff ff5a 	bl	8008f78 <__sflush_r>
 80090c4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80090c6:	0005      	movs	r5, r0
 80090c8:	07db      	lsls	r3, r3, #31
 80090ca:	d4e2      	bmi.n	8009092 <_fflush_r+0xe>
 80090cc:	89a3      	ldrh	r3, [r4, #12]
 80090ce:	059b      	lsls	r3, r3, #22
 80090d0:	d4df      	bmi.n	8009092 <_fflush_r+0xe>
 80090d2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80090d4:	f7fc feb2 	bl	8005e3c <__retarget_lock_release_recursive>
 80090d8:	e7db      	b.n	8009092 <_fflush_r+0xe>
	...

080090dc <__swhatbuf_r>:
 80090dc:	b570      	push	{r4, r5, r6, lr}
 80090de:	000e      	movs	r6, r1
 80090e0:	001d      	movs	r5, r3
 80090e2:	230e      	movs	r3, #14
 80090e4:	5ec9      	ldrsh	r1, [r1, r3]
 80090e6:	0014      	movs	r4, r2
 80090e8:	b096      	sub	sp, #88	@ 0x58
 80090ea:	2900      	cmp	r1, #0
 80090ec:	da0c      	bge.n	8009108 <__swhatbuf_r+0x2c>
 80090ee:	89b2      	ldrh	r2, [r6, #12]
 80090f0:	2380      	movs	r3, #128	@ 0x80
 80090f2:	0011      	movs	r1, r2
 80090f4:	4019      	ands	r1, r3
 80090f6:	421a      	tst	r2, r3
 80090f8:	d114      	bne.n	8009124 <__swhatbuf_r+0x48>
 80090fa:	2380      	movs	r3, #128	@ 0x80
 80090fc:	00db      	lsls	r3, r3, #3
 80090fe:	2000      	movs	r0, #0
 8009100:	6029      	str	r1, [r5, #0]
 8009102:	6023      	str	r3, [r4, #0]
 8009104:	b016      	add	sp, #88	@ 0x58
 8009106:	bd70      	pop	{r4, r5, r6, pc}
 8009108:	466a      	mov	r2, sp
 800910a:	f000 facd 	bl	80096a8 <_fstat_r>
 800910e:	2800      	cmp	r0, #0
 8009110:	dbed      	blt.n	80090ee <__swhatbuf_r+0x12>
 8009112:	23f0      	movs	r3, #240	@ 0xf0
 8009114:	9901      	ldr	r1, [sp, #4]
 8009116:	021b      	lsls	r3, r3, #8
 8009118:	4019      	ands	r1, r3
 800911a:	4b04      	ldr	r3, [pc, #16]	@ (800912c <__swhatbuf_r+0x50>)
 800911c:	18c9      	adds	r1, r1, r3
 800911e:	424b      	negs	r3, r1
 8009120:	4159      	adcs	r1, r3
 8009122:	e7ea      	b.n	80090fa <__swhatbuf_r+0x1e>
 8009124:	2100      	movs	r1, #0
 8009126:	2340      	movs	r3, #64	@ 0x40
 8009128:	e7e9      	b.n	80090fe <__swhatbuf_r+0x22>
 800912a:	46c0      	nop			@ (mov r8, r8)
 800912c:	ffffe000 	.word	0xffffe000

08009130 <__smakebuf_r>:
 8009130:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009132:	2602      	movs	r6, #2
 8009134:	898b      	ldrh	r3, [r1, #12]
 8009136:	0005      	movs	r5, r0
 8009138:	000c      	movs	r4, r1
 800913a:	b085      	sub	sp, #20
 800913c:	4233      	tst	r3, r6
 800913e:	d007      	beq.n	8009150 <__smakebuf_r+0x20>
 8009140:	0023      	movs	r3, r4
 8009142:	3347      	adds	r3, #71	@ 0x47
 8009144:	6023      	str	r3, [r4, #0]
 8009146:	6123      	str	r3, [r4, #16]
 8009148:	2301      	movs	r3, #1
 800914a:	6163      	str	r3, [r4, #20]
 800914c:	b005      	add	sp, #20
 800914e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009150:	ab03      	add	r3, sp, #12
 8009152:	aa02      	add	r2, sp, #8
 8009154:	f7ff ffc2 	bl	80090dc <__swhatbuf_r>
 8009158:	9f02      	ldr	r7, [sp, #8]
 800915a:	9001      	str	r0, [sp, #4]
 800915c:	0039      	movs	r1, r7
 800915e:	0028      	movs	r0, r5
 8009160:	f7fd fd68 	bl	8006c34 <_malloc_r>
 8009164:	2800      	cmp	r0, #0
 8009166:	d108      	bne.n	800917a <__smakebuf_r+0x4a>
 8009168:	220c      	movs	r2, #12
 800916a:	5ea3      	ldrsh	r3, [r4, r2]
 800916c:	059a      	lsls	r2, r3, #22
 800916e:	d4ed      	bmi.n	800914c <__smakebuf_r+0x1c>
 8009170:	2203      	movs	r2, #3
 8009172:	4393      	bics	r3, r2
 8009174:	431e      	orrs	r6, r3
 8009176:	81a6      	strh	r6, [r4, #12]
 8009178:	e7e2      	b.n	8009140 <__smakebuf_r+0x10>
 800917a:	2380      	movs	r3, #128	@ 0x80
 800917c:	89a2      	ldrh	r2, [r4, #12]
 800917e:	6020      	str	r0, [r4, #0]
 8009180:	4313      	orrs	r3, r2
 8009182:	81a3      	strh	r3, [r4, #12]
 8009184:	9b03      	ldr	r3, [sp, #12]
 8009186:	6120      	str	r0, [r4, #16]
 8009188:	6167      	str	r7, [r4, #20]
 800918a:	2b00      	cmp	r3, #0
 800918c:	d00c      	beq.n	80091a8 <__smakebuf_r+0x78>
 800918e:	0028      	movs	r0, r5
 8009190:	230e      	movs	r3, #14
 8009192:	5ee1      	ldrsh	r1, [r4, r3]
 8009194:	f000 fa9a 	bl	80096cc <_isatty_r>
 8009198:	2800      	cmp	r0, #0
 800919a:	d005      	beq.n	80091a8 <__smakebuf_r+0x78>
 800919c:	2303      	movs	r3, #3
 800919e:	89a2      	ldrh	r2, [r4, #12]
 80091a0:	439a      	bics	r2, r3
 80091a2:	3b02      	subs	r3, #2
 80091a4:	4313      	orrs	r3, r2
 80091a6:	81a3      	strh	r3, [r4, #12]
 80091a8:	89a3      	ldrh	r3, [r4, #12]
 80091aa:	9a01      	ldr	r2, [sp, #4]
 80091ac:	4313      	orrs	r3, r2
 80091ae:	81a3      	strh	r3, [r4, #12]
 80091b0:	e7cc      	b.n	800914c <__smakebuf_r+0x1c>

080091b2 <_putc_r>:
 80091b2:	b570      	push	{r4, r5, r6, lr}
 80091b4:	0006      	movs	r6, r0
 80091b6:	000d      	movs	r5, r1
 80091b8:	0014      	movs	r4, r2
 80091ba:	2800      	cmp	r0, #0
 80091bc:	d004      	beq.n	80091c8 <_putc_r+0x16>
 80091be:	6a03      	ldr	r3, [r0, #32]
 80091c0:	2b00      	cmp	r3, #0
 80091c2:	d101      	bne.n	80091c8 <_putc_r+0x16>
 80091c4:	f7fc fc32 	bl	8005a2c <__sinit>
 80091c8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80091ca:	07db      	lsls	r3, r3, #31
 80091cc:	d405      	bmi.n	80091da <_putc_r+0x28>
 80091ce:	89a3      	ldrh	r3, [r4, #12]
 80091d0:	059b      	lsls	r3, r3, #22
 80091d2:	d402      	bmi.n	80091da <_putc_r+0x28>
 80091d4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80091d6:	f7fc fe30 	bl	8005e3a <__retarget_lock_acquire_recursive>
 80091da:	68a3      	ldr	r3, [r4, #8]
 80091dc:	3b01      	subs	r3, #1
 80091de:	60a3      	str	r3, [r4, #8]
 80091e0:	2b00      	cmp	r3, #0
 80091e2:	da05      	bge.n	80091f0 <_putc_r+0x3e>
 80091e4:	69a2      	ldr	r2, [r4, #24]
 80091e6:	4293      	cmp	r3, r2
 80091e8:	db12      	blt.n	8009210 <_putc_r+0x5e>
 80091ea:	b2eb      	uxtb	r3, r5
 80091ec:	2b0a      	cmp	r3, #10
 80091ee:	d00f      	beq.n	8009210 <_putc_r+0x5e>
 80091f0:	6823      	ldr	r3, [r4, #0]
 80091f2:	1c5a      	adds	r2, r3, #1
 80091f4:	6022      	str	r2, [r4, #0]
 80091f6:	701d      	strb	r5, [r3, #0]
 80091f8:	b2ed      	uxtb	r5, r5
 80091fa:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80091fc:	07db      	lsls	r3, r3, #31
 80091fe:	d405      	bmi.n	800920c <_putc_r+0x5a>
 8009200:	89a3      	ldrh	r3, [r4, #12]
 8009202:	059b      	lsls	r3, r3, #22
 8009204:	d402      	bmi.n	800920c <_putc_r+0x5a>
 8009206:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8009208:	f7fc fe18 	bl	8005e3c <__retarget_lock_release_recursive>
 800920c:	0028      	movs	r0, r5
 800920e:	bd70      	pop	{r4, r5, r6, pc}
 8009210:	0029      	movs	r1, r5
 8009212:	0022      	movs	r2, r4
 8009214:	0030      	movs	r0, r6
 8009216:	f000 f982 	bl	800951e <__swbuf_r>
 800921a:	0005      	movs	r5, r0
 800921c:	e7ed      	b.n	80091fa <_putc_r+0x48>
	...

08009220 <lflush>:
 8009220:	2209      	movs	r2, #9
 8009222:	898b      	ldrh	r3, [r1, #12]
 8009224:	2000      	movs	r0, #0
 8009226:	b510      	push	{r4, lr}
 8009228:	4013      	ands	r3, r2
 800922a:	4293      	cmp	r3, r2
 800922c:	d103      	bne.n	8009236 <lflush+0x16>
 800922e:	4b02      	ldr	r3, [pc, #8]	@ (8009238 <lflush+0x18>)
 8009230:	6818      	ldr	r0, [r3, #0]
 8009232:	f7ff ff27 	bl	8009084 <_fflush_r>
 8009236:	bd10      	pop	{r4, pc}
 8009238:	2000001c 	.word	0x2000001c

0800923c <__srefill_r>:
 800923c:	b570      	push	{r4, r5, r6, lr}
 800923e:	0005      	movs	r5, r0
 8009240:	000c      	movs	r4, r1
 8009242:	2800      	cmp	r0, #0
 8009244:	d004      	beq.n	8009250 <__srefill_r+0x14>
 8009246:	6a03      	ldr	r3, [r0, #32]
 8009248:	2b00      	cmp	r3, #0
 800924a:	d101      	bne.n	8009250 <__srefill_r+0x14>
 800924c:	f7fc fbee 	bl	8005a2c <__sinit>
 8009250:	2300      	movs	r3, #0
 8009252:	6063      	str	r3, [r4, #4]
 8009254:	220c      	movs	r2, #12
 8009256:	5ea3      	ldrsh	r3, [r4, r2]
 8009258:	069a      	lsls	r2, r3, #26
 800925a:	d408      	bmi.n	800926e <__srefill_r+0x32>
 800925c:	075a      	lsls	r2, r3, #29
 800925e:	d449      	bmi.n	80092f4 <__srefill_r+0xb8>
 8009260:	06da      	lsls	r2, r3, #27
 8009262:	d407      	bmi.n	8009274 <__srefill_r+0x38>
 8009264:	2209      	movs	r2, #9
 8009266:	602a      	str	r2, [r5, #0]
 8009268:	3237      	adds	r2, #55	@ 0x37
 800926a:	4313      	orrs	r3, r2
 800926c:	81a3      	strh	r3, [r4, #12]
 800926e:	2001      	movs	r0, #1
 8009270:	4240      	negs	r0, r0
 8009272:	bd70      	pop	{r4, r5, r6, pc}
 8009274:	2608      	movs	r6, #8
 8009276:	4233      	tst	r3, r6
 8009278:	d00a      	beq.n	8009290 <__srefill_r+0x54>
 800927a:	0021      	movs	r1, r4
 800927c:	0028      	movs	r0, r5
 800927e:	f7ff ff01 	bl	8009084 <_fflush_r>
 8009282:	2800      	cmp	r0, #0
 8009284:	d1f3      	bne.n	800926e <__srefill_r+0x32>
 8009286:	89a3      	ldrh	r3, [r4, #12]
 8009288:	60a0      	str	r0, [r4, #8]
 800928a:	43b3      	bics	r3, r6
 800928c:	81a3      	strh	r3, [r4, #12]
 800928e:	61a0      	str	r0, [r4, #24]
 8009290:	2304      	movs	r3, #4
 8009292:	89a2      	ldrh	r2, [r4, #12]
 8009294:	4313      	orrs	r3, r2
 8009296:	81a3      	strh	r3, [r4, #12]
 8009298:	6923      	ldr	r3, [r4, #16]
 800929a:	2b00      	cmp	r3, #0
 800929c:	d103      	bne.n	80092a6 <__srefill_r+0x6a>
 800929e:	0021      	movs	r1, r4
 80092a0:	0028      	movs	r0, r5
 80092a2:	f7ff ff45 	bl	8009130 <__smakebuf_r>
 80092a6:	230c      	movs	r3, #12
 80092a8:	5ee6      	ldrsh	r6, [r4, r3]
 80092aa:	07b3      	lsls	r3, r6, #30
 80092ac:	d00f      	beq.n	80092ce <__srefill_r+0x92>
 80092ae:	2301      	movs	r3, #1
 80092b0:	4a1a      	ldr	r2, [pc, #104]	@ (800931c <__srefill_r+0xe0>)
 80092b2:	81a3      	strh	r3, [r4, #12]
 80092b4:	491a      	ldr	r1, [pc, #104]	@ (8009320 <__srefill_r+0xe4>)
 80092b6:	481b      	ldr	r0, [pc, #108]	@ (8009324 <__srefill_r+0xe8>)
 80092b8:	f7fc fbd0 	bl	8005a5c <_fwalk_sglue>
 80092bc:	2309      	movs	r3, #9
 80092be:	81a6      	strh	r6, [r4, #12]
 80092c0:	401e      	ands	r6, r3
 80092c2:	429e      	cmp	r6, r3
 80092c4:	d103      	bne.n	80092ce <__srefill_r+0x92>
 80092c6:	0021      	movs	r1, r4
 80092c8:	0028      	movs	r0, r5
 80092ca:	f7ff fe55 	bl	8008f78 <__sflush_r>
 80092ce:	6922      	ldr	r2, [r4, #16]
 80092d0:	0028      	movs	r0, r5
 80092d2:	6a66      	ldr	r6, [r4, #36]	@ 0x24
 80092d4:	6963      	ldr	r3, [r4, #20]
 80092d6:	6a21      	ldr	r1, [r4, #32]
 80092d8:	6022      	str	r2, [r4, #0]
 80092da:	47b0      	blx	r6
 80092dc:	6060      	str	r0, [r4, #4]
 80092de:	2800      	cmp	r0, #0
 80092e0:	dc1a      	bgt.n	8009318 <__srefill_r+0xdc>
 80092e2:	230c      	movs	r3, #12
 80092e4:	5ee2      	ldrsh	r2, [r4, r3]
 80092e6:	2320      	movs	r3, #32
 80092e8:	2800      	cmp	r0, #0
 80092ea:	d0be      	beq.n	800926a <__srefill_r+0x2e>
 80092ec:	2300      	movs	r3, #0
 80092ee:	6063      	str	r3, [r4, #4]
 80092f0:	3340      	adds	r3, #64	@ 0x40
 80092f2:	e7ba      	b.n	800926a <__srefill_r+0x2e>
 80092f4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80092f6:	2900      	cmp	r1, #0
 80092f8:	d0ce      	beq.n	8009298 <__srefill_r+0x5c>
 80092fa:	0023      	movs	r3, r4
 80092fc:	3344      	adds	r3, #68	@ 0x44
 80092fe:	4299      	cmp	r1, r3
 8009300:	d002      	beq.n	8009308 <__srefill_r+0xcc>
 8009302:	0028      	movs	r0, r5
 8009304:	f7fd fc20 	bl	8006b48 <_free_r>
 8009308:	2300      	movs	r3, #0
 800930a:	6363      	str	r3, [r4, #52]	@ 0x34
 800930c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800930e:	6063      	str	r3, [r4, #4]
 8009310:	2b00      	cmp	r3, #0
 8009312:	d0c1      	beq.n	8009298 <__srefill_r+0x5c>
 8009314:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009316:	6023      	str	r3, [r4, #0]
 8009318:	2000      	movs	r0, #0
 800931a:	e7aa      	b.n	8009272 <__srefill_r+0x36>
 800931c:	20000010 	.word	0x20000010
 8009320:	08009221 	.word	0x08009221
 8009324:	20000020 	.word	0x20000020

08009328 <__sccl>:
 8009328:	b570      	push	{r4, r5, r6, lr}
 800932a:	780b      	ldrb	r3, [r1, #0]
 800932c:	0004      	movs	r4, r0
 800932e:	2b5e      	cmp	r3, #94	@ 0x5e
 8009330:	d019      	beq.n	8009366 <__sccl+0x3e>
 8009332:	1c4d      	adds	r5, r1, #1
 8009334:	2100      	movs	r1, #0
 8009336:	0022      	movs	r2, r4
 8009338:	1c60      	adds	r0, r4, #1
 800933a:	30ff      	adds	r0, #255	@ 0xff
 800933c:	7011      	strb	r1, [r2, #0]
 800933e:	3201      	adds	r2, #1
 8009340:	4282      	cmp	r2, r0
 8009342:	d1fb      	bne.n	800933c <__sccl+0x14>
 8009344:	1e68      	subs	r0, r5, #1
 8009346:	2b00      	cmp	r3, #0
 8009348:	d026      	beq.n	8009398 <__sccl+0x70>
 800934a:	2601      	movs	r6, #1
 800934c:	404e      	eors	r6, r1
 800934e:	0028      	movs	r0, r5
 8009350:	54e6      	strb	r6, [r4, r3]
 8009352:	7801      	ldrb	r1, [r0, #0]
 8009354:	1c45      	adds	r5, r0, #1
 8009356:	292d      	cmp	r1, #45	@ 0x2d
 8009358:	d009      	beq.n	800936e <__sccl+0x46>
 800935a:	295d      	cmp	r1, #93	@ 0x5d
 800935c:	d01b      	beq.n	8009396 <__sccl+0x6e>
 800935e:	2900      	cmp	r1, #0
 8009360:	d01a      	beq.n	8009398 <__sccl+0x70>
 8009362:	000b      	movs	r3, r1
 8009364:	e7f3      	b.n	800934e <__sccl+0x26>
 8009366:	784b      	ldrb	r3, [r1, #1]
 8009368:	1c8d      	adds	r5, r1, #2
 800936a:	2101      	movs	r1, #1
 800936c:	e7e3      	b.n	8009336 <__sccl+0xe>
 800936e:	7842      	ldrb	r2, [r0, #1]
 8009370:	2a5d      	cmp	r2, #93	@ 0x5d
 8009372:	d0f6      	beq.n	8009362 <__sccl+0x3a>
 8009374:	4293      	cmp	r3, r2
 8009376:	dcf4      	bgt.n	8009362 <__sccl+0x3a>
 8009378:	0019      	movs	r1, r3
 800937a:	3002      	adds	r0, #2
 800937c:	3101      	adds	r1, #1
 800937e:	5466      	strb	r6, [r4, r1]
 8009380:	428a      	cmp	r2, r1
 8009382:	dcfb      	bgt.n	800937c <__sccl+0x54>
 8009384:	1c59      	adds	r1, r3, #1
 8009386:	4293      	cmp	r3, r2
 8009388:	db02      	blt.n	8009390 <__sccl+0x68>
 800938a:	2200      	movs	r2, #0
 800938c:	188b      	adds	r3, r1, r2
 800938e:	e7e0      	b.n	8009352 <__sccl+0x2a>
 8009390:	1ad2      	subs	r2, r2, r3
 8009392:	3a01      	subs	r2, #1
 8009394:	e7fa      	b.n	800938c <__sccl+0x64>
 8009396:	0028      	movs	r0, r5
 8009398:	bd70      	pop	{r4, r5, r6, pc}
	...

0800939c <__submore>:
 800939c:	000b      	movs	r3, r1
 800939e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80093a0:	6b4d      	ldr	r5, [r1, #52]	@ 0x34
 80093a2:	3344      	adds	r3, #68	@ 0x44
 80093a4:	000c      	movs	r4, r1
 80093a6:	429d      	cmp	r5, r3
 80093a8:	d11c      	bne.n	80093e4 <__submore+0x48>
 80093aa:	2680      	movs	r6, #128	@ 0x80
 80093ac:	00f6      	lsls	r6, r6, #3
 80093ae:	0031      	movs	r1, r6
 80093b0:	f7fd fc40 	bl	8006c34 <_malloc_r>
 80093b4:	2800      	cmp	r0, #0
 80093b6:	d102      	bne.n	80093be <__submore+0x22>
 80093b8:	2001      	movs	r0, #1
 80093ba:	4240      	negs	r0, r0
 80093bc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80093be:	0023      	movs	r3, r4
 80093c0:	6360      	str	r0, [r4, #52]	@ 0x34
 80093c2:	63a6      	str	r6, [r4, #56]	@ 0x38
 80093c4:	3346      	adds	r3, #70	@ 0x46
 80093c6:	781a      	ldrb	r2, [r3, #0]
 80093c8:	4b10      	ldr	r3, [pc, #64]	@ (800940c <__submore+0x70>)
 80093ca:	54c2      	strb	r2, [r0, r3]
 80093cc:	0023      	movs	r3, r4
 80093ce:	3345      	adds	r3, #69	@ 0x45
 80093d0:	781a      	ldrb	r2, [r3, #0]
 80093d2:	4b0f      	ldr	r3, [pc, #60]	@ (8009410 <__submore+0x74>)
 80093d4:	54c2      	strb	r2, [r0, r3]
 80093d6:	782a      	ldrb	r2, [r5, #0]
 80093d8:	4b0e      	ldr	r3, [pc, #56]	@ (8009414 <__submore+0x78>)
 80093da:	54c2      	strb	r2, [r0, r3]
 80093dc:	18c0      	adds	r0, r0, r3
 80093de:	6020      	str	r0, [r4, #0]
 80093e0:	2000      	movs	r0, #0
 80093e2:	e7eb      	b.n	80093bc <__submore+0x20>
 80093e4:	6b8e      	ldr	r6, [r1, #56]	@ 0x38
 80093e6:	0029      	movs	r1, r5
 80093e8:	0073      	lsls	r3, r6, #1
 80093ea:	001a      	movs	r2, r3
 80093ec:	9301      	str	r3, [sp, #4]
 80093ee:	f000 fd59 	bl	8009ea4 <_realloc_r>
 80093f2:	1e05      	subs	r5, r0, #0
 80093f4:	d0e0      	beq.n	80093b8 <__submore+0x1c>
 80093f6:	1987      	adds	r7, r0, r6
 80093f8:	0001      	movs	r1, r0
 80093fa:	0032      	movs	r2, r6
 80093fc:	0038      	movs	r0, r7
 80093fe:	f000 f989 	bl	8009714 <memcpy>
 8009402:	9b01      	ldr	r3, [sp, #4]
 8009404:	6027      	str	r7, [r4, #0]
 8009406:	6365      	str	r5, [r4, #52]	@ 0x34
 8009408:	63a3      	str	r3, [r4, #56]	@ 0x38
 800940a:	e7e9      	b.n	80093e0 <__submore+0x44>
 800940c:	000003ff 	.word	0x000003ff
 8009410:	000003fe 	.word	0x000003fe
 8009414:	000003fd 	.word	0x000003fd

08009418 <_ungetc_r>:
 8009418:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800941a:	0006      	movs	r6, r0
 800941c:	000d      	movs	r5, r1
 800941e:	0014      	movs	r4, r2
 8009420:	1c4b      	adds	r3, r1, #1
 8009422:	d021      	beq.n	8009468 <_ungetc_r+0x50>
 8009424:	2800      	cmp	r0, #0
 8009426:	d004      	beq.n	8009432 <_ungetc_r+0x1a>
 8009428:	6a03      	ldr	r3, [r0, #32]
 800942a:	2b00      	cmp	r3, #0
 800942c:	d101      	bne.n	8009432 <_ungetc_r+0x1a>
 800942e:	f7fc fafd 	bl	8005a2c <__sinit>
 8009432:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8009434:	07db      	lsls	r3, r3, #31
 8009436:	d405      	bmi.n	8009444 <_ungetc_r+0x2c>
 8009438:	89a3      	ldrh	r3, [r4, #12]
 800943a:	059b      	lsls	r3, r3, #22
 800943c:	d402      	bmi.n	8009444 <_ungetc_r+0x2c>
 800943e:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8009440:	f7fc fcfb 	bl	8005e3a <__retarget_lock_acquire_recursive>
 8009444:	220c      	movs	r2, #12
 8009446:	5ea3      	ldrsh	r3, [r4, r2]
 8009448:	2220      	movs	r2, #32
 800944a:	0019      	movs	r1, r3
 800944c:	4391      	bics	r1, r2
 800944e:	81a1      	strh	r1, [r4, #12]
 8009450:	075a      	lsls	r2, r3, #29
 8009452:	d423      	bmi.n	800949c <_ungetc_r+0x84>
 8009454:	06da      	lsls	r2, r3, #27
 8009456:	d40a      	bmi.n	800946e <_ungetc_r+0x56>
 8009458:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800945a:	07d2      	lsls	r2, r2, #31
 800945c:	d404      	bmi.n	8009468 <_ungetc_r+0x50>
 800945e:	059b      	lsls	r3, r3, #22
 8009460:	d402      	bmi.n	8009468 <_ungetc_r+0x50>
 8009462:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8009464:	f7fc fcea 	bl	8005e3c <__retarget_lock_release_recursive>
 8009468:	2501      	movs	r5, #1
 800946a:	426d      	negs	r5, r5
 800946c:	e048      	b.n	8009500 <_ungetc_r+0xe8>
 800946e:	2708      	movs	r7, #8
 8009470:	423b      	tst	r3, r7
 8009472:	d00f      	beq.n	8009494 <_ungetc_r+0x7c>
 8009474:	0021      	movs	r1, r4
 8009476:	0030      	movs	r0, r6
 8009478:	f7ff fe04 	bl	8009084 <_fflush_r>
 800947c:	2800      	cmp	r0, #0
 800947e:	d004      	beq.n	800948a <_ungetc_r+0x72>
 8009480:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8009482:	07db      	lsls	r3, r3, #31
 8009484:	d4f0      	bmi.n	8009468 <_ungetc_r+0x50>
 8009486:	89a3      	ldrh	r3, [r4, #12]
 8009488:	e7e9      	b.n	800945e <_ungetc_r+0x46>
 800948a:	89a3      	ldrh	r3, [r4, #12]
 800948c:	60a0      	str	r0, [r4, #8]
 800948e:	43bb      	bics	r3, r7
 8009490:	81a3      	strh	r3, [r4, #12]
 8009492:	61a0      	str	r0, [r4, #24]
 8009494:	2304      	movs	r3, #4
 8009496:	89a2      	ldrh	r2, [r4, #12]
 8009498:	4313      	orrs	r3, r2
 800949a:	81a3      	strh	r3, [r4, #12]
 800949c:	6b62      	ldr	r2, [r4, #52]	@ 0x34
 800949e:	b2ef      	uxtb	r7, r5
 80094a0:	6863      	ldr	r3, [r4, #4]
 80094a2:	b2ed      	uxtb	r5, r5
 80094a4:	2a00      	cmp	r2, #0
 80094a6:	d019      	beq.n	80094dc <_ungetc_r+0xc4>
 80094a8:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80094aa:	429a      	cmp	r2, r3
 80094ac:	dc05      	bgt.n	80094ba <_ungetc_r+0xa2>
 80094ae:	0021      	movs	r1, r4
 80094b0:	0030      	movs	r0, r6
 80094b2:	f7ff ff73 	bl	800939c <__submore>
 80094b6:	2800      	cmp	r0, #0
 80094b8:	d1e2      	bne.n	8009480 <_ungetc_r+0x68>
 80094ba:	6823      	ldr	r3, [r4, #0]
 80094bc:	3b01      	subs	r3, #1
 80094be:	6023      	str	r3, [r4, #0]
 80094c0:	701f      	strb	r7, [r3, #0]
 80094c2:	6863      	ldr	r3, [r4, #4]
 80094c4:	3301      	adds	r3, #1
 80094c6:	6063      	str	r3, [r4, #4]
 80094c8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80094ca:	07db      	lsls	r3, r3, #31
 80094cc:	d418      	bmi.n	8009500 <_ungetc_r+0xe8>
 80094ce:	89a3      	ldrh	r3, [r4, #12]
 80094d0:	059b      	lsls	r3, r3, #22
 80094d2:	d415      	bmi.n	8009500 <_ungetc_r+0xe8>
 80094d4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80094d6:	f7fc fcb1 	bl	8005e3c <__retarget_lock_release_recursive>
 80094da:	e011      	b.n	8009500 <_ungetc_r+0xe8>
 80094dc:	2601      	movs	r6, #1
 80094de:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80094e0:	6920      	ldr	r0, [r4, #16]
 80094e2:	6821      	ldr	r1, [r4, #0]
 80094e4:	4032      	ands	r2, r6
 80094e6:	2800      	cmp	r0, #0
 80094e8:	d00c      	beq.n	8009504 <_ungetc_r+0xec>
 80094ea:	4288      	cmp	r0, r1
 80094ec:	d20a      	bcs.n	8009504 <_ungetc_r+0xec>
 80094ee:	1e48      	subs	r0, r1, #1
 80094f0:	7806      	ldrb	r6, [r0, #0]
 80094f2:	42ae      	cmp	r6, r5
 80094f4:	d106      	bne.n	8009504 <_ungetc_r+0xec>
 80094f6:	6020      	str	r0, [r4, #0]
 80094f8:	3301      	adds	r3, #1
 80094fa:	6063      	str	r3, [r4, #4]
 80094fc:	2a00      	cmp	r2, #0
 80094fe:	d0e6      	beq.n	80094ce <_ungetc_r+0xb6>
 8009500:	0028      	movs	r0, r5
 8009502:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009504:	6423      	str	r3, [r4, #64]	@ 0x40
 8009506:	0023      	movs	r3, r4
 8009508:	3344      	adds	r3, #68	@ 0x44
 800950a:	6363      	str	r3, [r4, #52]	@ 0x34
 800950c:	2303      	movs	r3, #3
 800950e:	63a3      	str	r3, [r4, #56]	@ 0x38
 8009510:	0023      	movs	r3, r4
 8009512:	3346      	adds	r3, #70	@ 0x46
 8009514:	63e1      	str	r1, [r4, #60]	@ 0x3c
 8009516:	701f      	strb	r7, [r3, #0]
 8009518:	6023      	str	r3, [r4, #0]
 800951a:	2301      	movs	r3, #1
 800951c:	e7ed      	b.n	80094fa <_ungetc_r+0xe2>

0800951e <__swbuf_r>:
 800951e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009520:	0006      	movs	r6, r0
 8009522:	000d      	movs	r5, r1
 8009524:	0014      	movs	r4, r2
 8009526:	2800      	cmp	r0, #0
 8009528:	d004      	beq.n	8009534 <__swbuf_r+0x16>
 800952a:	6a03      	ldr	r3, [r0, #32]
 800952c:	2b00      	cmp	r3, #0
 800952e:	d101      	bne.n	8009534 <__swbuf_r+0x16>
 8009530:	f7fc fa7c 	bl	8005a2c <__sinit>
 8009534:	69a3      	ldr	r3, [r4, #24]
 8009536:	60a3      	str	r3, [r4, #8]
 8009538:	89a3      	ldrh	r3, [r4, #12]
 800953a:	071b      	lsls	r3, r3, #28
 800953c:	d502      	bpl.n	8009544 <__swbuf_r+0x26>
 800953e:	6923      	ldr	r3, [r4, #16]
 8009540:	2b00      	cmp	r3, #0
 8009542:	d109      	bne.n	8009558 <__swbuf_r+0x3a>
 8009544:	0021      	movs	r1, r4
 8009546:	0030      	movs	r0, r6
 8009548:	f000 f82c 	bl	80095a4 <__swsetup_r>
 800954c:	2800      	cmp	r0, #0
 800954e:	d003      	beq.n	8009558 <__swbuf_r+0x3a>
 8009550:	2501      	movs	r5, #1
 8009552:	426d      	negs	r5, r5
 8009554:	0028      	movs	r0, r5
 8009556:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009558:	6923      	ldr	r3, [r4, #16]
 800955a:	6820      	ldr	r0, [r4, #0]
 800955c:	b2ef      	uxtb	r7, r5
 800955e:	1ac0      	subs	r0, r0, r3
 8009560:	6963      	ldr	r3, [r4, #20]
 8009562:	b2ed      	uxtb	r5, r5
 8009564:	4283      	cmp	r3, r0
 8009566:	dc05      	bgt.n	8009574 <__swbuf_r+0x56>
 8009568:	0021      	movs	r1, r4
 800956a:	0030      	movs	r0, r6
 800956c:	f7ff fd8a 	bl	8009084 <_fflush_r>
 8009570:	2800      	cmp	r0, #0
 8009572:	d1ed      	bne.n	8009550 <__swbuf_r+0x32>
 8009574:	68a3      	ldr	r3, [r4, #8]
 8009576:	3001      	adds	r0, #1
 8009578:	3b01      	subs	r3, #1
 800957a:	60a3      	str	r3, [r4, #8]
 800957c:	6823      	ldr	r3, [r4, #0]
 800957e:	1c5a      	adds	r2, r3, #1
 8009580:	6022      	str	r2, [r4, #0]
 8009582:	701f      	strb	r7, [r3, #0]
 8009584:	6963      	ldr	r3, [r4, #20]
 8009586:	4283      	cmp	r3, r0
 8009588:	d004      	beq.n	8009594 <__swbuf_r+0x76>
 800958a:	89a3      	ldrh	r3, [r4, #12]
 800958c:	07db      	lsls	r3, r3, #31
 800958e:	d5e1      	bpl.n	8009554 <__swbuf_r+0x36>
 8009590:	2d0a      	cmp	r5, #10
 8009592:	d1df      	bne.n	8009554 <__swbuf_r+0x36>
 8009594:	0021      	movs	r1, r4
 8009596:	0030      	movs	r0, r6
 8009598:	f7ff fd74 	bl	8009084 <_fflush_r>
 800959c:	2800      	cmp	r0, #0
 800959e:	d0d9      	beq.n	8009554 <__swbuf_r+0x36>
 80095a0:	e7d6      	b.n	8009550 <__swbuf_r+0x32>
	...

080095a4 <__swsetup_r>:
 80095a4:	4b2d      	ldr	r3, [pc, #180]	@ (800965c <__swsetup_r+0xb8>)
 80095a6:	b570      	push	{r4, r5, r6, lr}
 80095a8:	0005      	movs	r5, r0
 80095aa:	6818      	ldr	r0, [r3, #0]
 80095ac:	000c      	movs	r4, r1
 80095ae:	2800      	cmp	r0, #0
 80095b0:	d004      	beq.n	80095bc <__swsetup_r+0x18>
 80095b2:	6a03      	ldr	r3, [r0, #32]
 80095b4:	2b00      	cmp	r3, #0
 80095b6:	d101      	bne.n	80095bc <__swsetup_r+0x18>
 80095b8:	f7fc fa38 	bl	8005a2c <__sinit>
 80095bc:	220c      	movs	r2, #12
 80095be:	5ea3      	ldrsh	r3, [r4, r2]
 80095c0:	071a      	lsls	r2, r3, #28
 80095c2:	d423      	bmi.n	800960c <__swsetup_r+0x68>
 80095c4:	06da      	lsls	r2, r3, #27
 80095c6:	d407      	bmi.n	80095d8 <__swsetup_r+0x34>
 80095c8:	2209      	movs	r2, #9
 80095ca:	602a      	str	r2, [r5, #0]
 80095cc:	2240      	movs	r2, #64	@ 0x40
 80095ce:	2001      	movs	r0, #1
 80095d0:	4313      	orrs	r3, r2
 80095d2:	81a3      	strh	r3, [r4, #12]
 80095d4:	4240      	negs	r0, r0
 80095d6:	e03a      	b.n	800964e <__swsetup_r+0xaa>
 80095d8:	075b      	lsls	r3, r3, #29
 80095da:	d513      	bpl.n	8009604 <__swsetup_r+0x60>
 80095dc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80095de:	2900      	cmp	r1, #0
 80095e0:	d008      	beq.n	80095f4 <__swsetup_r+0x50>
 80095e2:	0023      	movs	r3, r4
 80095e4:	3344      	adds	r3, #68	@ 0x44
 80095e6:	4299      	cmp	r1, r3
 80095e8:	d002      	beq.n	80095f0 <__swsetup_r+0x4c>
 80095ea:	0028      	movs	r0, r5
 80095ec:	f7fd faac 	bl	8006b48 <_free_r>
 80095f0:	2300      	movs	r3, #0
 80095f2:	6363      	str	r3, [r4, #52]	@ 0x34
 80095f4:	2224      	movs	r2, #36	@ 0x24
 80095f6:	89a3      	ldrh	r3, [r4, #12]
 80095f8:	4393      	bics	r3, r2
 80095fa:	81a3      	strh	r3, [r4, #12]
 80095fc:	2300      	movs	r3, #0
 80095fe:	6063      	str	r3, [r4, #4]
 8009600:	6923      	ldr	r3, [r4, #16]
 8009602:	6023      	str	r3, [r4, #0]
 8009604:	2308      	movs	r3, #8
 8009606:	89a2      	ldrh	r2, [r4, #12]
 8009608:	4313      	orrs	r3, r2
 800960a:	81a3      	strh	r3, [r4, #12]
 800960c:	6923      	ldr	r3, [r4, #16]
 800960e:	2b00      	cmp	r3, #0
 8009610:	d10b      	bne.n	800962a <__swsetup_r+0x86>
 8009612:	21a0      	movs	r1, #160	@ 0xa0
 8009614:	2280      	movs	r2, #128	@ 0x80
 8009616:	89a3      	ldrh	r3, [r4, #12]
 8009618:	0089      	lsls	r1, r1, #2
 800961a:	0092      	lsls	r2, r2, #2
 800961c:	400b      	ands	r3, r1
 800961e:	4293      	cmp	r3, r2
 8009620:	d003      	beq.n	800962a <__swsetup_r+0x86>
 8009622:	0021      	movs	r1, r4
 8009624:	0028      	movs	r0, r5
 8009626:	f7ff fd83 	bl	8009130 <__smakebuf_r>
 800962a:	220c      	movs	r2, #12
 800962c:	5ea3      	ldrsh	r3, [r4, r2]
 800962e:	2101      	movs	r1, #1
 8009630:	001a      	movs	r2, r3
 8009632:	400a      	ands	r2, r1
 8009634:	420b      	tst	r3, r1
 8009636:	d00b      	beq.n	8009650 <__swsetup_r+0xac>
 8009638:	2200      	movs	r2, #0
 800963a:	60a2      	str	r2, [r4, #8]
 800963c:	6962      	ldr	r2, [r4, #20]
 800963e:	4252      	negs	r2, r2
 8009640:	61a2      	str	r2, [r4, #24]
 8009642:	2000      	movs	r0, #0
 8009644:	6922      	ldr	r2, [r4, #16]
 8009646:	4282      	cmp	r2, r0
 8009648:	d101      	bne.n	800964e <__swsetup_r+0xaa>
 800964a:	061a      	lsls	r2, r3, #24
 800964c:	d4be      	bmi.n	80095cc <__swsetup_r+0x28>
 800964e:	bd70      	pop	{r4, r5, r6, pc}
 8009650:	0799      	lsls	r1, r3, #30
 8009652:	d400      	bmi.n	8009656 <__swsetup_r+0xb2>
 8009654:	6962      	ldr	r2, [r4, #20]
 8009656:	60a2      	str	r2, [r4, #8]
 8009658:	e7f3      	b.n	8009642 <__swsetup_r+0x9e>
 800965a:	46c0      	nop			@ (mov r8, r8)
 800965c:	2000001c 	.word	0x2000001c

08009660 <memmove>:
 8009660:	b510      	push	{r4, lr}
 8009662:	4288      	cmp	r0, r1
 8009664:	d902      	bls.n	800966c <memmove+0xc>
 8009666:	188b      	adds	r3, r1, r2
 8009668:	4298      	cmp	r0, r3
 800966a:	d308      	bcc.n	800967e <memmove+0x1e>
 800966c:	2300      	movs	r3, #0
 800966e:	429a      	cmp	r2, r3
 8009670:	d007      	beq.n	8009682 <memmove+0x22>
 8009672:	5ccc      	ldrb	r4, [r1, r3]
 8009674:	54c4      	strb	r4, [r0, r3]
 8009676:	3301      	adds	r3, #1
 8009678:	e7f9      	b.n	800966e <memmove+0xe>
 800967a:	5c8b      	ldrb	r3, [r1, r2]
 800967c:	5483      	strb	r3, [r0, r2]
 800967e:	3a01      	subs	r2, #1
 8009680:	d2fb      	bcs.n	800967a <memmove+0x1a>
 8009682:	bd10      	pop	{r4, pc}

08009684 <strncmp>:
 8009684:	b530      	push	{r4, r5, lr}
 8009686:	0005      	movs	r5, r0
 8009688:	1e10      	subs	r0, r2, #0
 800968a:	d00b      	beq.n	80096a4 <strncmp+0x20>
 800968c:	2400      	movs	r4, #0
 800968e:	3a01      	subs	r2, #1
 8009690:	5d2b      	ldrb	r3, [r5, r4]
 8009692:	5d08      	ldrb	r0, [r1, r4]
 8009694:	4283      	cmp	r3, r0
 8009696:	d104      	bne.n	80096a2 <strncmp+0x1e>
 8009698:	4294      	cmp	r4, r2
 800969a:	d002      	beq.n	80096a2 <strncmp+0x1e>
 800969c:	3401      	adds	r4, #1
 800969e:	2b00      	cmp	r3, #0
 80096a0:	d1f6      	bne.n	8009690 <strncmp+0xc>
 80096a2:	1a18      	subs	r0, r3, r0
 80096a4:	bd30      	pop	{r4, r5, pc}
	...

080096a8 <_fstat_r>:
 80096a8:	2300      	movs	r3, #0
 80096aa:	b570      	push	{r4, r5, r6, lr}
 80096ac:	4d06      	ldr	r5, [pc, #24]	@ (80096c8 <_fstat_r+0x20>)
 80096ae:	0004      	movs	r4, r0
 80096b0:	0008      	movs	r0, r1
 80096b2:	0011      	movs	r1, r2
 80096b4:	602b      	str	r3, [r5, #0]
 80096b6:	f7f9 fb25 	bl	8002d04 <_fstat>
 80096ba:	1c43      	adds	r3, r0, #1
 80096bc:	d103      	bne.n	80096c6 <_fstat_r+0x1e>
 80096be:	682b      	ldr	r3, [r5, #0]
 80096c0:	2b00      	cmp	r3, #0
 80096c2:	d000      	beq.n	80096c6 <_fstat_r+0x1e>
 80096c4:	6023      	str	r3, [r4, #0]
 80096c6:	bd70      	pop	{r4, r5, r6, pc}
 80096c8:	200003ec 	.word	0x200003ec

080096cc <_isatty_r>:
 80096cc:	2300      	movs	r3, #0
 80096ce:	b570      	push	{r4, r5, r6, lr}
 80096d0:	4d06      	ldr	r5, [pc, #24]	@ (80096ec <_isatty_r+0x20>)
 80096d2:	0004      	movs	r4, r0
 80096d4:	0008      	movs	r0, r1
 80096d6:	602b      	str	r3, [r5, #0]
 80096d8:	f7f9 fb22 	bl	8002d20 <_isatty>
 80096dc:	1c43      	adds	r3, r0, #1
 80096de:	d103      	bne.n	80096e8 <_isatty_r+0x1c>
 80096e0:	682b      	ldr	r3, [r5, #0]
 80096e2:	2b00      	cmp	r3, #0
 80096e4:	d000      	beq.n	80096e8 <_isatty_r+0x1c>
 80096e6:	6023      	str	r3, [r4, #0]
 80096e8:	bd70      	pop	{r4, r5, r6, pc}
 80096ea:	46c0      	nop			@ (mov r8, r8)
 80096ec:	200003ec 	.word	0x200003ec

080096f0 <_sbrk_r>:
 80096f0:	2300      	movs	r3, #0
 80096f2:	b570      	push	{r4, r5, r6, lr}
 80096f4:	4d06      	ldr	r5, [pc, #24]	@ (8009710 <_sbrk_r+0x20>)
 80096f6:	0004      	movs	r4, r0
 80096f8:	0008      	movs	r0, r1
 80096fa:	602b      	str	r3, [r5, #0]
 80096fc:	f7f9 fb24 	bl	8002d48 <_sbrk>
 8009700:	1c43      	adds	r3, r0, #1
 8009702:	d103      	bne.n	800970c <_sbrk_r+0x1c>
 8009704:	682b      	ldr	r3, [r5, #0]
 8009706:	2b00      	cmp	r3, #0
 8009708:	d000      	beq.n	800970c <_sbrk_r+0x1c>
 800970a:	6023      	str	r3, [r4, #0]
 800970c:	bd70      	pop	{r4, r5, r6, pc}
 800970e:	46c0      	nop			@ (mov r8, r8)
 8009710:	200003ec 	.word	0x200003ec

08009714 <memcpy>:
 8009714:	2300      	movs	r3, #0
 8009716:	b510      	push	{r4, lr}
 8009718:	429a      	cmp	r2, r3
 800971a:	d100      	bne.n	800971e <memcpy+0xa>
 800971c:	bd10      	pop	{r4, pc}
 800971e:	5ccc      	ldrb	r4, [r1, r3]
 8009720:	54c4      	strb	r4, [r0, r3]
 8009722:	3301      	adds	r3, #1
 8009724:	e7f8      	b.n	8009718 <memcpy+0x4>
	...

08009728 <nan>:
 8009728:	2000      	movs	r0, #0
 800972a:	4901      	ldr	r1, [pc, #4]	@ (8009730 <nan+0x8>)
 800972c:	4770      	bx	lr
 800972e:	46c0      	nop			@ (mov r8, r8)
 8009730:	7ff80000 	.word	0x7ff80000

08009734 <__assert_func>:
 8009734:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009736:	0014      	movs	r4, r2
 8009738:	001a      	movs	r2, r3
 800973a:	4b09      	ldr	r3, [pc, #36]	@ (8009760 <__assert_func+0x2c>)
 800973c:	0005      	movs	r5, r0
 800973e:	681b      	ldr	r3, [r3, #0]
 8009740:	000e      	movs	r6, r1
 8009742:	68d8      	ldr	r0, [r3, #12]
 8009744:	4b07      	ldr	r3, [pc, #28]	@ (8009764 <__assert_func+0x30>)
 8009746:	2c00      	cmp	r4, #0
 8009748:	d101      	bne.n	800974e <__assert_func+0x1a>
 800974a:	4b07      	ldr	r3, [pc, #28]	@ (8009768 <__assert_func+0x34>)
 800974c:	001c      	movs	r4, r3
 800974e:	4907      	ldr	r1, [pc, #28]	@ (800976c <__assert_func+0x38>)
 8009750:	9301      	str	r3, [sp, #4]
 8009752:	9402      	str	r4, [sp, #8]
 8009754:	002b      	movs	r3, r5
 8009756:	9600      	str	r6, [sp, #0]
 8009758:	f000 fc68 	bl	800a02c <fiprintf>
 800975c:	f000 fc76 	bl	800a04c <abort>
 8009760:	2000001c 	.word	0x2000001c
 8009764:	0800a427 	.word	0x0800a427
 8009768:	0800a462 	.word	0x0800a462
 800976c:	0800a434 	.word	0x0800a434

08009770 <_calloc_r>:
 8009770:	b570      	push	{r4, r5, r6, lr}
 8009772:	0c0b      	lsrs	r3, r1, #16
 8009774:	0c15      	lsrs	r5, r2, #16
 8009776:	2b00      	cmp	r3, #0
 8009778:	d11e      	bne.n	80097b8 <_calloc_r+0x48>
 800977a:	2d00      	cmp	r5, #0
 800977c:	d10c      	bne.n	8009798 <_calloc_r+0x28>
 800977e:	b289      	uxth	r1, r1
 8009780:	b294      	uxth	r4, r2
 8009782:	434c      	muls	r4, r1
 8009784:	0021      	movs	r1, r4
 8009786:	f7fd fa55 	bl	8006c34 <_malloc_r>
 800978a:	1e05      	subs	r5, r0, #0
 800978c:	d01b      	beq.n	80097c6 <_calloc_r+0x56>
 800978e:	0022      	movs	r2, r4
 8009790:	2100      	movs	r1, #0
 8009792:	f7fc facd 	bl	8005d30 <memset>
 8009796:	e016      	b.n	80097c6 <_calloc_r+0x56>
 8009798:	1c2b      	adds	r3, r5, #0
 800979a:	1c0c      	adds	r4, r1, #0
 800979c:	b289      	uxth	r1, r1
 800979e:	b292      	uxth	r2, r2
 80097a0:	434a      	muls	r2, r1
 80097a2:	b29b      	uxth	r3, r3
 80097a4:	b2a1      	uxth	r1, r4
 80097a6:	4359      	muls	r1, r3
 80097a8:	0c14      	lsrs	r4, r2, #16
 80097aa:	190c      	adds	r4, r1, r4
 80097ac:	0c23      	lsrs	r3, r4, #16
 80097ae:	d107      	bne.n	80097c0 <_calloc_r+0x50>
 80097b0:	0424      	lsls	r4, r4, #16
 80097b2:	b292      	uxth	r2, r2
 80097b4:	4314      	orrs	r4, r2
 80097b6:	e7e5      	b.n	8009784 <_calloc_r+0x14>
 80097b8:	2d00      	cmp	r5, #0
 80097ba:	d101      	bne.n	80097c0 <_calloc_r+0x50>
 80097bc:	1c14      	adds	r4, r2, #0
 80097be:	e7ed      	b.n	800979c <_calloc_r+0x2c>
 80097c0:	230c      	movs	r3, #12
 80097c2:	2500      	movs	r5, #0
 80097c4:	6003      	str	r3, [r0, #0]
 80097c6:	0028      	movs	r0, r5
 80097c8:	bd70      	pop	{r4, r5, r6, pc}

080097ca <rshift>:
 80097ca:	0002      	movs	r2, r0
 80097cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80097ce:	6904      	ldr	r4, [r0, #16]
 80097d0:	b085      	sub	sp, #20
 80097d2:	3214      	adds	r2, #20
 80097d4:	114b      	asrs	r3, r1, #5
 80097d6:	0016      	movs	r6, r2
 80097d8:	9302      	str	r3, [sp, #8]
 80097da:	429c      	cmp	r4, r3
 80097dc:	dd31      	ble.n	8009842 <rshift+0x78>
 80097de:	261f      	movs	r6, #31
 80097e0:	000f      	movs	r7, r1
 80097e2:	009b      	lsls	r3, r3, #2
 80097e4:	00a5      	lsls	r5, r4, #2
 80097e6:	18d3      	adds	r3, r2, r3
 80097e8:	4037      	ands	r7, r6
 80097ea:	1955      	adds	r5, r2, r5
 80097ec:	9300      	str	r3, [sp, #0]
 80097ee:	9701      	str	r7, [sp, #4]
 80097f0:	4231      	tst	r1, r6
 80097f2:	d10d      	bne.n	8009810 <rshift+0x46>
 80097f4:	0016      	movs	r6, r2
 80097f6:	0019      	movs	r1, r3
 80097f8:	428d      	cmp	r5, r1
 80097fa:	d836      	bhi.n	800986a <rshift+0xa0>
 80097fc:	9b00      	ldr	r3, [sp, #0]
 80097fe:	2600      	movs	r6, #0
 8009800:	3b03      	subs	r3, #3
 8009802:	429d      	cmp	r5, r3
 8009804:	d302      	bcc.n	800980c <rshift+0x42>
 8009806:	9b02      	ldr	r3, [sp, #8]
 8009808:	1ae4      	subs	r4, r4, r3
 800980a:	00a6      	lsls	r6, r4, #2
 800980c:	1996      	adds	r6, r2, r6
 800980e:	e018      	b.n	8009842 <rshift+0x78>
 8009810:	2120      	movs	r1, #32
 8009812:	9e01      	ldr	r6, [sp, #4]
 8009814:	9f01      	ldr	r7, [sp, #4]
 8009816:	1b89      	subs	r1, r1, r6
 8009818:	9e00      	ldr	r6, [sp, #0]
 800981a:	9103      	str	r1, [sp, #12]
 800981c:	ce02      	ldmia	r6!, {r1}
 800981e:	4694      	mov	ip, r2
 8009820:	40f9      	lsrs	r1, r7
 8009822:	42b5      	cmp	r5, r6
 8009824:	d816      	bhi.n	8009854 <rshift+0x8a>
 8009826:	9b00      	ldr	r3, [sp, #0]
 8009828:	2600      	movs	r6, #0
 800982a:	3301      	adds	r3, #1
 800982c:	429d      	cmp	r5, r3
 800982e:	d303      	bcc.n	8009838 <rshift+0x6e>
 8009830:	9b02      	ldr	r3, [sp, #8]
 8009832:	1ae4      	subs	r4, r4, r3
 8009834:	00a6      	lsls	r6, r4, #2
 8009836:	3e04      	subs	r6, #4
 8009838:	1996      	adds	r6, r2, r6
 800983a:	6031      	str	r1, [r6, #0]
 800983c:	2900      	cmp	r1, #0
 800983e:	d000      	beq.n	8009842 <rshift+0x78>
 8009840:	3604      	adds	r6, #4
 8009842:	1ab1      	subs	r1, r6, r2
 8009844:	1089      	asrs	r1, r1, #2
 8009846:	6101      	str	r1, [r0, #16]
 8009848:	4296      	cmp	r6, r2
 800984a:	d101      	bne.n	8009850 <rshift+0x86>
 800984c:	2300      	movs	r3, #0
 800984e:	6143      	str	r3, [r0, #20]
 8009850:	b005      	add	sp, #20
 8009852:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009854:	6837      	ldr	r7, [r6, #0]
 8009856:	9b03      	ldr	r3, [sp, #12]
 8009858:	409f      	lsls	r7, r3
 800985a:	430f      	orrs	r7, r1
 800985c:	4661      	mov	r1, ip
 800985e:	c180      	stmia	r1!, {r7}
 8009860:	468c      	mov	ip, r1
 8009862:	9b01      	ldr	r3, [sp, #4]
 8009864:	ce02      	ldmia	r6!, {r1}
 8009866:	40d9      	lsrs	r1, r3
 8009868:	e7db      	b.n	8009822 <rshift+0x58>
 800986a:	c980      	ldmia	r1!, {r7}
 800986c:	c680      	stmia	r6!, {r7}
 800986e:	e7c3      	b.n	80097f8 <rshift+0x2e>

08009870 <__hexdig_fun>:
 8009870:	0002      	movs	r2, r0
 8009872:	3a30      	subs	r2, #48	@ 0x30
 8009874:	0003      	movs	r3, r0
 8009876:	2a09      	cmp	r2, #9
 8009878:	d802      	bhi.n	8009880 <__hexdig_fun+0x10>
 800987a:	3b20      	subs	r3, #32
 800987c:	b2d8      	uxtb	r0, r3
 800987e:	4770      	bx	lr
 8009880:	0002      	movs	r2, r0
 8009882:	3a61      	subs	r2, #97	@ 0x61
 8009884:	2a05      	cmp	r2, #5
 8009886:	d801      	bhi.n	800988c <__hexdig_fun+0x1c>
 8009888:	3b47      	subs	r3, #71	@ 0x47
 800988a:	e7f7      	b.n	800987c <__hexdig_fun+0xc>
 800988c:	001a      	movs	r2, r3
 800988e:	3a41      	subs	r2, #65	@ 0x41
 8009890:	2000      	movs	r0, #0
 8009892:	2a05      	cmp	r2, #5
 8009894:	d8f3      	bhi.n	800987e <__hexdig_fun+0xe>
 8009896:	3b27      	subs	r3, #39	@ 0x27
 8009898:	e7f0      	b.n	800987c <__hexdig_fun+0xc>
	...

0800989c <__gethex>:
 800989c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800989e:	b089      	sub	sp, #36	@ 0x24
 80098a0:	9307      	str	r3, [sp, #28]
 80098a2:	680b      	ldr	r3, [r1, #0]
 80098a4:	9201      	str	r2, [sp, #4]
 80098a6:	9003      	str	r0, [sp, #12]
 80098a8:	9106      	str	r1, [sp, #24]
 80098aa:	1c9a      	adds	r2, r3, #2
 80098ac:	0011      	movs	r1, r2
 80098ae:	3201      	adds	r2, #1
 80098b0:	1e50      	subs	r0, r2, #1
 80098b2:	7800      	ldrb	r0, [r0, #0]
 80098b4:	2830      	cmp	r0, #48	@ 0x30
 80098b6:	d0f9      	beq.n	80098ac <__gethex+0x10>
 80098b8:	1acb      	subs	r3, r1, r3
 80098ba:	3b02      	subs	r3, #2
 80098bc:	9305      	str	r3, [sp, #20]
 80098be:	9100      	str	r1, [sp, #0]
 80098c0:	f7ff ffd6 	bl	8009870 <__hexdig_fun>
 80098c4:	2300      	movs	r3, #0
 80098c6:	001d      	movs	r5, r3
 80098c8:	9302      	str	r3, [sp, #8]
 80098ca:	4298      	cmp	r0, r3
 80098cc:	d11e      	bne.n	800990c <__gethex+0x70>
 80098ce:	2201      	movs	r2, #1
 80098d0:	49a6      	ldr	r1, [pc, #664]	@ (8009b6c <__gethex+0x2d0>)
 80098d2:	9800      	ldr	r0, [sp, #0]
 80098d4:	f7ff fed6 	bl	8009684 <strncmp>
 80098d8:	0007      	movs	r7, r0
 80098da:	42a8      	cmp	r0, r5
 80098dc:	d000      	beq.n	80098e0 <__gethex+0x44>
 80098de:	e06a      	b.n	80099b6 <__gethex+0x11a>
 80098e0:	9b00      	ldr	r3, [sp, #0]
 80098e2:	7858      	ldrb	r0, [r3, #1]
 80098e4:	1c5c      	adds	r4, r3, #1
 80098e6:	f7ff ffc3 	bl	8009870 <__hexdig_fun>
 80098ea:	2301      	movs	r3, #1
 80098ec:	9302      	str	r3, [sp, #8]
 80098ee:	42a8      	cmp	r0, r5
 80098f0:	d02f      	beq.n	8009952 <__gethex+0xb6>
 80098f2:	9400      	str	r4, [sp, #0]
 80098f4:	9b00      	ldr	r3, [sp, #0]
 80098f6:	7818      	ldrb	r0, [r3, #0]
 80098f8:	2830      	cmp	r0, #48	@ 0x30
 80098fa:	d009      	beq.n	8009910 <__gethex+0x74>
 80098fc:	f7ff ffb8 	bl	8009870 <__hexdig_fun>
 8009900:	4242      	negs	r2, r0
 8009902:	4142      	adcs	r2, r0
 8009904:	2301      	movs	r3, #1
 8009906:	0025      	movs	r5, r4
 8009908:	9202      	str	r2, [sp, #8]
 800990a:	9305      	str	r3, [sp, #20]
 800990c:	9c00      	ldr	r4, [sp, #0]
 800990e:	e004      	b.n	800991a <__gethex+0x7e>
 8009910:	9b00      	ldr	r3, [sp, #0]
 8009912:	3301      	adds	r3, #1
 8009914:	9300      	str	r3, [sp, #0]
 8009916:	e7ed      	b.n	80098f4 <__gethex+0x58>
 8009918:	3401      	adds	r4, #1
 800991a:	7820      	ldrb	r0, [r4, #0]
 800991c:	f7ff ffa8 	bl	8009870 <__hexdig_fun>
 8009920:	1e07      	subs	r7, r0, #0
 8009922:	d1f9      	bne.n	8009918 <__gethex+0x7c>
 8009924:	2201      	movs	r2, #1
 8009926:	0020      	movs	r0, r4
 8009928:	4990      	ldr	r1, [pc, #576]	@ (8009b6c <__gethex+0x2d0>)
 800992a:	f7ff feab 	bl	8009684 <strncmp>
 800992e:	2800      	cmp	r0, #0
 8009930:	d10d      	bne.n	800994e <__gethex+0xb2>
 8009932:	2d00      	cmp	r5, #0
 8009934:	d106      	bne.n	8009944 <__gethex+0xa8>
 8009936:	3401      	adds	r4, #1
 8009938:	0025      	movs	r5, r4
 800993a:	7820      	ldrb	r0, [r4, #0]
 800993c:	f7ff ff98 	bl	8009870 <__hexdig_fun>
 8009940:	2800      	cmp	r0, #0
 8009942:	d102      	bne.n	800994a <__gethex+0xae>
 8009944:	1b2d      	subs	r5, r5, r4
 8009946:	00af      	lsls	r7, r5, #2
 8009948:	e003      	b.n	8009952 <__gethex+0xb6>
 800994a:	3401      	adds	r4, #1
 800994c:	e7f5      	b.n	800993a <__gethex+0x9e>
 800994e:	2d00      	cmp	r5, #0
 8009950:	d1f8      	bne.n	8009944 <__gethex+0xa8>
 8009952:	2220      	movs	r2, #32
 8009954:	7823      	ldrb	r3, [r4, #0]
 8009956:	0026      	movs	r6, r4
 8009958:	4393      	bics	r3, r2
 800995a:	2b50      	cmp	r3, #80	@ 0x50
 800995c:	d11d      	bne.n	800999a <__gethex+0xfe>
 800995e:	7863      	ldrb	r3, [r4, #1]
 8009960:	2b2b      	cmp	r3, #43	@ 0x2b
 8009962:	d02d      	beq.n	80099c0 <__gethex+0x124>
 8009964:	2b2d      	cmp	r3, #45	@ 0x2d
 8009966:	d02f      	beq.n	80099c8 <__gethex+0x12c>
 8009968:	2300      	movs	r3, #0
 800996a:	1c66      	adds	r6, r4, #1
 800996c:	9304      	str	r3, [sp, #16]
 800996e:	7830      	ldrb	r0, [r6, #0]
 8009970:	f7ff ff7e 	bl	8009870 <__hexdig_fun>
 8009974:	1e43      	subs	r3, r0, #1
 8009976:	b2db      	uxtb	r3, r3
 8009978:	0005      	movs	r5, r0
 800997a:	2b18      	cmp	r3, #24
 800997c:	d82a      	bhi.n	80099d4 <__gethex+0x138>
 800997e:	7870      	ldrb	r0, [r6, #1]
 8009980:	f7ff ff76 	bl	8009870 <__hexdig_fun>
 8009984:	1e43      	subs	r3, r0, #1
 8009986:	b2db      	uxtb	r3, r3
 8009988:	3601      	adds	r6, #1
 800998a:	3d10      	subs	r5, #16
 800998c:	2b18      	cmp	r3, #24
 800998e:	d91d      	bls.n	80099cc <__gethex+0x130>
 8009990:	9b04      	ldr	r3, [sp, #16]
 8009992:	2b00      	cmp	r3, #0
 8009994:	d000      	beq.n	8009998 <__gethex+0xfc>
 8009996:	426d      	negs	r5, r5
 8009998:	197f      	adds	r7, r7, r5
 800999a:	9b06      	ldr	r3, [sp, #24]
 800999c:	601e      	str	r6, [r3, #0]
 800999e:	9b02      	ldr	r3, [sp, #8]
 80099a0:	2b00      	cmp	r3, #0
 80099a2:	d019      	beq.n	80099d8 <__gethex+0x13c>
 80099a4:	9b05      	ldr	r3, [sp, #20]
 80099a6:	2606      	movs	r6, #6
 80099a8:	425a      	negs	r2, r3
 80099aa:	4153      	adcs	r3, r2
 80099ac:	425b      	negs	r3, r3
 80099ae:	401e      	ands	r6, r3
 80099b0:	0030      	movs	r0, r6
 80099b2:	b009      	add	sp, #36	@ 0x24
 80099b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80099b6:	2301      	movs	r3, #1
 80099b8:	2700      	movs	r7, #0
 80099ba:	9c00      	ldr	r4, [sp, #0]
 80099bc:	9302      	str	r3, [sp, #8]
 80099be:	e7c8      	b.n	8009952 <__gethex+0xb6>
 80099c0:	2300      	movs	r3, #0
 80099c2:	9304      	str	r3, [sp, #16]
 80099c4:	1ca6      	adds	r6, r4, #2
 80099c6:	e7d2      	b.n	800996e <__gethex+0xd2>
 80099c8:	2301      	movs	r3, #1
 80099ca:	e7fa      	b.n	80099c2 <__gethex+0x126>
 80099cc:	230a      	movs	r3, #10
 80099ce:	435d      	muls	r5, r3
 80099d0:	182d      	adds	r5, r5, r0
 80099d2:	e7d4      	b.n	800997e <__gethex+0xe2>
 80099d4:	0026      	movs	r6, r4
 80099d6:	e7e0      	b.n	800999a <__gethex+0xfe>
 80099d8:	9b00      	ldr	r3, [sp, #0]
 80099da:	9902      	ldr	r1, [sp, #8]
 80099dc:	1ae3      	subs	r3, r4, r3
 80099de:	3b01      	subs	r3, #1
 80099e0:	2b07      	cmp	r3, #7
 80099e2:	dc0a      	bgt.n	80099fa <__gethex+0x15e>
 80099e4:	9803      	ldr	r0, [sp, #12]
 80099e6:	f7fd f9b5 	bl	8006d54 <_Balloc>
 80099ea:	1e05      	subs	r5, r0, #0
 80099ec:	d108      	bne.n	8009a00 <__gethex+0x164>
 80099ee:	002a      	movs	r2, r5
 80099f0:	21e4      	movs	r1, #228	@ 0xe4
 80099f2:	4b5f      	ldr	r3, [pc, #380]	@ (8009b70 <__gethex+0x2d4>)
 80099f4:	485f      	ldr	r0, [pc, #380]	@ (8009b74 <__gethex+0x2d8>)
 80099f6:	f7ff fe9d 	bl	8009734 <__assert_func>
 80099fa:	3101      	adds	r1, #1
 80099fc:	105b      	asrs	r3, r3, #1
 80099fe:	e7ef      	b.n	80099e0 <__gethex+0x144>
 8009a00:	0003      	movs	r3, r0
 8009a02:	3314      	adds	r3, #20
 8009a04:	9302      	str	r3, [sp, #8]
 8009a06:	9305      	str	r3, [sp, #20]
 8009a08:	2300      	movs	r3, #0
 8009a0a:	001e      	movs	r6, r3
 8009a0c:	9304      	str	r3, [sp, #16]
 8009a0e:	9b00      	ldr	r3, [sp, #0]
 8009a10:	42a3      	cmp	r3, r4
 8009a12:	d338      	bcc.n	8009a86 <__gethex+0x1ea>
 8009a14:	9c05      	ldr	r4, [sp, #20]
 8009a16:	9b02      	ldr	r3, [sp, #8]
 8009a18:	c440      	stmia	r4!, {r6}
 8009a1a:	1ae4      	subs	r4, r4, r3
 8009a1c:	10a4      	asrs	r4, r4, #2
 8009a1e:	0030      	movs	r0, r6
 8009a20:	612c      	str	r4, [r5, #16]
 8009a22:	f7fd fa8f 	bl	8006f44 <__hi0bits>
 8009a26:	9b01      	ldr	r3, [sp, #4]
 8009a28:	0164      	lsls	r4, r4, #5
 8009a2a:	681b      	ldr	r3, [r3, #0]
 8009a2c:	1a26      	subs	r6, r4, r0
 8009a2e:	9300      	str	r3, [sp, #0]
 8009a30:	429e      	cmp	r6, r3
 8009a32:	dd52      	ble.n	8009ada <__gethex+0x23e>
 8009a34:	1af6      	subs	r6, r6, r3
 8009a36:	0031      	movs	r1, r6
 8009a38:	0028      	movs	r0, r5
 8009a3a:	f7fd fe2a 	bl	8007692 <__any_on>
 8009a3e:	1e04      	subs	r4, r0, #0
 8009a40:	d00f      	beq.n	8009a62 <__gethex+0x1c6>
 8009a42:	2401      	movs	r4, #1
 8009a44:	211f      	movs	r1, #31
 8009a46:	0020      	movs	r0, r4
 8009a48:	1e73      	subs	r3, r6, #1
 8009a4a:	4019      	ands	r1, r3
 8009a4c:	4088      	lsls	r0, r1
 8009a4e:	0001      	movs	r1, r0
 8009a50:	115a      	asrs	r2, r3, #5
 8009a52:	9802      	ldr	r0, [sp, #8]
 8009a54:	0092      	lsls	r2, r2, #2
 8009a56:	5812      	ldr	r2, [r2, r0]
 8009a58:	420a      	tst	r2, r1
 8009a5a:	d002      	beq.n	8009a62 <__gethex+0x1c6>
 8009a5c:	42a3      	cmp	r3, r4
 8009a5e:	dc34      	bgt.n	8009aca <__gethex+0x22e>
 8009a60:	2402      	movs	r4, #2
 8009a62:	0031      	movs	r1, r6
 8009a64:	0028      	movs	r0, r5
 8009a66:	f7ff feb0 	bl	80097ca <rshift>
 8009a6a:	19bf      	adds	r7, r7, r6
 8009a6c:	9b01      	ldr	r3, [sp, #4]
 8009a6e:	689b      	ldr	r3, [r3, #8]
 8009a70:	42bb      	cmp	r3, r7
 8009a72:	da42      	bge.n	8009afa <__gethex+0x25e>
 8009a74:	0029      	movs	r1, r5
 8009a76:	9803      	ldr	r0, [sp, #12]
 8009a78:	f7fd f9b0 	bl	8006ddc <_Bfree>
 8009a7c:	2300      	movs	r3, #0
 8009a7e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8009a80:	26a3      	movs	r6, #163	@ 0xa3
 8009a82:	6013      	str	r3, [r2, #0]
 8009a84:	e794      	b.n	80099b0 <__gethex+0x114>
 8009a86:	3c01      	subs	r4, #1
 8009a88:	7823      	ldrb	r3, [r4, #0]
 8009a8a:	2b2e      	cmp	r3, #46	@ 0x2e
 8009a8c:	d012      	beq.n	8009ab4 <__gethex+0x218>
 8009a8e:	9b04      	ldr	r3, [sp, #16]
 8009a90:	2b20      	cmp	r3, #32
 8009a92:	d104      	bne.n	8009a9e <__gethex+0x202>
 8009a94:	9b05      	ldr	r3, [sp, #20]
 8009a96:	c340      	stmia	r3!, {r6}
 8009a98:	2600      	movs	r6, #0
 8009a9a:	9305      	str	r3, [sp, #20]
 8009a9c:	9604      	str	r6, [sp, #16]
 8009a9e:	7820      	ldrb	r0, [r4, #0]
 8009aa0:	f7ff fee6 	bl	8009870 <__hexdig_fun>
 8009aa4:	230f      	movs	r3, #15
 8009aa6:	4018      	ands	r0, r3
 8009aa8:	9b04      	ldr	r3, [sp, #16]
 8009aaa:	4098      	lsls	r0, r3
 8009aac:	3304      	adds	r3, #4
 8009aae:	4306      	orrs	r6, r0
 8009ab0:	9304      	str	r3, [sp, #16]
 8009ab2:	e7ac      	b.n	8009a0e <__gethex+0x172>
 8009ab4:	9b00      	ldr	r3, [sp, #0]
 8009ab6:	42a3      	cmp	r3, r4
 8009ab8:	d8e9      	bhi.n	8009a8e <__gethex+0x1f2>
 8009aba:	2201      	movs	r2, #1
 8009abc:	0020      	movs	r0, r4
 8009abe:	492b      	ldr	r1, [pc, #172]	@ (8009b6c <__gethex+0x2d0>)
 8009ac0:	f7ff fde0 	bl	8009684 <strncmp>
 8009ac4:	2800      	cmp	r0, #0
 8009ac6:	d1e2      	bne.n	8009a8e <__gethex+0x1f2>
 8009ac8:	e7a1      	b.n	8009a0e <__gethex+0x172>
 8009aca:	0028      	movs	r0, r5
 8009acc:	1eb1      	subs	r1, r6, #2
 8009ace:	f7fd fde0 	bl	8007692 <__any_on>
 8009ad2:	2800      	cmp	r0, #0
 8009ad4:	d0c4      	beq.n	8009a60 <__gethex+0x1c4>
 8009ad6:	2403      	movs	r4, #3
 8009ad8:	e7c3      	b.n	8009a62 <__gethex+0x1c6>
 8009ada:	9b00      	ldr	r3, [sp, #0]
 8009adc:	2400      	movs	r4, #0
 8009ade:	429e      	cmp	r6, r3
 8009ae0:	dac4      	bge.n	8009a6c <__gethex+0x1d0>
 8009ae2:	1b9e      	subs	r6, r3, r6
 8009ae4:	0029      	movs	r1, r5
 8009ae6:	0032      	movs	r2, r6
 8009ae8:	9803      	ldr	r0, [sp, #12]
 8009aea:	f7fd fb99 	bl	8007220 <__lshift>
 8009aee:	0003      	movs	r3, r0
 8009af0:	3314      	adds	r3, #20
 8009af2:	0005      	movs	r5, r0
 8009af4:	1bbf      	subs	r7, r7, r6
 8009af6:	9302      	str	r3, [sp, #8]
 8009af8:	e7b8      	b.n	8009a6c <__gethex+0x1d0>
 8009afa:	9b01      	ldr	r3, [sp, #4]
 8009afc:	685e      	ldr	r6, [r3, #4]
 8009afe:	42be      	cmp	r6, r7
 8009b00:	dd6f      	ble.n	8009be2 <__gethex+0x346>
 8009b02:	9b00      	ldr	r3, [sp, #0]
 8009b04:	1bf6      	subs	r6, r6, r7
 8009b06:	42b3      	cmp	r3, r6
 8009b08:	dc36      	bgt.n	8009b78 <__gethex+0x2dc>
 8009b0a:	9b01      	ldr	r3, [sp, #4]
 8009b0c:	68db      	ldr	r3, [r3, #12]
 8009b0e:	2b02      	cmp	r3, #2
 8009b10:	d024      	beq.n	8009b5c <__gethex+0x2c0>
 8009b12:	2b03      	cmp	r3, #3
 8009b14:	d026      	beq.n	8009b64 <__gethex+0x2c8>
 8009b16:	2b01      	cmp	r3, #1
 8009b18:	d117      	bne.n	8009b4a <__gethex+0x2ae>
 8009b1a:	9b00      	ldr	r3, [sp, #0]
 8009b1c:	42b3      	cmp	r3, r6
 8009b1e:	d114      	bne.n	8009b4a <__gethex+0x2ae>
 8009b20:	2b01      	cmp	r3, #1
 8009b22:	d10b      	bne.n	8009b3c <__gethex+0x2a0>
 8009b24:	9b01      	ldr	r3, [sp, #4]
 8009b26:	9a07      	ldr	r2, [sp, #28]
 8009b28:	685b      	ldr	r3, [r3, #4]
 8009b2a:	2662      	movs	r6, #98	@ 0x62
 8009b2c:	6013      	str	r3, [r2, #0]
 8009b2e:	2301      	movs	r3, #1
 8009b30:	9a02      	ldr	r2, [sp, #8]
 8009b32:	612b      	str	r3, [r5, #16]
 8009b34:	6013      	str	r3, [r2, #0]
 8009b36:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009b38:	601d      	str	r5, [r3, #0]
 8009b3a:	e739      	b.n	80099b0 <__gethex+0x114>
 8009b3c:	9900      	ldr	r1, [sp, #0]
 8009b3e:	0028      	movs	r0, r5
 8009b40:	3901      	subs	r1, #1
 8009b42:	f7fd fda6 	bl	8007692 <__any_on>
 8009b46:	2800      	cmp	r0, #0
 8009b48:	d1ec      	bne.n	8009b24 <__gethex+0x288>
 8009b4a:	0029      	movs	r1, r5
 8009b4c:	9803      	ldr	r0, [sp, #12]
 8009b4e:	f7fd f945 	bl	8006ddc <_Bfree>
 8009b52:	2300      	movs	r3, #0
 8009b54:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8009b56:	2650      	movs	r6, #80	@ 0x50
 8009b58:	6013      	str	r3, [r2, #0]
 8009b5a:	e729      	b.n	80099b0 <__gethex+0x114>
 8009b5c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8009b5e:	2b00      	cmp	r3, #0
 8009b60:	d1f3      	bne.n	8009b4a <__gethex+0x2ae>
 8009b62:	e7df      	b.n	8009b24 <__gethex+0x288>
 8009b64:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8009b66:	2b00      	cmp	r3, #0
 8009b68:	d1dc      	bne.n	8009b24 <__gethex+0x288>
 8009b6a:	e7ee      	b.n	8009b4a <__gethex+0x2ae>
 8009b6c:	0800a3f1 	.word	0x0800a3f1
 8009b70:	0800a387 	.word	0x0800a387
 8009b74:	0800a463 	.word	0x0800a463
 8009b78:	1e77      	subs	r7, r6, #1
 8009b7a:	2c00      	cmp	r4, #0
 8009b7c:	d12f      	bne.n	8009bde <__gethex+0x342>
 8009b7e:	2f00      	cmp	r7, #0
 8009b80:	d004      	beq.n	8009b8c <__gethex+0x2f0>
 8009b82:	0039      	movs	r1, r7
 8009b84:	0028      	movs	r0, r5
 8009b86:	f7fd fd84 	bl	8007692 <__any_on>
 8009b8a:	0004      	movs	r4, r0
 8009b8c:	231f      	movs	r3, #31
 8009b8e:	117a      	asrs	r2, r7, #5
 8009b90:	401f      	ands	r7, r3
 8009b92:	3b1e      	subs	r3, #30
 8009b94:	40bb      	lsls	r3, r7
 8009b96:	9902      	ldr	r1, [sp, #8]
 8009b98:	0092      	lsls	r2, r2, #2
 8009b9a:	5852      	ldr	r2, [r2, r1]
 8009b9c:	421a      	tst	r2, r3
 8009b9e:	d001      	beq.n	8009ba4 <__gethex+0x308>
 8009ba0:	2302      	movs	r3, #2
 8009ba2:	431c      	orrs	r4, r3
 8009ba4:	9b00      	ldr	r3, [sp, #0]
 8009ba6:	0031      	movs	r1, r6
 8009ba8:	1b9b      	subs	r3, r3, r6
 8009baa:	2602      	movs	r6, #2
 8009bac:	0028      	movs	r0, r5
 8009bae:	9300      	str	r3, [sp, #0]
 8009bb0:	f7ff fe0b 	bl	80097ca <rshift>
 8009bb4:	9b01      	ldr	r3, [sp, #4]
 8009bb6:	685f      	ldr	r7, [r3, #4]
 8009bb8:	2c00      	cmp	r4, #0
 8009bba:	d03f      	beq.n	8009c3c <__gethex+0x3a0>
 8009bbc:	9b01      	ldr	r3, [sp, #4]
 8009bbe:	68db      	ldr	r3, [r3, #12]
 8009bc0:	2b02      	cmp	r3, #2
 8009bc2:	d010      	beq.n	8009be6 <__gethex+0x34a>
 8009bc4:	2b03      	cmp	r3, #3
 8009bc6:	d012      	beq.n	8009bee <__gethex+0x352>
 8009bc8:	2b01      	cmp	r3, #1
 8009bca:	d106      	bne.n	8009bda <__gethex+0x33e>
 8009bcc:	07a2      	lsls	r2, r4, #30
 8009bce:	d504      	bpl.n	8009bda <__gethex+0x33e>
 8009bd0:	9a02      	ldr	r2, [sp, #8]
 8009bd2:	6812      	ldr	r2, [r2, #0]
 8009bd4:	4314      	orrs	r4, r2
 8009bd6:	421c      	tst	r4, r3
 8009bd8:	d10c      	bne.n	8009bf4 <__gethex+0x358>
 8009bda:	2310      	movs	r3, #16
 8009bdc:	e02d      	b.n	8009c3a <__gethex+0x39e>
 8009bde:	2401      	movs	r4, #1
 8009be0:	e7d4      	b.n	8009b8c <__gethex+0x2f0>
 8009be2:	2601      	movs	r6, #1
 8009be4:	e7e8      	b.n	8009bb8 <__gethex+0x31c>
 8009be6:	2301      	movs	r3, #1
 8009be8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8009bea:	1a9b      	subs	r3, r3, r2
 8009bec:	930f      	str	r3, [sp, #60]	@ 0x3c
 8009bee:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8009bf0:	2b00      	cmp	r3, #0
 8009bf2:	d0f2      	beq.n	8009bda <__gethex+0x33e>
 8009bf4:	692b      	ldr	r3, [r5, #16]
 8009bf6:	2000      	movs	r0, #0
 8009bf8:	9302      	str	r3, [sp, #8]
 8009bfa:	009b      	lsls	r3, r3, #2
 8009bfc:	9304      	str	r3, [sp, #16]
 8009bfe:	002b      	movs	r3, r5
 8009c00:	9a04      	ldr	r2, [sp, #16]
 8009c02:	3314      	adds	r3, #20
 8009c04:	1899      	adds	r1, r3, r2
 8009c06:	681a      	ldr	r2, [r3, #0]
 8009c08:	1c54      	adds	r4, r2, #1
 8009c0a:	d01c      	beq.n	8009c46 <__gethex+0x3aa>
 8009c0c:	3201      	adds	r2, #1
 8009c0e:	601a      	str	r2, [r3, #0]
 8009c10:	002b      	movs	r3, r5
 8009c12:	3314      	adds	r3, #20
 8009c14:	2e02      	cmp	r6, #2
 8009c16:	d13f      	bne.n	8009c98 <__gethex+0x3fc>
 8009c18:	9a01      	ldr	r2, [sp, #4]
 8009c1a:	9900      	ldr	r1, [sp, #0]
 8009c1c:	6812      	ldr	r2, [r2, #0]
 8009c1e:	3a01      	subs	r2, #1
 8009c20:	428a      	cmp	r2, r1
 8009c22:	d109      	bne.n	8009c38 <__gethex+0x39c>
 8009c24:	000a      	movs	r2, r1
 8009c26:	201f      	movs	r0, #31
 8009c28:	4010      	ands	r0, r2
 8009c2a:	2201      	movs	r2, #1
 8009c2c:	4082      	lsls	r2, r0
 8009c2e:	1149      	asrs	r1, r1, #5
 8009c30:	0089      	lsls	r1, r1, #2
 8009c32:	58cb      	ldr	r3, [r1, r3]
 8009c34:	4213      	tst	r3, r2
 8009c36:	d13d      	bne.n	8009cb4 <__gethex+0x418>
 8009c38:	2320      	movs	r3, #32
 8009c3a:	431e      	orrs	r6, r3
 8009c3c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009c3e:	601d      	str	r5, [r3, #0]
 8009c40:	9b07      	ldr	r3, [sp, #28]
 8009c42:	601f      	str	r7, [r3, #0]
 8009c44:	e6b4      	b.n	80099b0 <__gethex+0x114>
 8009c46:	c301      	stmia	r3!, {r0}
 8009c48:	4299      	cmp	r1, r3
 8009c4a:	d8dc      	bhi.n	8009c06 <__gethex+0x36a>
 8009c4c:	68ab      	ldr	r3, [r5, #8]
 8009c4e:	9a02      	ldr	r2, [sp, #8]
 8009c50:	429a      	cmp	r2, r3
 8009c52:	db18      	blt.n	8009c86 <__gethex+0x3ea>
 8009c54:	6869      	ldr	r1, [r5, #4]
 8009c56:	9803      	ldr	r0, [sp, #12]
 8009c58:	3101      	adds	r1, #1
 8009c5a:	f7fd f87b 	bl	8006d54 <_Balloc>
 8009c5e:	1e04      	subs	r4, r0, #0
 8009c60:	d104      	bne.n	8009c6c <__gethex+0x3d0>
 8009c62:	0022      	movs	r2, r4
 8009c64:	2184      	movs	r1, #132	@ 0x84
 8009c66:	4b1d      	ldr	r3, [pc, #116]	@ (8009cdc <__gethex+0x440>)
 8009c68:	481d      	ldr	r0, [pc, #116]	@ (8009ce0 <__gethex+0x444>)
 8009c6a:	e6c4      	b.n	80099f6 <__gethex+0x15a>
 8009c6c:	0029      	movs	r1, r5
 8009c6e:	692a      	ldr	r2, [r5, #16]
 8009c70:	310c      	adds	r1, #12
 8009c72:	3202      	adds	r2, #2
 8009c74:	0092      	lsls	r2, r2, #2
 8009c76:	300c      	adds	r0, #12
 8009c78:	f7ff fd4c 	bl	8009714 <memcpy>
 8009c7c:	0029      	movs	r1, r5
 8009c7e:	9803      	ldr	r0, [sp, #12]
 8009c80:	f7fd f8ac 	bl	8006ddc <_Bfree>
 8009c84:	0025      	movs	r5, r4
 8009c86:	692b      	ldr	r3, [r5, #16]
 8009c88:	1c5a      	adds	r2, r3, #1
 8009c8a:	612a      	str	r2, [r5, #16]
 8009c8c:	2201      	movs	r2, #1
 8009c8e:	3304      	adds	r3, #4
 8009c90:	009b      	lsls	r3, r3, #2
 8009c92:	18eb      	adds	r3, r5, r3
 8009c94:	605a      	str	r2, [r3, #4]
 8009c96:	e7bb      	b.n	8009c10 <__gethex+0x374>
 8009c98:	692a      	ldr	r2, [r5, #16]
 8009c9a:	9902      	ldr	r1, [sp, #8]
 8009c9c:	428a      	cmp	r2, r1
 8009c9e:	dd0b      	ble.n	8009cb8 <__gethex+0x41c>
 8009ca0:	2101      	movs	r1, #1
 8009ca2:	0028      	movs	r0, r5
 8009ca4:	f7ff fd91 	bl	80097ca <rshift>
 8009ca8:	9b01      	ldr	r3, [sp, #4]
 8009caa:	3701      	adds	r7, #1
 8009cac:	689b      	ldr	r3, [r3, #8]
 8009cae:	42bb      	cmp	r3, r7
 8009cb0:	da00      	bge.n	8009cb4 <__gethex+0x418>
 8009cb2:	e6df      	b.n	8009a74 <__gethex+0x1d8>
 8009cb4:	2601      	movs	r6, #1
 8009cb6:	e7bf      	b.n	8009c38 <__gethex+0x39c>
 8009cb8:	221f      	movs	r2, #31
 8009cba:	9c00      	ldr	r4, [sp, #0]
 8009cbc:	9900      	ldr	r1, [sp, #0]
 8009cbe:	4014      	ands	r4, r2
 8009cc0:	4211      	tst	r1, r2
 8009cc2:	d0f7      	beq.n	8009cb4 <__gethex+0x418>
 8009cc4:	9a04      	ldr	r2, [sp, #16]
 8009cc6:	189b      	adds	r3, r3, r2
 8009cc8:	3b04      	subs	r3, #4
 8009cca:	6818      	ldr	r0, [r3, #0]
 8009ccc:	f7fd f93a 	bl	8006f44 <__hi0bits>
 8009cd0:	2320      	movs	r3, #32
 8009cd2:	1b1b      	subs	r3, r3, r4
 8009cd4:	4298      	cmp	r0, r3
 8009cd6:	dbe3      	blt.n	8009ca0 <__gethex+0x404>
 8009cd8:	e7ec      	b.n	8009cb4 <__gethex+0x418>
 8009cda:	46c0      	nop			@ (mov r8, r8)
 8009cdc:	0800a387 	.word	0x0800a387
 8009ce0:	0800a463 	.word	0x0800a463

08009ce4 <L_shift>:
 8009ce4:	2308      	movs	r3, #8
 8009ce6:	b570      	push	{r4, r5, r6, lr}
 8009ce8:	2520      	movs	r5, #32
 8009cea:	1a9a      	subs	r2, r3, r2
 8009cec:	0092      	lsls	r2, r2, #2
 8009cee:	1aad      	subs	r5, r5, r2
 8009cf0:	6843      	ldr	r3, [r0, #4]
 8009cf2:	6804      	ldr	r4, [r0, #0]
 8009cf4:	001e      	movs	r6, r3
 8009cf6:	40ae      	lsls	r6, r5
 8009cf8:	40d3      	lsrs	r3, r2
 8009cfa:	4334      	orrs	r4, r6
 8009cfc:	6004      	str	r4, [r0, #0]
 8009cfe:	6043      	str	r3, [r0, #4]
 8009d00:	3004      	adds	r0, #4
 8009d02:	4288      	cmp	r0, r1
 8009d04:	d3f4      	bcc.n	8009cf0 <L_shift+0xc>
 8009d06:	bd70      	pop	{r4, r5, r6, pc}

08009d08 <__match>:
 8009d08:	b530      	push	{r4, r5, lr}
 8009d0a:	6803      	ldr	r3, [r0, #0]
 8009d0c:	780c      	ldrb	r4, [r1, #0]
 8009d0e:	3301      	adds	r3, #1
 8009d10:	2c00      	cmp	r4, #0
 8009d12:	d102      	bne.n	8009d1a <__match+0x12>
 8009d14:	6003      	str	r3, [r0, #0]
 8009d16:	2001      	movs	r0, #1
 8009d18:	bd30      	pop	{r4, r5, pc}
 8009d1a:	781a      	ldrb	r2, [r3, #0]
 8009d1c:	0015      	movs	r5, r2
 8009d1e:	3d41      	subs	r5, #65	@ 0x41
 8009d20:	2d19      	cmp	r5, #25
 8009d22:	d800      	bhi.n	8009d26 <__match+0x1e>
 8009d24:	3220      	adds	r2, #32
 8009d26:	3101      	adds	r1, #1
 8009d28:	42a2      	cmp	r2, r4
 8009d2a:	d0ef      	beq.n	8009d0c <__match+0x4>
 8009d2c:	2000      	movs	r0, #0
 8009d2e:	e7f3      	b.n	8009d18 <__match+0x10>

08009d30 <__hexnan>:
 8009d30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009d32:	680b      	ldr	r3, [r1, #0]
 8009d34:	b08b      	sub	sp, #44	@ 0x2c
 8009d36:	9201      	str	r2, [sp, #4]
 8009d38:	9901      	ldr	r1, [sp, #4]
 8009d3a:	115a      	asrs	r2, r3, #5
 8009d3c:	0092      	lsls	r2, r2, #2
 8009d3e:	188a      	adds	r2, r1, r2
 8009d40:	9202      	str	r2, [sp, #8]
 8009d42:	0019      	movs	r1, r3
 8009d44:	221f      	movs	r2, #31
 8009d46:	4011      	ands	r1, r2
 8009d48:	9008      	str	r0, [sp, #32]
 8009d4a:	9106      	str	r1, [sp, #24]
 8009d4c:	4213      	tst	r3, r2
 8009d4e:	d002      	beq.n	8009d56 <__hexnan+0x26>
 8009d50:	9b02      	ldr	r3, [sp, #8]
 8009d52:	3304      	adds	r3, #4
 8009d54:	9302      	str	r3, [sp, #8]
 8009d56:	9b02      	ldr	r3, [sp, #8]
 8009d58:	2500      	movs	r5, #0
 8009d5a:	1f1f      	subs	r7, r3, #4
 8009d5c:	003e      	movs	r6, r7
 8009d5e:	003c      	movs	r4, r7
 8009d60:	9b08      	ldr	r3, [sp, #32]
 8009d62:	603d      	str	r5, [r7, #0]
 8009d64:	681b      	ldr	r3, [r3, #0]
 8009d66:	9507      	str	r5, [sp, #28]
 8009d68:	9305      	str	r3, [sp, #20]
 8009d6a:	9503      	str	r5, [sp, #12]
 8009d6c:	9b05      	ldr	r3, [sp, #20]
 8009d6e:	3301      	adds	r3, #1
 8009d70:	9309      	str	r3, [sp, #36]	@ 0x24
 8009d72:	9b05      	ldr	r3, [sp, #20]
 8009d74:	785b      	ldrb	r3, [r3, #1]
 8009d76:	9304      	str	r3, [sp, #16]
 8009d78:	2b00      	cmp	r3, #0
 8009d7a:	d028      	beq.n	8009dce <__hexnan+0x9e>
 8009d7c:	9804      	ldr	r0, [sp, #16]
 8009d7e:	f7ff fd77 	bl	8009870 <__hexdig_fun>
 8009d82:	2800      	cmp	r0, #0
 8009d84:	d155      	bne.n	8009e32 <__hexnan+0x102>
 8009d86:	9b04      	ldr	r3, [sp, #16]
 8009d88:	2b20      	cmp	r3, #32
 8009d8a:	d819      	bhi.n	8009dc0 <__hexnan+0x90>
 8009d8c:	9b03      	ldr	r3, [sp, #12]
 8009d8e:	9a07      	ldr	r2, [sp, #28]
 8009d90:	4293      	cmp	r3, r2
 8009d92:	dd12      	ble.n	8009dba <__hexnan+0x8a>
 8009d94:	42b4      	cmp	r4, r6
 8009d96:	d206      	bcs.n	8009da6 <__hexnan+0x76>
 8009d98:	2d07      	cmp	r5, #7
 8009d9a:	dc04      	bgt.n	8009da6 <__hexnan+0x76>
 8009d9c:	002a      	movs	r2, r5
 8009d9e:	0031      	movs	r1, r6
 8009da0:	0020      	movs	r0, r4
 8009da2:	f7ff ff9f 	bl	8009ce4 <L_shift>
 8009da6:	9b01      	ldr	r3, [sp, #4]
 8009da8:	2508      	movs	r5, #8
 8009daa:	429c      	cmp	r4, r3
 8009dac:	d905      	bls.n	8009dba <__hexnan+0x8a>
 8009dae:	1f26      	subs	r6, r4, #4
 8009db0:	2500      	movs	r5, #0
 8009db2:	0034      	movs	r4, r6
 8009db4:	9b03      	ldr	r3, [sp, #12]
 8009db6:	6035      	str	r5, [r6, #0]
 8009db8:	9307      	str	r3, [sp, #28]
 8009dba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009dbc:	9305      	str	r3, [sp, #20]
 8009dbe:	e7d5      	b.n	8009d6c <__hexnan+0x3c>
 8009dc0:	9b04      	ldr	r3, [sp, #16]
 8009dc2:	2b29      	cmp	r3, #41	@ 0x29
 8009dc4:	d15a      	bne.n	8009e7c <__hexnan+0x14c>
 8009dc6:	9b05      	ldr	r3, [sp, #20]
 8009dc8:	9a08      	ldr	r2, [sp, #32]
 8009dca:	3302      	adds	r3, #2
 8009dcc:	6013      	str	r3, [r2, #0]
 8009dce:	9b03      	ldr	r3, [sp, #12]
 8009dd0:	2b00      	cmp	r3, #0
 8009dd2:	d053      	beq.n	8009e7c <__hexnan+0x14c>
 8009dd4:	42b4      	cmp	r4, r6
 8009dd6:	d206      	bcs.n	8009de6 <__hexnan+0xb6>
 8009dd8:	2d07      	cmp	r5, #7
 8009dda:	dc04      	bgt.n	8009de6 <__hexnan+0xb6>
 8009ddc:	002a      	movs	r2, r5
 8009dde:	0031      	movs	r1, r6
 8009de0:	0020      	movs	r0, r4
 8009de2:	f7ff ff7f 	bl	8009ce4 <L_shift>
 8009de6:	9b01      	ldr	r3, [sp, #4]
 8009de8:	429c      	cmp	r4, r3
 8009dea:	d936      	bls.n	8009e5a <__hexnan+0x12a>
 8009dec:	001a      	movs	r2, r3
 8009dee:	0023      	movs	r3, r4
 8009df0:	cb02      	ldmia	r3!, {r1}
 8009df2:	c202      	stmia	r2!, {r1}
 8009df4:	429f      	cmp	r7, r3
 8009df6:	d2fb      	bcs.n	8009df0 <__hexnan+0xc0>
 8009df8:	9b02      	ldr	r3, [sp, #8]
 8009dfa:	1c62      	adds	r2, r4, #1
 8009dfc:	1ed9      	subs	r1, r3, #3
 8009dfe:	2304      	movs	r3, #4
 8009e00:	4291      	cmp	r1, r2
 8009e02:	d305      	bcc.n	8009e10 <__hexnan+0xe0>
 8009e04:	9b02      	ldr	r3, [sp, #8]
 8009e06:	3b04      	subs	r3, #4
 8009e08:	1b1b      	subs	r3, r3, r4
 8009e0a:	089b      	lsrs	r3, r3, #2
 8009e0c:	3301      	adds	r3, #1
 8009e0e:	009b      	lsls	r3, r3, #2
 8009e10:	9a01      	ldr	r2, [sp, #4]
 8009e12:	18d3      	adds	r3, r2, r3
 8009e14:	2200      	movs	r2, #0
 8009e16:	c304      	stmia	r3!, {r2}
 8009e18:	429f      	cmp	r7, r3
 8009e1a:	d2fc      	bcs.n	8009e16 <__hexnan+0xe6>
 8009e1c:	683b      	ldr	r3, [r7, #0]
 8009e1e:	2b00      	cmp	r3, #0
 8009e20:	d104      	bne.n	8009e2c <__hexnan+0xfc>
 8009e22:	9b01      	ldr	r3, [sp, #4]
 8009e24:	429f      	cmp	r7, r3
 8009e26:	d127      	bne.n	8009e78 <__hexnan+0x148>
 8009e28:	2301      	movs	r3, #1
 8009e2a:	603b      	str	r3, [r7, #0]
 8009e2c:	2005      	movs	r0, #5
 8009e2e:	b00b      	add	sp, #44	@ 0x2c
 8009e30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009e32:	9b03      	ldr	r3, [sp, #12]
 8009e34:	3501      	adds	r5, #1
 8009e36:	3301      	adds	r3, #1
 8009e38:	9303      	str	r3, [sp, #12]
 8009e3a:	2d08      	cmp	r5, #8
 8009e3c:	dd06      	ble.n	8009e4c <__hexnan+0x11c>
 8009e3e:	9b01      	ldr	r3, [sp, #4]
 8009e40:	429c      	cmp	r4, r3
 8009e42:	d9ba      	bls.n	8009dba <__hexnan+0x8a>
 8009e44:	2300      	movs	r3, #0
 8009e46:	2501      	movs	r5, #1
 8009e48:	3c04      	subs	r4, #4
 8009e4a:	6023      	str	r3, [r4, #0]
 8009e4c:	220f      	movs	r2, #15
 8009e4e:	6823      	ldr	r3, [r4, #0]
 8009e50:	4010      	ands	r0, r2
 8009e52:	011b      	lsls	r3, r3, #4
 8009e54:	4303      	orrs	r3, r0
 8009e56:	6023      	str	r3, [r4, #0]
 8009e58:	e7af      	b.n	8009dba <__hexnan+0x8a>
 8009e5a:	9b06      	ldr	r3, [sp, #24]
 8009e5c:	2b00      	cmp	r3, #0
 8009e5e:	d0dd      	beq.n	8009e1c <__hexnan+0xec>
 8009e60:	2320      	movs	r3, #32
 8009e62:	9a06      	ldr	r2, [sp, #24]
 8009e64:	9902      	ldr	r1, [sp, #8]
 8009e66:	1a9b      	subs	r3, r3, r2
 8009e68:	2201      	movs	r2, #1
 8009e6a:	4252      	negs	r2, r2
 8009e6c:	40da      	lsrs	r2, r3
 8009e6e:	3904      	subs	r1, #4
 8009e70:	680b      	ldr	r3, [r1, #0]
 8009e72:	4013      	ands	r3, r2
 8009e74:	600b      	str	r3, [r1, #0]
 8009e76:	e7d1      	b.n	8009e1c <__hexnan+0xec>
 8009e78:	3f04      	subs	r7, #4
 8009e7a:	e7cf      	b.n	8009e1c <__hexnan+0xec>
 8009e7c:	2004      	movs	r0, #4
 8009e7e:	e7d6      	b.n	8009e2e <__hexnan+0xfe>

08009e80 <__ascii_mbtowc>:
 8009e80:	b082      	sub	sp, #8
 8009e82:	2900      	cmp	r1, #0
 8009e84:	d100      	bne.n	8009e88 <__ascii_mbtowc+0x8>
 8009e86:	a901      	add	r1, sp, #4
 8009e88:	1e10      	subs	r0, r2, #0
 8009e8a:	d006      	beq.n	8009e9a <__ascii_mbtowc+0x1a>
 8009e8c:	2b00      	cmp	r3, #0
 8009e8e:	d006      	beq.n	8009e9e <__ascii_mbtowc+0x1e>
 8009e90:	7813      	ldrb	r3, [r2, #0]
 8009e92:	600b      	str	r3, [r1, #0]
 8009e94:	7810      	ldrb	r0, [r2, #0]
 8009e96:	1e43      	subs	r3, r0, #1
 8009e98:	4198      	sbcs	r0, r3
 8009e9a:	b002      	add	sp, #8
 8009e9c:	4770      	bx	lr
 8009e9e:	2002      	movs	r0, #2
 8009ea0:	4240      	negs	r0, r0
 8009ea2:	e7fa      	b.n	8009e9a <__ascii_mbtowc+0x1a>

08009ea4 <_realloc_r>:
 8009ea4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009ea6:	0006      	movs	r6, r0
 8009ea8:	000c      	movs	r4, r1
 8009eaa:	0015      	movs	r5, r2
 8009eac:	2900      	cmp	r1, #0
 8009eae:	d105      	bne.n	8009ebc <_realloc_r+0x18>
 8009eb0:	0011      	movs	r1, r2
 8009eb2:	f7fc febf 	bl	8006c34 <_malloc_r>
 8009eb6:	0004      	movs	r4, r0
 8009eb8:	0020      	movs	r0, r4
 8009eba:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8009ebc:	2a00      	cmp	r2, #0
 8009ebe:	d103      	bne.n	8009ec8 <_realloc_r+0x24>
 8009ec0:	f7fc fe42 	bl	8006b48 <_free_r>
 8009ec4:	002c      	movs	r4, r5
 8009ec6:	e7f7      	b.n	8009eb8 <_realloc_r+0x14>
 8009ec8:	f000 f8c7 	bl	800a05a <_malloc_usable_size_r>
 8009ecc:	0007      	movs	r7, r0
 8009ece:	4285      	cmp	r5, r0
 8009ed0:	d802      	bhi.n	8009ed8 <_realloc_r+0x34>
 8009ed2:	0843      	lsrs	r3, r0, #1
 8009ed4:	42ab      	cmp	r3, r5
 8009ed6:	d3ef      	bcc.n	8009eb8 <_realloc_r+0x14>
 8009ed8:	0029      	movs	r1, r5
 8009eda:	0030      	movs	r0, r6
 8009edc:	f7fc feaa 	bl	8006c34 <_malloc_r>
 8009ee0:	9001      	str	r0, [sp, #4]
 8009ee2:	2800      	cmp	r0, #0
 8009ee4:	d101      	bne.n	8009eea <_realloc_r+0x46>
 8009ee6:	9c01      	ldr	r4, [sp, #4]
 8009ee8:	e7e6      	b.n	8009eb8 <_realloc_r+0x14>
 8009eea:	002a      	movs	r2, r5
 8009eec:	42bd      	cmp	r5, r7
 8009eee:	d900      	bls.n	8009ef2 <_realloc_r+0x4e>
 8009ef0:	003a      	movs	r2, r7
 8009ef2:	0021      	movs	r1, r4
 8009ef4:	9801      	ldr	r0, [sp, #4]
 8009ef6:	f7ff fc0d 	bl	8009714 <memcpy>
 8009efa:	0021      	movs	r1, r4
 8009efc:	0030      	movs	r0, r6
 8009efe:	f7fc fe23 	bl	8006b48 <_free_r>
 8009f02:	e7f0      	b.n	8009ee6 <_realloc_r+0x42>

08009f04 <_strtoul_l.isra.0>:
 8009f04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009f06:	001e      	movs	r6, r3
 8009f08:	4b3e      	ldr	r3, [pc, #248]	@ (800a004 <_strtoul_l.isra.0+0x100>)
 8009f0a:	0017      	movs	r7, r2
 8009f0c:	000c      	movs	r4, r1
 8009f0e:	469c      	mov	ip, r3
 8009f10:	2208      	movs	r2, #8
 8009f12:	b085      	sub	sp, #20
 8009f14:	9003      	str	r0, [sp, #12]
 8009f16:	9100      	str	r1, [sp, #0]
 8009f18:	0023      	movs	r3, r4
 8009f1a:	4661      	mov	r1, ip
 8009f1c:	781d      	ldrb	r5, [r3, #0]
 8009f1e:	3401      	adds	r4, #1
 8009f20:	5d48      	ldrb	r0, [r1, r5]
 8009f22:	0001      	movs	r1, r0
 8009f24:	4011      	ands	r1, r2
 8009f26:	4210      	tst	r0, r2
 8009f28:	d1f6      	bne.n	8009f18 <_strtoul_l.isra.0+0x14>
 8009f2a:	2d2d      	cmp	r5, #45	@ 0x2d
 8009f2c:	d112      	bne.n	8009f54 <_strtoul_l.isra.0+0x50>
 8009f2e:	7825      	ldrb	r5, [r4, #0]
 8009f30:	1c9c      	adds	r4, r3, #2
 8009f32:	2301      	movs	r3, #1
 8009f34:	9302      	str	r3, [sp, #8]
 8009f36:	2210      	movs	r2, #16
 8009f38:	0033      	movs	r3, r6
 8009f3a:	4393      	bics	r3, r2
 8009f3c:	d116      	bne.n	8009f6c <_strtoul_l.isra.0+0x68>
 8009f3e:	2d30      	cmp	r5, #48	@ 0x30
 8009f40:	d10e      	bne.n	8009f60 <_strtoul_l.isra.0+0x5c>
 8009f42:	2120      	movs	r1, #32
 8009f44:	7823      	ldrb	r3, [r4, #0]
 8009f46:	438b      	bics	r3, r1
 8009f48:	2b58      	cmp	r3, #88	@ 0x58
 8009f4a:	d109      	bne.n	8009f60 <_strtoul_l.isra.0+0x5c>
 8009f4c:	7865      	ldrb	r5, [r4, #1]
 8009f4e:	3402      	adds	r4, #2
 8009f50:	2610      	movs	r6, #16
 8009f52:	e00b      	b.n	8009f6c <_strtoul_l.isra.0+0x68>
 8009f54:	9102      	str	r1, [sp, #8]
 8009f56:	2d2b      	cmp	r5, #43	@ 0x2b
 8009f58:	d1ed      	bne.n	8009f36 <_strtoul_l.isra.0+0x32>
 8009f5a:	7825      	ldrb	r5, [r4, #0]
 8009f5c:	1c9c      	adds	r4, r3, #2
 8009f5e:	e7ea      	b.n	8009f36 <_strtoul_l.isra.0+0x32>
 8009f60:	2e00      	cmp	r6, #0
 8009f62:	d1f5      	bne.n	8009f50 <_strtoul_l.isra.0+0x4c>
 8009f64:	360a      	adds	r6, #10
 8009f66:	2d30      	cmp	r5, #48	@ 0x30
 8009f68:	d100      	bne.n	8009f6c <_strtoul_l.isra.0+0x68>
 8009f6a:	3e02      	subs	r6, #2
 8009f6c:	2001      	movs	r0, #1
 8009f6e:	0031      	movs	r1, r6
 8009f70:	4240      	negs	r0, r0
 8009f72:	f7f6 f8e5 	bl	8000140 <__udivsi3>
 8009f76:	9001      	str	r0, [sp, #4]
 8009f78:	2001      	movs	r0, #1
 8009f7a:	0031      	movs	r1, r6
 8009f7c:	4240      	negs	r0, r0
 8009f7e:	f7f6 f965 	bl	800024c <__aeabi_uidivmod>
 8009f82:	2300      	movs	r3, #0
 8009f84:	2201      	movs	r2, #1
 8009f86:	0018      	movs	r0, r3
 8009f88:	4694      	mov	ip, r2
 8009f8a:	002a      	movs	r2, r5
 8009f8c:	3a30      	subs	r2, #48	@ 0x30
 8009f8e:	2a09      	cmp	r2, #9
 8009f90:	d812      	bhi.n	8009fb8 <_strtoul_l.isra.0+0xb4>
 8009f92:	0015      	movs	r5, r2
 8009f94:	42ae      	cmp	r6, r5
 8009f96:	dd1e      	ble.n	8009fd6 <_strtoul_l.isra.0+0xd2>
 8009f98:	1c5a      	adds	r2, r3, #1
 8009f9a:	d00a      	beq.n	8009fb2 <_strtoul_l.isra.0+0xae>
 8009f9c:	2301      	movs	r3, #1
 8009f9e:	9a01      	ldr	r2, [sp, #4]
 8009fa0:	425b      	negs	r3, r3
 8009fa2:	4282      	cmp	r2, r0
 8009fa4:	d305      	bcc.n	8009fb2 <_strtoul_l.isra.0+0xae>
 8009fa6:	d101      	bne.n	8009fac <_strtoul_l.isra.0+0xa8>
 8009fa8:	42a9      	cmp	r1, r5
 8009faa:	db11      	blt.n	8009fd0 <_strtoul_l.isra.0+0xcc>
 8009fac:	4663      	mov	r3, ip
 8009fae:	4370      	muls	r0, r6
 8009fb0:	1828      	adds	r0, r5, r0
 8009fb2:	7825      	ldrb	r5, [r4, #0]
 8009fb4:	3401      	adds	r4, #1
 8009fb6:	e7e8      	b.n	8009f8a <_strtoul_l.isra.0+0x86>
 8009fb8:	002a      	movs	r2, r5
 8009fba:	3a41      	subs	r2, #65	@ 0x41
 8009fbc:	2a19      	cmp	r2, #25
 8009fbe:	d801      	bhi.n	8009fc4 <_strtoul_l.isra.0+0xc0>
 8009fc0:	3d37      	subs	r5, #55	@ 0x37
 8009fc2:	e7e7      	b.n	8009f94 <_strtoul_l.isra.0+0x90>
 8009fc4:	002a      	movs	r2, r5
 8009fc6:	3a61      	subs	r2, #97	@ 0x61
 8009fc8:	2a19      	cmp	r2, #25
 8009fca:	d804      	bhi.n	8009fd6 <_strtoul_l.isra.0+0xd2>
 8009fcc:	3d57      	subs	r5, #87	@ 0x57
 8009fce:	e7e1      	b.n	8009f94 <_strtoul_l.isra.0+0x90>
 8009fd0:	2301      	movs	r3, #1
 8009fd2:	425b      	negs	r3, r3
 8009fd4:	e7ed      	b.n	8009fb2 <_strtoul_l.isra.0+0xae>
 8009fd6:	1c5a      	adds	r2, r3, #1
 8009fd8:	d107      	bne.n	8009fea <_strtoul_l.isra.0+0xe6>
 8009fda:	2222      	movs	r2, #34	@ 0x22
 8009fdc:	9903      	ldr	r1, [sp, #12]
 8009fde:	0018      	movs	r0, r3
 8009fe0:	600a      	str	r2, [r1, #0]
 8009fe2:	2f00      	cmp	r7, #0
 8009fe4:	d109      	bne.n	8009ffa <_strtoul_l.isra.0+0xf6>
 8009fe6:	b005      	add	sp, #20
 8009fe8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009fea:	9a02      	ldr	r2, [sp, #8]
 8009fec:	2a00      	cmp	r2, #0
 8009fee:	d000      	beq.n	8009ff2 <_strtoul_l.isra.0+0xee>
 8009ff0:	4240      	negs	r0, r0
 8009ff2:	2f00      	cmp	r7, #0
 8009ff4:	d0f7      	beq.n	8009fe6 <_strtoul_l.isra.0+0xe2>
 8009ff6:	2b00      	cmp	r3, #0
 8009ff8:	d001      	beq.n	8009ffe <_strtoul_l.isra.0+0xfa>
 8009ffa:	1e63      	subs	r3, r4, #1
 8009ffc:	9300      	str	r3, [sp, #0]
 8009ffe:	9b00      	ldr	r3, [sp, #0]
 800a000:	603b      	str	r3, [r7, #0]
 800a002:	e7f0      	b.n	8009fe6 <_strtoul_l.isra.0+0xe2>
 800a004:	0800a611 	.word	0x0800a611

0800a008 <_strtoul_r>:
 800a008:	b510      	push	{r4, lr}
 800a00a:	f7ff ff7b 	bl	8009f04 <_strtoul_l.isra.0>
 800a00e:	bd10      	pop	{r4, pc}

0800a010 <__ascii_wctomb>:
 800a010:	0003      	movs	r3, r0
 800a012:	1e08      	subs	r0, r1, #0
 800a014:	d005      	beq.n	800a022 <__ascii_wctomb+0x12>
 800a016:	2aff      	cmp	r2, #255	@ 0xff
 800a018:	d904      	bls.n	800a024 <__ascii_wctomb+0x14>
 800a01a:	228a      	movs	r2, #138	@ 0x8a
 800a01c:	2001      	movs	r0, #1
 800a01e:	601a      	str	r2, [r3, #0]
 800a020:	4240      	negs	r0, r0
 800a022:	4770      	bx	lr
 800a024:	2001      	movs	r0, #1
 800a026:	700a      	strb	r2, [r1, #0]
 800a028:	e7fb      	b.n	800a022 <__ascii_wctomb+0x12>
	...

0800a02c <fiprintf>:
 800a02c:	b40e      	push	{r1, r2, r3}
 800a02e:	b517      	push	{r0, r1, r2, r4, lr}
 800a030:	4c05      	ldr	r4, [pc, #20]	@ (800a048 <fiprintf+0x1c>)
 800a032:	ab05      	add	r3, sp, #20
 800a034:	cb04      	ldmia	r3!, {r2}
 800a036:	0001      	movs	r1, r0
 800a038:	6820      	ldr	r0, [r4, #0]
 800a03a:	9301      	str	r3, [sp, #4]
 800a03c:	f7fe fb7e 	bl	800873c <_vfiprintf_r>
 800a040:	bc1e      	pop	{r1, r2, r3, r4}
 800a042:	bc08      	pop	{r3}
 800a044:	b003      	add	sp, #12
 800a046:	4718      	bx	r3
 800a048:	2000001c 	.word	0x2000001c

0800a04c <abort>:
 800a04c:	2006      	movs	r0, #6
 800a04e:	b510      	push	{r4, lr}
 800a050:	f000 f834 	bl	800a0bc <raise>
 800a054:	2001      	movs	r0, #1
 800a056:	f7f8 fe05 	bl	8002c64 <_exit>

0800a05a <_malloc_usable_size_r>:
 800a05a:	1f0b      	subs	r3, r1, #4
 800a05c:	681b      	ldr	r3, [r3, #0]
 800a05e:	1f18      	subs	r0, r3, #4
 800a060:	2b00      	cmp	r3, #0
 800a062:	da01      	bge.n	800a068 <_malloc_usable_size_r+0xe>
 800a064:	580b      	ldr	r3, [r1, r0]
 800a066:	18c0      	adds	r0, r0, r3
 800a068:	4770      	bx	lr

0800a06a <_raise_r>:
 800a06a:	b570      	push	{r4, r5, r6, lr}
 800a06c:	0004      	movs	r4, r0
 800a06e:	000d      	movs	r5, r1
 800a070:	291f      	cmp	r1, #31
 800a072:	d904      	bls.n	800a07e <_raise_r+0x14>
 800a074:	2316      	movs	r3, #22
 800a076:	6003      	str	r3, [r0, #0]
 800a078:	2001      	movs	r0, #1
 800a07a:	4240      	negs	r0, r0
 800a07c:	bd70      	pop	{r4, r5, r6, pc}
 800a07e:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 800a080:	2b00      	cmp	r3, #0
 800a082:	d004      	beq.n	800a08e <_raise_r+0x24>
 800a084:	008a      	lsls	r2, r1, #2
 800a086:	189b      	adds	r3, r3, r2
 800a088:	681a      	ldr	r2, [r3, #0]
 800a08a:	2a00      	cmp	r2, #0
 800a08c:	d108      	bne.n	800a0a0 <_raise_r+0x36>
 800a08e:	0020      	movs	r0, r4
 800a090:	f000 f830 	bl	800a0f4 <_getpid_r>
 800a094:	002a      	movs	r2, r5
 800a096:	0001      	movs	r1, r0
 800a098:	0020      	movs	r0, r4
 800a09a:	f000 f819 	bl	800a0d0 <_kill_r>
 800a09e:	e7ed      	b.n	800a07c <_raise_r+0x12>
 800a0a0:	2a01      	cmp	r2, #1
 800a0a2:	d009      	beq.n	800a0b8 <_raise_r+0x4e>
 800a0a4:	1c51      	adds	r1, r2, #1
 800a0a6:	d103      	bne.n	800a0b0 <_raise_r+0x46>
 800a0a8:	2316      	movs	r3, #22
 800a0aa:	6003      	str	r3, [r0, #0]
 800a0ac:	2001      	movs	r0, #1
 800a0ae:	e7e5      	b.n	800a07c <_raise_r+0x12>
 800a0b0:	2100      	movs	r1, #0
 800a0b2:	0028      	movs	r0, r5
 800a0b4:	6019      	str	r1, [r3, #0]
 800a0b6:	4790      	blx	r2
 800a0b8:	2000      	movs	r0, #0
 800a0ba:	e7df      	b.n	800a07c <_raise_r+0x12>

0800a0bc <raise>:
 800a0bc:	b510      	push	{r4, lr}
 800a0be:	4b03      	ldr	r3, [pc, #12]	@ (800a0cc <raise+0x10>)
 800a0c0:	0001      	movs	r1, r0
 800a0c2:	6818      	ldr	r0, [r3, #0]
 800a0c4:	f7ff ffd1 	bl	800a06a <_raise_r>
 800a0c8:	bd10      	pop	{r4, pc}
 800a0ca:	46c0      	nop			@ (mov r8, r8)
 800a0cc:	2000001c 	.word	0x2000001c

0800a0d0 <_kill_r>:
 800a0d0:	2300      	movs	r3, #0
 800a0d2:	b570      	push	{r4, r5, r6, lr}
 800a0d4:	4d06      	ldr	r5, [pc, #24]	@ (800a0f0 <_kill_r+0x20>)
 800a0d6:	0004      	movs	r4, r0
 800a0d8:	0008      	movs	r0, r1
 800a0da:	0011      	movs	r1, r2
 800a0dc:	602b      	str	r3, [r5, #0]
 800a0de:	f7f8 fdb1 	bl	8002c44 <_kill>
 800a0e2:	1c43      	adds	r3, r0, #1
 800a0e4:	d103      	bne.n	800a0ee <_kill_r+0x1e>
 800a0e6:	682b      	ldr	r3, [r5, #0]
 800a0e8:	2b00      	cmp	r3, #0
 800a0ea:	d000      	beq.n	800a0ee <_kill_r+0x1e>
 800a0ec:	6023      	str	r3, [r4, #0]
 800a0ee:	bd70      	pop	{r4, r5, r6, pc}
 800a0f0:	200003ec 	.word	0x200003ec

0800a0f4 <_getpid_r>:
 800a0f4:	b510      	push	{r4, lr}
 800a0f6:	f7f8 fd9f 	bl	8002c38 <_getpid>
 800a0fa:	bd10      	pop	{r4, pc}

0800a0fc <_init>:
 800a0fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a0fe:	46c0      	nop			@ (mov r8, r8)
 800a100:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a102:	bc08      	pop	{r3}
 800a104:	469e      	mov	lr, r3
 800a106:	4770      	bx	lr

0800a108 <_fini>:
 800a108:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a10a:	46c0      	nop			@ (mov r8, r8)
 800a10c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a10e:	bc08      	pop	{r3}
 800a110:	469e      	mov	lr, r3
 800a112:	4770      	bx	lr
